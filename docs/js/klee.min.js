(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["Klee"] = factory();
	else
		root["Klee"] = factory();
})(self, function() {
return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/application.ts":
/*!****************************!*\
  !*** ./src/application.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Application": () => (/* binding */ Application)
/* harmony export */ });
/* harmony import */ var _canvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./canvas */ "./src/canvas.ts");
/* harmony import */ var _controller__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./controller */ "./src/controller.ts");
/* harmony import */ var _parser_blueprint_parser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./parser/blueprint-parser */ "./src/parser/blueprint-parser.ts");
/* harmony import */ var _scene__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./scene */ "./src/scene.ts");




class Application {
    constructor(element) {
        this._element = element;
        if (navigator.userAgent.indexOf("Firefox") > 0) {
            Application.firefox = true;
        }
        this._canvas = new _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas2D(element);
        this._scene = new _scene__WEBPACK_IMPORTED_MODULE_3__.Scene(this._canvas, this);
        this.initializeHtmlAttributes();
        this._parser = new _parser_blueprint_parser__WEBPACK_IMPORTED_MODULE_2__.BlueprintParser();
        this.loadBlueprintIntoScene(element.innerHTML);
        this._controller = new _controller__WEBPACK_IMPORTED_MODULE_1__.Controller(element, this);
        this._controller.registerAction({
            ctrl: true,
            keycode: 'KeyC',
            callback: this.copyBlueprintSelectionToClipboard.bind(this)
        });
        this._controller.registerAction({
            ctrl: false,
            keycode: 'Home',
            callback: this.recenterCamera.bind(this),
        });
        this._controller.registerAction({
            ctrl: true,
            keycode: 'KeyV',
            callback: this.pasteClipboardContentToCanvas.bind(this)
        });
        this._element.onpaste = (ev) => this.onPaste(ev);
        window.addEventListener('resize', this.refresh.bind(this), false);
    }
    get scene() {
        return this._scene;
    }
    get canvas() {
        return this._canvas;
    }
    static get isFirefox() {
        return this.firefox;
    }
    getBlueprint() {
        let textLines = [];
        this._scene.nodes.forEach(n => textLines = [].concat(textLines, n.sourceText));
        return textLines.join('\n');
    }
    initializeHtmlAttributes() {
        this._element.style.outline = 'none';
        let attrPaste = this._element.getAttributeNode("data-klee-paste");
        this.allowPaste = attrPaste?.value == "true" || false;
    }
    refresh() {
        this._element.width = this._element.offsetWidth;
        this._element.height = this._element.offsetHeight;
        this._scene.collectInteractables();
        this._scene.updateLayout();
        this._scene.refresh();
    }
    copyBlueprintSelectionToClipboard() {
        console.log("Copy selection");
        let textLines = [];
        this._scene.nodes.filter(n => n.selected).forEach(n => textLines = [].concat(textLines, n.sourceText));
        navigator.clipboard.writeText(textLines.join('\n'));
        return true;
    }
    pasteClipboardContentToCanvas(ev) {
        if (!this.allowPaste)
            return;
        if (Application.isFirefox) {
            return false;
        }
        console.log("Paste from clipboard");
        navigator.clipboard.readText().then((text) => {
            if (!text)
                return;
            this.loadBlueprintIntoScene(text);
        });
        return true;
    }
    onPaste(ev) {
        if (!this.allowPaste)
            return;
        console.log("Paste from clipboard");
        let text = ev.clipboardData.getData("text/plain");
        this.loadBlueprintIntoScene(text);
    }
    loadBlueprintIntoScene(text) {
        this._scene.unload();
        const nodes = this._parser.parseBlueprint(text);
        this._scene.load(nodes);
        this.refresh();
        this.recenterCamera();
    }
    recenterCamera() {
        // Move camera to the center of all nodes
        this._scene.camera.centerAbsolutePosition(this._scene.calculateCenterPoint());
        this.refresh();
        return true;
    }
    static registerInstance(element, app) {
        element.setAttribute("data-klee-instance", Application.instances.length.toString());
        Application.instances.push(app);
    }
    static getInstance(element) {
        let instanceAttr = element.getAttributeNode("data-klee-instance");
        if (instanceAttr) {
            let id = Number.parseInt(instanceAttr.value);
            if (!isNaN(id) && id < Application.instances.length) {
                let instance = Application.instances[id];
                return instance;
            }
        }
        return undefined;
    }
    static createOrGet(element) {
        let instance = this.getInstance(element);
        if (instance !== undefined) {
            return instance;
        }
        let app = new Application(element);
        Application.registerInstance(element, app);
        return app;
    }
}
Application.instances = [];


/***/ }),

/***/ "./src/camera.ts":
/*!***********************!*\
  !*** ./src/camera.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Camera": () => (/* binding */ Camera)
/* harmony export */ });
/* harmony import */ var _math_vector2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math/vector2 */ "./src/math/vector2.ts");

class Camera {
    constructor(canvas) {
        this._canvas = canvas;
        this._position = new _math_vector2__WEBPACK_IMPORTED_MODULE_0__.Vector2(0, 0);
    }
    get position() {
        return this._position;
    }
    prepareViewport() {
        this._canvas.translate(Math.round(this._position.x), Math.round(this._position.y));
    }
    moveRelative(value) {
        this._position = this._position.add(value);
    }
    centerAbsolutePosition(value) {
        this._position = new _math_vector2__WEBPACK_IMPORTED_MODULE_0__.Vector2(Math.round(value.x + this._canvas.width / 2), Math.round(value.y + this._canvas.height / 2));
    }
}


/***/ }),

/***/ "./src/canvas.ts":
/*!***********************!*\
  !*** ./src/canvas.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Canvas2D": () => (/* binding */ Canvas2D)
/* harmony export */ });
class Canvas2D {
    constructor(element) {
        this._element = element;
        this._context = this._element.getContext('2d', { alpha: false });
        this._PI_TIMES_TWO = Math.PI * 2;
    }
    getBoundingClientRect() {
        return this._element.getBoundingClientRect();
    }
    fillStyle(style) {
        this._context.fillStyle = style;
        return this;
    }
    strokeStyle(style) {
        this._context.strokeStyle = style;
        return this;
    }
    beginPath() {
        this._context.beginPath();
        return this;
    }
    closePath() {
        this._context.closePath();
        return this;
    }
    drawImage(image, x, y, width, height) {
        this._context.drawImage(image, x, y, width, height);
        return this;
    }
    roundedRectangle(x, y, width, height, radius) {
        let radiusTopLeft;
        let radiusTopRight;
        let radiusBottomLeft;
        let radiusBottomRight;
        if (radius instanceof Object) {
            let cornerValues = radius;
            radiusTopLeft = cornerValues.radiusTopLeft;
            radiusTopRight = cornerValues.radiusTopRight;
            radiusBottomLeft = cornerValues.radiusBottomLeft;
            radiusBottomRight = cornerValues.radiusBottomRight;
        }
        else {
            radiusTopLeft = radius;
            radiusTopRight = radius;
            radiusBottomLeft = radius;
            radiusBottomRight = radius;
        }
        this._context.beginPath();
        this._context.moveTo(x + radiusTopLeft, y);
        this._context.lineTo(x + width - radiusTopRight, y);
        this._context.quadraticCurveTo(x + width, y, x + width, y + radiusTopRight);
        this._context.lineTo(x + width, y + height - radiusBottomRight);
        this._context.quadraticCurveTo(x + width, y + height, x + width - radiusBottomRight, y + height);
        this._context.lineTo(x + radiusBottomLeft, y + height);
        this._context.quadraticCurveTo(x, y + height, x, y + height - radiusBottomLeft);
        this._context.lineTo(x, y + radiusTopLeft);
        this._context.quadraticCurveTo(x, y, x + radiusTopLeft, y);
        this._context.closePath();
        return this;
    }
    lineTo(x, y) {
        this._context.lineTo(x, y);
        return this;
    }
    quadraticCurveTo(controlX, controlY, x, y) {
        this._context.quadraticCurveTo(controlX, controlY, x, y);
        return this;
    }
    fill(value, fillRule) {
        if (value instanceof Path2D) {
            this._context.fill(value, fillRule);
        }
        else if (value !== undefined) {
            this._context.fill(value);
        }
        else {
            this._context.fill();
        }
        return this;
    }
    stroke(path) {
        if (path != undefined) {
            this._context.stroke(path);
        }
        else {
            this._context.stroke();
        }
        return this;
    }
    clear() {
        // Use the identity matrix while clearing the canvas
        this._context.setTransform(1, 0, 0, 1, 0, 0);
        this._context.clearRect(0, 0, this._element.width, this._element.height);
        return this;
    }
    translate(x, y) {
        this._context.translate(x, y);
        return this;
    }
    fillRect(x, y, width, height) {
        this._context.fillRect(x, y, width, height);
        return this;
    }
    strokeRect(x, y, width, height) {
        this._context.strokeRect(x, y, width, height);
        return this;
    }
    setLineDash(segments) {
        this._context.setLineDash(segments);
        return this;
    }
    fillCircle(x, y, radius) {
        this._context.beginPath();
        this._context.arc(x, y, radius, 0, this._PI_TIMES_TWO);
        this._context.fill();
        return this;
    }
    strokeCircle(x, y, radius) {
        this._context.beginPath();
        this._context.arc(x, y, radius, 0, this._PI_TIMES_TWO);
        this._context.stroke();
        return this;
    }
    fillText(text, x, y, maxWidth) {
        this._context.fillText(text, x, y, maxWidth);
        return this;
    }
    strokeText(text, x, y, maxWidth) {
        this._context.strokeText(text, x, y, maxWidth);
        return this;
    }
    shadow(offset, blur, color) {
        this._context.shadowOffsetX = offset.x;
        this._context.shadowOffsetY = offset.y;
        this._context.shadowBlur = blur;
        this._context.shadowColor = color;
        return this;
    }
    lineWidth(width) {
        this._context.lineWidth = width;
        return this;
    }
    moveTo(x, y) {
        this._context.moveTo(x, y);
        return this;
    }
    bezierCurveTo(controlPoint1x, controlPoint1y, controlPoint2x, controlPoint2y, x, y) {
        this._context.bezierCurveTo(controlPoint1x, controlPoint1y, controlPoint2x, controlPoint2y, x, y);
        return this;
    }
    save() {
        this._context.save();
        return this;
    }
    restore() {
        this._context.restore();
        return this;
    }
    font(font) {
        this._context.font = font;
        return this;
    }
    textAlign(textAlign) {
        this._context.textAlign = textAlign;
        return this;
    }
    getContext() {
        return this._context;
    }
    get width() {
        return this._element.width;
    }
    get height() {
        return this._element.height;
    }
}


/***/ }),

/***/ "./src/constants.ts":
/*!**************************!*\
  !*** ./src/constants.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Constants": () => (/* binding */ Constants)
/* harmony export */ });
class Constants {
}
Constants.NODE_FONT = "12px sans-serif";
Constants.NODE_HEADER_FONT = "bold 12px sans-serif";
Constants.NODE_BACKGROUND_COLOR = "rgba(15,15,15,0.6)";
Constants.NODE_TEXT_COLOR = "rgb(240,240,240)";
Constants.NODE_SUBTITLE_COLOR = "rgb(170,170,170)";
Constants.NODE_MATHFUNC_TITLE_FONT = "bold 24px sans-serif";
Constants.NODE_MATHFUNC_SUBTITLE_FONT = "bold 12px sans-serif";
Constants.NODE_MATHFUNC_TITLE_COLOR = "rgb(142,142,142)";
Constants.DEFAULT_VALUE_BOX_TEXT_PADDING = 4;
Constants.DEFAULT_VALUE_BOX_MARGIN_LEFT = 8;
Constants.DEFAULT_FUNC_BACKGROUND_COLOR = '78, 117, 142';
Constants.DEFAULT_FUNC_PURE_BACKGROUND_COLOR = '92, 154, 87';
Constants.DEFAULT_FUNC_ENTRY_BACKGROUND_COLOR = '109, 19, 132';
Constants.DEFAULT_BOX_HEIGHT = 16;
Constants.DEFAULT_BOX_RADIUS = 2;


/***/ }),

/***/ "./src/controller.ts":
/*!***************************!*\
  !*** ./src/controller.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Controller": () => (/* binding */ Controller)
/* harmony export */ });
/* harmony import */ var _application__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./application */ "./src/application.ts");
/* harmony import */ var _math_boundingbox__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math/boundingbox */ "./src/math/boundingbox.ts");
/* harmony import */ var _math_vector2__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./math/vector2 */ "./src/math/vector2.ts");
/* harmony import */ var _controls_interfaces_interactable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./controls/interfaces/interactable */ "./src/controls/interfaces/interactable.ts");




var MouseButton;
(function (MouseButton) {
    MouseButton[MouseButton["Left"] = 0] = "Left";
    MouseButton[MouseButton["Middle"] = 1] = "Middle";
    MouseButton[MouseButton["Right"] = 2] = "Right";
})(MouseButton || (MouseButton = {}));
class Controller {
    constructor(element, app) {
        this._actions = [];
        this.hoveredControls = [];
        this.app = app;
        this._element = element;
        if (_application__WEBPACK_IMPORTED_MODULE_0__.Application.isFirefox) {
            this._element.setAttribute("contenteditable", ""); // allow pasting to the canvas
            this._element.style.cursor = "default";
            this._element.style.color = "transparent"; // Hide caret
        }
        // A tabindex higher than -1 is needed so that html element reseaves focus events
        // which is required that the key events get fired.
        element.tabIndex = 0;
        element.onmousedown = (ev) => this.onMouseDown(ev);
        element.onmouseup = (ev) => this.onMouseUp(ev);
        element.onmousemove = (ev) => this.onMouseMove(ev);
        element.onmouseenter = (ev) => this.onMouseEnter(ev);
        element.onmouseleave = (ev) => this.onMouseLeave(ev);
        element.onkeydown = (ev) => this.onKeydown(ev);
        element.oncontextmenu = (ev) => this.onContextMenu(ev);
        this.registerAction({
            ctrl: true,
            keycode: 'KeyA',
            callback: this.selectAllNodes.bind(this),
        });
    }
    registerAction(action) {
        this._actions.push(action);
    }
    onKeydown(ev) {
        for (const action of this._actions.filter(a => a.keycode === ev.code)) {
            if (action.ctrl !== ev.ctrlKey)
                continue;
            if (action.callback(ev)) {
                ev.preventDefault();
            }
        }
    }
    onMouseDown(ev) {
        this._mouseDownData = {
            buttonType: ev.button,
            position: this.getMousePosition(ev)
        };
        this._mousePositionOfPreviousMove = this._mouseDownData.position;
        const mouseAbsolutePos = this.getAbsoluteMousePosition(ev);
        let controls = this.getIntersectingControls(mouseAbsolutePos, new _math_vector2__WEBPACK_IMPORTED_MODULE_2__.Vector2(0, 0));
        controls = controls.sort((c1, c2) => { return c1.ZIndex - c2.ZIndex; });
        for (let control of controls) {
            if (control.onMouseDown(ev))
                break;
        }
        for (let control of this.hoveredControls) {
            if (controls.indexOf(control) < 0) {
                this.hoveredControls.splice(this.hoveredControls.indexOf(control), 1);
                if ((0,_controls_interfaces_interactable__WEBPACK_IMPORTED_MODULE_3__.isInteractableControl)(control)) {
                    control.onMouseLeave(ev);
                }
            }
        }
        //Application.scene.refresh();
    }
    onMouseUp(ev) {
        const currentMousePosition = this.getMousePosition(ev);
        const mouseAbsolutePos = this.getAbsoluteMousePosition(ev);
        let consumed = false;
        let controls = this.getIntersectingControls(mouseAbsolutePos, new _math_vector2__WEBPACK_IMPORTED_MODULE_2__.Vector2(0, 0));
        controls = controls.sort((c1, c2) => { return c1.ZIndex - c2.ZIndex; });
        for (let control of controls) {
            if ((0,_controls_interfaces_interactable__WEBPACK_IMPORTED_MODULE_3__.isInteractableControl)(control)) {
                if (consumed = control.onMouseUp(ev))
                    break;
            }
        }
        for (let control of this.hoveredControls) {
            if (controls.indexOf(control) < 0) {
                this.hoveredControls.splice(this.hoveredControls.indexOf(control), 1);
                if ((0,_controls_interfaces_interactable__WEBPACK_IMPORTED_MODULE_3__.isInteractableControl)(control)) {
                    control.onMouseLeave(ev);
                }
            }
        }
        if (this._mouseDownData && !consumed) {
            const delta = currentMousePosition.subtract(this._mouseDownData.position);
            if (delta.x == 0 && delta.y == 0) {
                this.app.scene.nodes.forEach(c => c.selected = false);
                this.selectIntersectingControls(mouseAbsolutePos, new _math_vector2__WEBPACK_IMPORTED_MODULE_2__.Vector2(0, 0));
            }
        }
        this._mouseDownData = null;
        this.app.scene.refresh();
    }
    onMouseMove(ev) {
        const currentMousePosition = this.getMousePosition(ev);
        const mouseAbsolutePos = this.getAbsoluteMousePosition(ev);
        if (this._mouseDownData) {
            if (this._mouseDownData.buttonType === MouseButton.Right) {
                const delta = currentMousePosition.subtract(this._mousePositionOfPreviousMove);
                this._mousePositionOfPreviousMove = currentMousePosition;
                this.app.scene.camera.moveRelative(delta);
                this.app.scene.refresh();
                return false;
            }
            if (this._mouseDownData.buttonType === MouseButton.Left) {
                const delta = currentMousePosition.subtract(this._mouseDownData.position);
                this.app.scene.refresh();
                const mouseDownAbsolutePos = this.getAbsoluteMouseDownPosition(ev);
                this.drawMouseSelection(mouseDownAbsolutePos.x, mouseDownAbsolutePos.y, delta.x, delta.y);
                this.selectIntersectingControls(mouseDownAbsolutePos, delta);
                return false;
            }
        }
        let controls = this.getIntersectingControls(mouseAbsolutePos, new _math_vector2__WEBPACK_IMPORTED_MODULE_2__.Vector2(0, 0));
        for (let control of controls) {
            if (this.hoveredControls.indexOf(control) < 0) {
                this.hoveredControls.push(control);
                if ((0,_controls_interfaces_interactable__WEBPACK_IMPORTED_MODULE_3__.isInteractableControl)(control)) {
                    control.onMouseEnter(ev);
                }
            }
        }
        controls = controls.sort((c1, c2) => { return c1.ZIndex - c2.ZIndex; });
        for (let control of controls) {
            if ((0,_controls_interfaces_interactable__WEBPACK_IMPORTED_MODULE_3__.isInteractableControl)(control)) {
                if (control.onMouseMove(ev))
                    break;
            }
        }
        for (let control of this.hoveredControls) {
            if (controls.indexOf(control) < 0) {
                this.hoveredControls.splice(this.hoveredControls.indexOf(control), 1);
                if ((0,_controls_interfaces_interactable__WEBPACK_IMPORTED_MODULE_3__.isInteractableControl)(control)) {
                    control.onMouseLeave(ev);
                }
            }
        }
        return false;
    }
    onMouseEnter(ev) {
        if (ev.buttons == 0) {
            this._mouseDownData = null;
        }
    }
    onMouseLeave(ev) {
        if (this._mouseDownData) {
            if (this._mouseDownData.buttonType === MouseButton.Left) {
                this.app.scene.nodes.forEach(c => c.selected = false);
                this.app.scene.refresh();
                return false;
            }
        }
    }
    onContextMenu(ev) {
        ev.preventDefault();
        ev.stopPropagation();
        return false;
    }
    drawMouseSelection(x, y, sizeX, sizeY) {
        this.app.canvas
            .save()
            .setLineDash([6])
            .strokeStyle('#fff')
            .lineWidth(2)
            .strokeRect(x, y, sizeX, sizeY)
            .restore();
    }
    selectIntersectingControls(pos, size) {
        // Unselect all
        this.app.scene.nodes.forEach(c => c.selected = false);
        const intersectingControls = this.getIntersectingNodeControls(pos, size);
        intersectingControls.forEach(c => c.selected = true);
    }
    getIntersectingNodeControls(pos, size) {
        return this.app.scene.nodes.filter(n => _math_boundingbox__WEBPACK_IMPORTED_MODULE_1__.BoundingBox.checkIntersection(pos, size, n.position, n.size)) || [];
    }
    getIntersectingControls(pos, size) {
        return this.app.scene.interactables.filter(n => _math_boundingbox__WEBPACK_IMPORTED_MODULE_1__.BoundingBox.checkIntersection(pos, size, n.getAbsolutPosition(), n.size)) || [];
    }
    getAbsoluteMousePosition(ev) {
        const cameraPos = this.app.scene.camera.position;
        const currentMousePosition = this.getMousePosition(ev);
        const mouseAbsolutePos = new _math_vector2__WEBPACK_IMPORTED_MODULE_2__.Vector2(currentMousePosition.x - cameraPos.x, currentMousePosition.y - cameraPos.y);
        return mouseAbsolutePos;
    }
    getAbsoluteMouseDownPosition(ev) {
        const cameraPos = this.app.scene.camera.position;
        const mouseAbsolutePos = new _math_vector2__WEBPACK_IMPORTED_MODULE_2__.Vector2(this._mouseDownData.position.x - cameraPos.x, this._mouseDownData.position.y - cameraPos.y);
        return mouseAbsolutePos;
    }
    selectAllNodes() {
        this.app.scene.nodes.forEach(c => c.selected = true);
        this.app.scene.refresh();
        return true;
    }
    getMousePosition(ev) {
        let rect = this._element.getBoundingClientRect();
        return new _math_vector2__WEBPACK_IMPORTED_MODULE_2__.Vector2(ev.clientX - rect.left, ev.clientY - rect.top);
    }
}
function InteractableControl() {
    throw new Error("Function not implemented.");
}


/***/ }),

/***/ "./src/controls/background.ts":
/*!************************************!*\
  !*** ./src/controls/background.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Background": () => (/* binding */ Background)
/* harmony export */ });
/* harmony import */ var _control__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./control */ "./src/controls/control.ts");

// TODO: Don't implement as background control. Move to camera
class Background extends _control__WEBPACK_IMPORTED_MODULE_0__.Control {
    constructor(camera) {
        super(0, 0, -1000);
        this.camera = camera;
        this.ready = false;
        this.image = new Image();
        this.image.onload = (ev) => this.onLoaded(ev);
        this.image.src = Background.BACKGROUND_SVG;
    }
    initialize() {
        if (this.loaded)
            this.initPattern();
    }
    draw(canvas) {
        if (!this.ready)
            return;
        canvas.fillStyle(this.pattern)
            .fillRect(-this.camera.position.x, -this.camera.position.y, canvas.width, canvas.height);
    }
    onLoaded(ev) {
        this.loaded = true;
        if (this.app) {
            this.initPattern();
        }
    }
    initPattern() {
        this.pattern = this.app.canvas.getContext().createPattern(this.image, 'repeat');
        this.ready = true;
        this.app.scene.refresh();
    }
}
Background.BACKGROUND_SVG = 'data:image/svg+xml,' + escape('<svg width="96px" height="96px" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" xmlns:serif="http://www.serif.com/" style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:1.5;"><rect x="0" y="0" width="96.375" height="96" style="fill:#262626;stroke:#262626;stroke-width:0.75px;"/><g>        <path d="M96.375,48.389l-96,-0" style="fill:none;stroke:#353535;stroke-width:0.75px;"/>        <path d="M96.375,60.389l-96,-0" style="fill:none;stroke:#353535;stroke-width:0.75px;"/>        <path d="M96.375,72.389l-96,-0" style="fill:none;stroke:#353535;stroke-width:0.75px;"/>        <path d="M96.375,84.389l-96,-0" style="fill:none;stroke:#353535;stroke-width:0.75px;"/>        <path d="M96.375,36.389l-96,-0" style="fill:none;stroke:#353535;stroke-width:0.75px;"/>        <path d="M96.375,24.389l-96,-0" style="fill:none;stroke:#353535;stroke-width:0.75px;"/>        <path d="M96.375,12.389l-96,-0" style="fill:none;stroke:#353535;stroke-width:0.75px;"/></g><path d="M48.375,96l-0,-96" style="fill:none;stroke:#353535;stroke-width:0.75px;"/><path d="M36.375,96l-0,-96" style="fill:none;stroke:#353535;stroke-width:0.75px;"/><path d="M24.375,96l-0,-96" style="fill:none;stroke:#353535;stroke-width:0.75px;"/><path d="M12.375,96l-0,-96" style="fill:none;stroke:#353535;stroke-width:0.75px;"/><path d="M60.375,96l-0,-96" style="fill:none;stroke:#353535;stroke-width:0.75px;"/><path d="M72.375,96l-0,-96" style="fill:none;stroke:#353535;stroke-width:0.75px;"/><path d="M84.375,96l-0,-96" style="fill:none;stroke:#353535;stroke-width:0.75px;"/><path d="M96,0l-96,0l0,96" style="fill:none;stroke:#161616;stroke-width:1.55px;"/></svg>');


/***/ }),

/***/ "./src/controls/check-box.control.ts":
/*!*******************************************!*\
  !*** ./src/controls/check-box.control.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CheckBoxControl": () => (/* binding */ CheckBoxControl)
/* harmony export */ });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _user_control__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./user-control */ "./src/controls/user-control.ts");
/* harmony import */ var _utils_icon_library__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/icon-library */ "./src/controls/utils/icon-library.ts");



class CheckBoxControl extends _user_control__WEBPACK_IMPORTED_MODULE_1__.UserControl {
    constructor(isTrue) {
        super();
        this.isTrue = isTrue;
        this.width = _constants__WEBPACK_IMPORTED_MODULE_0__.Constants.DEFAULT_BOX_HEIGHT;
        this.height = _constants__WEBPACK_IMPORTED_MODULE_0__.Constants.DEFAULT_BOX_HEIGHT;
    }
    onDraw(canvas) {
        const icon = new Path2D(_utils_icon_library__WEBPACK_IMPORTED_MODULE_2__.IconLibrary.DEFAULT_VALUE_BOOL_TRUE);
        canvas // Draws background box
            .roundedRectangle(0, 0 - _constants__WEBPACK_IMPORTED_MODULE_0__.Constants.DEFAULT_BOX_HEIGHT / 2, _constants__WEBPACK_IMPORTED_MODULE_0__.Constants.DEFAULT_BOX_HEIGHT - 1, _constants__WEBPACK_IMPORTED_MODULE_0__.Constants.DEFAULT_BOX_HEIGHT - 1, _constants__WEBPACK_IMPORTED_MODULE_0__.Constants.DEFAULT_BOX_RADIUS)
            .fillStyle('rgba(50,50,50,0.5)')
            .fill();
        canvas // Draws stroke
            .strokeStyle('rgba(70,70,70,0.7)')
            .lineWidth(2)
            .stroke();
        if (this.isTrue) {
            canvas
                .fillStyle(_constants__WEBPACK_IMPORTED_MODULE_0__.Constants.NODE_TEXT_COLOR)
                .translate(-0.5, -_constants__WEBPACK_IMPORTED_MODULE_0__.Constants.DEFAULT_BOX_HEIGHT / 2)
                .fill(icon, 'evenodd');
        }
    }
}


/***/ }),

/***/ "./src/controls/container.ts":
/*!***********************************!*\
  !*** ./src/controls/container.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Container": () => (/* binding */ Container)
/* harmony export */ });
/* harmony import */ var _math_vector2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math/vector2 */ "./src/math/vector2.ts");
/* harmony import */ var _user_control__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./user-control */ "./src/controls/user-control.ts");


class Container extends _user_control__WEBPACK_IMPORTED_MODULE_1__.UserControl {
    constructor(x, y, zIndex) {
        super(x, y, zIndex);
        this.drawChildren = true;
        this.children = [];
    }
    refreshLayout() {
        super.refreshLayout();
        this.applyFills();
    }
    draw(canvas) {
        if (!this.visible) {
            return;
        }
        canvas.save();
        canvas.translate(Math.round(this.position.x), Math.round(this.position.y));
        this.onDraw(canvas);
        if (this.drawChildren) {
            canvas.save();
            canvas.translate(Math.round(this.padding.left), Math.round(this.padding.top));
            for (let child of this.children) {
                child.draw(canvas);
            }
            canvas.restore();
        }
        canvas.restore();
    }
    add(child) {
        this.children.push(child);
        child.parent = this;
        return child;
    }
    insert(child, index) {
        this.children.splice(index, 0, child);
        child.parent = this;
        return child;
    }
    getChildren() {
        return this.children;
    }
    getCalculatedSize() {
        let size = new _math_vector2__WEBPACK_IMPORTED_MODULE_0__.Vector2(0, 0);
        for (let child of this.children) {
            if (child.ignoreLayout)
                continue;
            let childSize = child.getCalculatedSize();
            size.x = Math.max(size.x, childSize.x);
            size.y = Math.max(size.y, childSize.y);
        }
        size.x += this.padding.left + this.padding.right;
        size.y += this.padding.top + this.padding.bottom;
        size.x = Math.max(size.x, (this.minWidth || 0));
        size.y = Math.max(size.y, (this.minHeight || 0));
        this.controlSize = size.copy();
        for (let child of this.children) {
            if (child.fillParentHorizontal) {
                child.desiredWidth = this.size.x - this.padding.left - this.padding.right;
            }
            if (child.fillParentVertical) {
                child.desiredHeight = this.size.y - this.padding.top - this.padding.top;
            }
        }
        return size;
    }
    isDirty() {
        let dirty = this.dirty;
        for (let child of this.children) {
            dirty = dirty || child.isDirty();
        }
        return dirty;
    }
    applyFills(remainingSize) {
        for (let child of this.children) {
            if (child instanceof Container) {
                child.applyFills();
            }
        }
    }
}


/***/ }),

/***/ "./src/controls/control.ts":
/*!*********************************!*\
  !*** ./src/controls/control.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Control": () => (/* binding */ Control)
/* harmony export */ });
/* harmony import */ var _math_vector2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math/vector2 */ "./src/math/vector2.ts");

class Control {
    constructor(x, y, zIndex) {
        this.position = new _math_vector2__WEBPACK_IMPORTED_MODULE_0__.Vector2((x || 0), (y || 0));
        this.zIndex = zIndex || 0;
    }
    get position() {
        return this._position;
    }
    set position(value) {
        this._position = value;
    }
    initControl(app) {
        this.app = app;
        this.initialize();
    }
    initialize() {
    }
    get size() {
        return new _math_vector2__WEBPACK_IMPORTED_MODULE_0__.Vector2(this.width, this.height);
    }
    get ZIndex() {
        return this.zIndex;
    }
    set ZIndex(value) {
        this.zIndex = value;
    }
}


/***/ }),

/***/ "./src/controls/error-bar.ts":
/*!***********************************!*\
  !*** ./src/controls/error-bar.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ErrorBar": () => (/* binding */ ErrorBar)
/* harmony export */ });
/* harmony import */ var _label__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./label */ "./src/controls/label.ts");
/* harmony import */ var _vertical_panel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vertical-panel */ "./src/controls/vertical-panel.ts");


class ErrorBar extends _vertical_panel__WEBPACK_IMPORTED_MODULE_1__.VerticalPanel {
    constructor(text, toolTip) {
        super();
        this.color = "rgb(160, 0, 0)";
        this.fillParentHorizontal = true;
        this.minHeight = 15;
        this.label = new _label__WEBPACK_IMPORTED_MODULE_0__.Label(text);
        this.label.fillParentHorizontal = true;
        this.label.textAlign = 'center';
        this.label.padding = { top: 2, right: 0, bottom: 0, left: 0 };
        this.add(this.label);
        this.toolTip = toolTip;
        console.log(toolTip);
    }
    onDraw(canvas) {
        canvas.fillStyle(this.color)
            .roundedRectangle(0, 0, this.size.x, this.size.y, 3)
            .fill();
    }
}


/***/ }),

/***/ "./src/controls/header.ts":
/*!********************************!*\
  !*** ./src/controls/header.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Header": () => (/* binding */ Header)
/* harmony export */ });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _vertical_panel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vertical-panel */ "./src/controls/vertical-panel.ts");
/* harmony import */ var _horizontal_panel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./horizontal-panel */ "./src/controls/horizontal-panel.ts");
/* harmony import */ var _icon__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./icon */ "./src/controls/icon.ts");
/* harmony import */ var _label__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./label */ "./src/controls/label.ts");





class Header extends _horizontal_panel__WEBPACK_IMPORTED_MODULE_2__.HorizontalPanel {
    constructor(node, icon) {
        super();
        this.headerHeight = Header.HEADER_TITLE_HEIGHT;
        this.icon = undefined;
        this.node = node;
        this.padding = { top: 2, right: 0, bottom: 0, left: 7 };
        if (icon) {
            this.icon = new _icon__WEBPACK_IMPORTED_MODULE_3__.Icon(icon);
            this.add(this.icon);
        }
        this.titlePanel = new _vertical_panel__WEBPACK_IMPORTED_MODULE_1__.VerticalPanel();
        this.titlePanel.padding = { top: 0, right: 0, bottom: 0, left: 0 };
        let title = new _label__WEBPACK_IMPORTED_MODULE_4__.Label(node.title, _constants__WEBPACK_IMPORTED_MODULE_0__.Constants.NODE_HEADER_FONT);
        title.color = _constants__WEBPACK_IMPORTED_MODULE_0__.Constants.NODE_TEXT_COLOR;
        title.padding = { top: 6, right: 0, bottom: 3, left: 0 };
        this.titlePanel.add(title);
        let subTitles = this.node.subTitles.sort((a, b) => (b.orderIndex || 0) - (a.orderIndex || 0));
        for (const subTitle of subTitles) {
            let label = new _label__WEBPACK_IMPORTED_MODULE_4__.Label(subTitle.text, _constants__WEBPACK_IMPORTED_MODULE_0__.Constants.NODE_FONT, _constants__WEBPACK_IMPORTED_MODULE_0__.Constants.NODE_SUBTITLE_COLOR);
            this.titlePanel.add(label);
        }
        this.add(this.titlePanel);
        this.delegatePanel = new _vertical_panel__WEBPACK_IMPORTED_MODULE_1__.VerticalPanel();
        this.delegatePanel.fillParentHorizontal = true;
        this.delegatePanel.minWidth = 28;
        this.add(this.delegatePanel);
    }
    initialize() {
        this.fillStyleHeader = this.getHeaderFillStyle();
    }
    onDraw(canvas) {
        canvas.fillStyle(this.fillStyleHeader)
            .roundedRectangle(1, 1, this.size.x - 2, this.size.y, { radiusTopLeft: 5, radiusTopRight: 5, radiusBottomLeft: 0, radiusBottomRight: 0 })
            .fill();
    }
    getHeaderFillStyle() {
        const backgroundColor = this.node.backgroundColor || Header.NODE_DEFAULT_BACKGROUND_COLOR;
        const gradient = this.app.canvas.getContext().createLinearGradient(0, 0, 150, 0);
        gradient.addColorStop(0, `rgb(${backgroundColor})`);
        gradient.addColorStop(1, `rgba(${backgroundColor},0.15)`);
        return gradient;
    }
    addDelegate(pinControl) {
        this.delegatePanel.add(pinControl);
    }
}
Header.HEADER_TITLE_HEIGHT = 23;
Header.NODE_DEFAULT_BACKGROUND_COLOR = '78, 117, 142';


/***/ }),

/***/ "./src/controls/horizontal-panel.ts":
/*!******************************************!*\
  !*** ./src/controls/horizontal-panel.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "HorizontalPanel": () => (/* binding */ HorizontalPanel)
/* harmony export */ });
/* harmony import */ var _math_vector2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math/vector2 */ "./src/math/vector2.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./container */ "./src/controls/container.ts");


class HorizontalPanel extends _container__WEBPACK_IMPORTED_MODULE_1__.Container {
    constructor(x, y, zIndex) {
        super(x, y, zIndex);
    }
    onDraw(canvas) {
        ////////////////
        ////////////////////////////////////////////////
        ////////////////////////////
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //////////
    }
    getCalculatedSize() {
        let size = new _math_vector2__WEBPACK_IMPORTED_MODULE_0__.Vector2(0, 0);
        let childWidth = 0;
        this.horizontalFillCount = 0;
        for (let child of this.children) {
            if (child.ignoreLayout || !child.visible)
                continue;
            let childSize = child.getCalculatedSize();
            child.position.x = size.x;
            size.x += childSize.x;
            size.y = Math.max(size.y, childSize.y);
            if (child.fillParentHorizontal) {
                this.horizontalFillCount++;
            }
            else {
                childWidth += childSize.x;
            }
        }
        size.x = Math.max(size.x, (this.minWidth || 0));
        size.y = Math.max(size.y, (this.minHeight || 0));
        size.x = (this.width || size.x);
        size.y = (this.height || size.y);
        this.controlSize = size.copy();
        this.childrenWidth = childWidth;
        size.x += this.padding.left + this.padding.right;
        size.y += this.padding.top + this.padding.bottom;
        return size;
    }
    applyFills(remainingSize) {
        let remainingWidth = (remainingSize?.x || this.size.x) - this.childrenWidth - (this.padding.left + this.padding.right);
        let width = remainingWidth / this.horizontalFillCount;
        let height = this.size.y;
        let position = new _math_vector2__WEBPACK_IMPORTED_MODULE_0__.Vector2(0, 0);
        for (let child of this.children) {
            if (child.ignoreLayout || !child.visible)
                continue;
            child.position.x = position.x;
            child.position.y = position.y;
            if (child.fillParentHorizontal) {
                child.desiredWidth = width;
            }
            if (child.fillParentVertical) {
                child.desiredHeight = height;
            }
            position.x += child.size.x + (child.padding.left || 0) + (child.padding.right || 0);
            if (child instanceof _container__WEBPACK_IMPORTED_MODULE_1__.Container) {
                child.applyFills(new _math_vector2__WEBPACK_IMPORTED_MODULE_0__.Vector2(width, height));
            }
        }
    }
}


/***/ }),

/***/ "./src/controls/icon.ts":
/*!******************************!*\
  !*** ./src/controls/icon.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Icon": () => (/* binding */ Icon)
/* harmony export */ });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _user_control__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./user-control */ "./src/controls/user-control.ts");


class Icon extends _user_control__WEBPACK_IMPORTED_MODULE_1__.UserControl {
    constructor(icon) {
        super();
        this.icon = new Path2D(icon);
        this.width = 22;
        this.height = 20;
        this.padding = { top: 3, right: 0, bottom: 0, left: 0 };
    }
    onDraw(canvas) {
        ////////////////
        ///////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //////////
        canvas.fillStyle(_constants__WEBPACK_IMPORTED_MODULE_0__.Constants.NODE_TEXT_COLOR)
            //.strokeStyle("rgba(0,0,0,0.4)")
            //.lineWidth(1)
            .translate(this.padding.left, this.padding.top)
            //.stroke(this.icon)
            .fill(this.icon, 'evenodd');
    }
}


/***/ }),

/***/ "./src/controls/interactable-user-control.ts":
/*!***************************************************!*\
  !*** ./src/controls/interactable-user-control.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "InteractableUserControl": () => (/* binding */ InteractableUserControl)
/* harmony export */ });
/* harmony import */ var _user_control__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./user-control */ "./src/controls/user-control.ts");

class InteractableUserControl extends _user_control__WEBPACK_IMPORTED_MODULE_0__.UserControl {
    onDraw(canvas) {
    }
    onMouseDown(ev) {
        return false;
    }
    onMouseUp(ev) {
        return false;
    }
    onMouseEnter(ev) {
        return false;
    }
    onMouseLeave(ev) {
        return false;
    }
    onMouseMove(ev) {
        return false;
    }
}


/***/ }),

/***/ "./src/controls/interfaces/drawable.ts":
/*!*********************************************!*\
  !*** ./src/controls/interfaces/drawable.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isDrawableControl": () => (/* binding */ isDrawableControl)
/* harmony export */ });
function isDrawableControl(object) {
    const drawableControl = object;
    return drawableControl.draw !== undefined;
}


/***/ }),

/***/ "./src/controls/interfaces/interactable.ts":
/*!*************************************************!*\
  !*** ./src/controls/interfaces/interactable.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isInteractableControl": () => (/* binding */ isInteractableControl)
/* harmony export */ });
function isInteractableControl(object) {
    const drawableControl = object;
    return drawableControl.onMouseDown !== undefined
        && drawableControl.onMouseUp !== undefined
        && drawableControl.onMouseEnter !== undefined
        && drawableControl.onMouseLeave !== undefined
        && drawableControl.onMouseMove !== undefined;
}


/***/ }),

/***/ "./src/controls/label.ts":
/*!*******************************!*\
  !*** ./src/controls/label.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Label": () => (/* binding */ Label)
/* harmony export */ });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _math_vector2__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../math/vector2 */ "./src/math/vector2.ts");
/* harmony import */ var _user_control__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./user-control */ "./src/controls/user-control.ts");



class Label extends _user_control__WEBPACK_IMPORTED_MODULE_2__.UserControl {
    constructor(text, font, color) {
        super();
        this.text = text;
        this.font = (font || _constants__WEBPACK_IMPORTED_MODULE_0__.Constants.NODE_FONT);
        this.color = (color || _constants__WEBPACK_IMPORTED_MODULE_0__.Constants.NODE_TEXT_COLOR);
        this.padding = { top: 0, right: 0, bottom: 0, left: 0 };
    }
    initialize() {
        let textMetrics = this.measureText();
        this.minWidth = textMetrics.width;
        this.minHeight = textMetrics.fontBoundingBoxAscent + textMetrics.fontBoundingBoxDescent;
        if (isNaN(this.minHeight)) {
            textMetrics = this.measureText("|_");
            this.minHeight = textMetrics.actualBoundingBoxAscent + textMetrics.actualBoundingBoxDescent + 5;
            console.log(this.minHeight);
        }
        this.baseLine = Math.floor(this.minHeight / 3);
    }
    onDraw(canvas) {
        ////////////////
        //////////////////////////////////
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //////////
        let position = this.getPosition();
        canvas.font(this.font)
            .textAlign(this.textAlign)
            .fillStyle(this.color)
            .fillText(this.text, position.x, position.y);
    }
    measureText(text) {
        return this.app.canvas.font(this.font).getContext().measureText((text || this.text));
    }
    getPosition() {
        let position = new _math_vector2__WEBPACK_IMPORTED_MODULE_1__.Vector2(0, 0);
        switch (this.textAlign) {
            case 'center':
                position.x = this.size.x * 0.5;
                position.y = this.size.y + this.padding.top - this.baseLine;
                break;
            case 'right':
                position.x = this.size.x - this.minWidth - this.padding.right;
                position.y = this.size.y + this.padding.top - this.baseLine;
                break;
            case 'left':
            default:
                position.x = this.padding.left;
                position.y = this.size.y + this.padding.top - this.baseLine;
                break;
        }
        return position;
    }
}


/***/ }),

/***/ "./src/controls/node-connection.control.ts":
/*!*************************************************!*\
  !*** ./src/controls/node-connection.control.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "NodeConnectionControl": () => (/* binding */ NodeConnectionControl)
/* harmony export */ });
/* harmony import */ var _data_pin_pin_category__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data/pin/pin-category */ "./src/data/pin/pin-category.ts");
/* harmony import */ var _user_control__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./user-control */ "./src/controls/user-control.ts");
/* harmony import */ var _utils_color_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/color-utils */ "./src/controls/utils/color-utils.ts");



class NodeConnectionControl extends _user_control__WEBPACK_IMPORTED_MODULE_1__.UserControl {
    constructor(pinStart, pinEnd) {
        super(0, 0, -1);
        this.pinStart = pinStart;
        this.pinEnd = pinEnd;
        this.pinStartPosition = this.pinStart.getPinAbsolutePosition();
        this.pinEndPosition = this.pinEnd.getPinAbsolutePosition();
        let difference = this.pinEndPosition.subtract(this.pinStartPosition);
        let distance = Math.sqrt((difference.x * difference.x) + (difference.y * difference.y)) - 12;
        this.curveValue = distance * 0.4;
        this.color = _utils_color_utils__WEBPACK_IMPORTED_MODULE_2__.ColorUtils.getPinColor(this.pinStart.pinProperty);
        this.lineWidth = (this.pinStart.pinProperty.category === _data_pin_pin_category__WEBPACK_IMPORTED_MODULE_0__.PinCategory.exec) ? 2.5 : 1.5;
    }
    onDraw(canvas) {
        this.pinStartPosition = this.pinStart.getPinAbsolutePosition();
        this.pinEndPosition = this.pinEnd.getPinAbsolutePosition();
        let difference = this.pinEndPosition.subtract(this.pinStartPosition);
        let distance = Math.sqrt((difference.x * difference.x) + (difference.y * difference.y)) - 12;
        this.curveValue = distance * 0.4;
        canvas.lineWidth(this.lineWidth)
            .beginPath()
            .moveTo(this.pinStartPosition.x, this.pinStartPosition.y)
            .strokeStyle(this.color)
            .lineTo(this.pinStartPosition.x + 6, this.pinStartPosition.y)
            .bezierCurveTo(this.pinStartPosition.x + this.curveValue + 6, this.pinStartPosition.y, this.pinEndPosition.x - this.curveValue - 6, this.pinEndPosition.y, this.pinEndPosition.x - 6, this.pinEndPosition.y)
            .lineTo(this.pinEndPosition.x, this.pinEndPosition.y)
            .stroke();
    }
}


/***/ }),

/***/ "./src/controls/node-fold-button.ts":
/*!******************************************!*\
  !*** ./src/controls/node-fold-button.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "NodeFoldButton": () => (/* binding */ NodeFoldButton)
/* harmony export */ });
/* harmony import */ var _interactable_user_control__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interactable-user-control */ "./src/controls/interactable-user-control.ts");

class NodeFoldButton extends _interactable_user_control__WEBPACK_IMPORTED_MODULE_0__.InteractableUserControl {
    constructor(foldOut) {
        super();
        this.foldout = false;
        this.hovered = false;
        this.height = NodeFoldButton.BUTTON_HEIGHT;
        this.fillParentHorizontal = true;
        this.padding = { top: 0, right: 0, bottom: 3, left: 0 };
        this.foldout = foldOut;
        this.zIndex = 1;
    }
    get foldoutState() { return this.foldout; }
    set foldoutState(value) {
        this.foldout = value;
        this.app.scene.refresh();
    }
    onMouseEnter(ev) {
        this.hovered = true;
        this.app.scene.refresh();
        return true;
    }
    onMouseLeave(ev) {
        this.hovered = false;
        this.app.scene.refresh();
        return true;
    }
    onMouseDown(ev) {
        return true;
    }
    onMouseUp(ev) {
        this.foldoutState = !this.foldoutState;
        if (this.onClick)
            this.onClick(this.foldoutState);
        return true;
    }
    onDraw(canvas) {
        ////////////////
        ///////////////////////////////////
        //////////////////////////////////////////////////////////
        //////////
        if (this.hovered) {
            canvas.fillStyle("rgba(255,255,255,0.1)")
                .fillRect(0, 0, this.size.x, this.size.y);
        }
        this.drawChevron(canvas);
    }
    drawChevron(canvas) {
        canvas.save();
        canvas.translate(this.size.x * 0.5, this.size.y * 0.5);
        canvas.fillStyle("#eee")
            .beginPath();
        if (this.foldoutState) {
            canvas.moveTo(5, 5)
                .lineTo(0, -2)
                .lineTo(-5, 5)
                .lineTo(5, 5);
        }
        else {
            canvas.moveTo(5, -2)
                .lineTo(0, 5)
                .lineTo(-5, -2)
                .lineTo(5, -2);
        }
        canvas.fill();
        canvas.restore();
    }
}
NodeFoldButton.BUTTON_HEIGHT = 20;
NodeFoldButton.BUTTON_MARGIN = 3;


/***/ }),

/***/ "./src/controls/node-info-icon.ts":
/*!****************************************!*\
  !*** ./src/controls/node-info-icon.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "NodeInfoIcon": () => (/* binding */ NodeInfoIcon)
/* harmony export */ });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _icon__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./icon */ "./src/controls/icon.ts");


class NodeInfoIcon extends _icon__WEBPACK_IMPORTED_MODULE_1__.Icon {
    constructor(icon) {
        super(icon);
        this.ignoreLayout = true;
        this.width = NodeInfoIcon.ICON_SIZE;
        this.height = NodeInfoIcon.ICON_SIZE;
    }
    onDraw(canvas) {
        ////////////////
        ///////////////////////////////////
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //////////
        canvas.fillStyle(_constants__WEBPACK_IMPORTED_MODULE_0__.Constants.NODE_TEXT_COLOR)
            .translate(this.parent.size.x + this.padding.left - NodeInfoIcon.HALF_ICON_SIZE, -NodeInfoIcon.HALF_ICON_SIZE + this.padding.top)
            .fill(this.icon, 'evenodd');
    }
}
NodeInfoIcon.ICON_SIZE = 22;
NodeInfoIcon.HALF_ICON_SIZE = 11;


/***/ }),

/***/ "./src/controls/nodes/comment-node.control.ts":
/*!****************************************************!*\
  !*** ./src/controls/nodes/comment-node.control.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CommentNodeControl": () => (/* binding */ CommentNodeControl)
/* harmony export */ });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../constants */ "./src/constants.ts");
/* harmony import */ var _data_color__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../data/color */ "./src/data/color.ts");
/* harmony import */ var _math_vector2__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../math/vector2 */ "./src/math/vector2.ts");
/* harmony import */ var _node_control__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node.control */ "./src/controls/nodes/node.control.ts");




class CommentNodeControl extends _node_control__WEBPACK_IMPORTED_MODULE_3__.NodeControl {
    constructor(node) {
        super(node);
        this.zIndex = -100;
        this.width = node.width;
        this.height = node.height;
        this.applyCommentColor(node.backgroundColor);
    }
    onDraw(canvas) {
        canvas.fillStyle(this.bodyBackgroundColor)
            .font(_constants__WEBPACK_IMPORTED_MODULE_0__.Constants.NODE_FONT)
            .roundedRectangle(0, 0, this.width, this.height, 5)
            .fill();
        this.drawTitle(canvas);
        canvas.roundedRectangle(0, 0, this.width, this.height, 5);
        this.drawStroke(canvas);
    }
    applyCommentColor(nodeColor) {
        if (nodeColor == undefined || nodeColor == '')
            nodeColor = CommentNodeControl._DEFAULT_COMMENT_COLOR;
        let color = new _data_color__WEBPACK_IMPORTED_MODULE_1__.Color(nodeColor);
        color.applyGamma();
        color.A = color.A * 0.3;
        this.bodyBackgroundColor = color.toRGBAString();
        color.darken(0.3);
        this.headerBackgroundColor = color.toRGBString();
    }
    drawTitle(canvas) {
        const textPosition = new _math_vector2__WEBPACK_IMPORTED_MODULE_2__.Vector2(9, 23);
        const headerHeight = 32;
        canvas.fillStyle(this.headerBackgroundColor)
            .roundedRectangle(0, 0, this.width, headerHeight, { radiusTopLeft: 5, radiusTopRight: 5, radiusBottomLeft: 0, radiusBottomRight: 0 })
            .fill()
            .font("600 18px sans-serif")
            .textAlign('left')
            .strokeStyle('#333')
            .lineWidth(1.5)
            .strokeText(this.node.title, textPosition.x + 1, textPosition.y + 1)
            .fillStyle(CommentNodeControl._HEADER_TEXT_COLOR)
            .fillText(this.node.title, textPosition.x, textPosition.y);
    }
}
CommentNodeControl._HEADER_TEXT_COLOR = "rgb(238,238,238)";
CommentNodeControl._DEFAULT_COMMENT_COLOR = "rgba(255,255,255,1)";


/***/ }),

/***/ "./src/controls/nodes/foldable-headed-node.control.ts":
/*!************************************************************!*\
  !*** ./src/controls/nodes/foldable-headed-node.control.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FoldableHeadedNodeControl": () => (/* binding */ FoldableHeadedNodeControl)
/* harmony export */ });
/* harmony import */ var _node_fold_button__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node-fold-button */ "./src/controls/node-fold-button.ts");
/* harmony import */ var _headed_node_control__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./headed-node-control */ "./src/controls/nodes/headed-node-control.ts");


class FoldableHeadedNodeControl extends _headed_node_control__WEBPACK_IMPORTED_MODULE_1__.HeadedNodeControl {
    constructor(node, icon) {
        super(node, icon);
        this.foldState = false;
        this.foldState = (node.advancedPinDisplay !== undefined) ? node.advancedPinDisplay : true;
        this.nodeButton = new _node_fold_button__WEBPACK_IMPORTED_MODULE_0__.NodeFoldButton(this.foldState);
        this.mainPanel.add(this.nodeButton);
        this.nodeButton.onClick = (foldOut) => this.toggleFold(foldOut);
    }
    toggleFold(foldOut) {
        this.foldState = foldOut;
        this.applyAdvancedView(this.foldState);
        this.app.scene.refresh();
    }
    applyAdvancedView(advancedView) {
        for (let pin of this.pins) {
            if (pin.pinProperty.advancedView === true && !pin.pinProperty.isLinked) {
                pin.visible = advancedView;
            }
        }
        this.nodeButton.refreshLayout();
        this.refreshLayout();
        for (let pin of this.pins) {
            pin.refreshLayout();
        }
    }
}


/***/ }),

/***/ "./src/controls/nodes/headed-node-control.ts":
/*!***************************************************!*\
  !*** ./src/controls/nodes/headed-node-control.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "HeadedNodeControl": () => (/* binding */ HeadedNodeControl)
/* harmony export */ });
/* harmony import */ var _node_control__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node.control */ "./src/controls/nodes/node.control.ts");
/* harmony import */ var _math_vector2__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../math/vector2 */ "./src/math/vector2.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../constants */ "./src/constants.ts");
/* harmony import */ var _header__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../header */ "./src/controls/header.ts");
/* harmony import */ var _pin_control__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../pin.control */ "./src/controls/pin.control.ts");
/* harmony import */ var _data_pin_pin_direction__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../data/pin/pin-direction */ "./src/data/pin/pin-direction.ts");
/* harmony import */ var _data_pin_pin_category__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../data/pin/pin-category */ "./src/data/pin/pin-category.ts");
/* harmony import */ var _warning_bar__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../warning-bar */ "./src/controls/warning-bar.ts");
/* harmony import */ var _utils_text_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../utils/text-utils */ "./src/utils/text-utils.ts");









class HeadedNodeControl extends _node_control__WEBPACK_IMPORTED_MODULE_0__.NodeControl {
    constructor(node, icon) {
        super(node);
        this.headerHeight = HeadedNodeControl.NODE_HEADER_TITLE_HEIGHT;
        this.minHeight = HeadedNodeControl.NODE_HEADER_TITLE_HEIGHT;
        this.minWidth = 100;
        this.header = new _header__WEBPACK_IMPORTED_MODULE_3__.Header(node, icon);
        this.header.fillParentHorizontal = true;
        this.pinPanel.padding = { top: 3, right: 0, bottom: 3, left: 0 };
        this.createPins(new _math_vector2__WEBPACK_IMPORTED_MODULE_1__.Vector2(0, this.headerHeight));
        this.mainPanel.insert(this.header, 0);
        this.initializeEnabledState();
    }
    initialize() {
        let largestTitleWidth = this.app.canvas.getContext().measureText(this.node.title).width;
        if (this.node.subTitles && this.node.subTitles.length > 0) {
            for (const subTitle of this.node.subTitles) {
                largestTitleWidth = Math.max(largestTitleWidth, this.app.canvas.getContext().measureText(subTitle.text).width);
            }
            this.headerHeight += (HeadedNodeControl.NODE_HEADER_SPACE_BETWEEN_TITLE_AND_SUBTITLE - 2) + (HeadedNodeControl.NODE_HEADER_SUBTITLE_HEIGHT * this.node.subTitles.length);
        }
        this.minWidth = largestTitleWidth + HeadedNodeControl.NODE_HEADER_ICONS_WIDTH;
    }
    initializeEnabledState() {
        if (this.node.enabledState !== undefined) {
            this.mainPanel.add(new _warning_bar__WEBPACK_IMPORTED_MODULE_7__.WarningBar((0,_utils_text_utils__WEBPACK_IMPORTED_MODULE_8__.prettifyText)(this.node.enabledState)));
        }
    }
    createPin(property) {
        let pinControl = new _pin_control__WEBPACK_IMPORTED_MODULE_4__.PinControl(this.position, property);
        this.pins.push(pinControl);
        if (property.direction == _data_pin_pin_direction__WEBPACK_IMPORTED_MODULE_5__.PinDirection.EGPD_Output) {
            if (property.category === _data_pin_pin_category__WEBPACK_IMPORTED_MODULE_6__.PinCategory.delegate) {
                pinControl.fillParentVertical = true;
                this.header.addDelegate(pinControl);
                return;
            }
            this.outputPinPanel.add(pinControl);
        }
        else {
            this.inputPinPanel.add(pinControl);
        }
    }
    onDraw(canvas) {
        super.onDraw(canvas);
        canvas.fillStyle(_constants__WEBPACK_IMPORTED_MODULE_2__.Constants.NODE_BACKGROUND_COLOR)
            .font(_constants__WEBPACK_IMPORTED_MODULE_2__.Constants.NODE_FONT)
            .roundedRectangle(0, 0, this.size.x, this.size.y, 5)
            .fill();
        canvas.roundedRectangle(0, 0, this.size.x, this.size.y, 5);
        this.drawStroke(canvas);
    }
}
HeadedNodeControl.NODE_HEADER_TITLE_HEIGHT = 23;
HeadedNodeControl.NODE_HEADER_SUBTITLE_HEIGHT = 14;
HeadedNodeControl.NODE_HEADER_SPACE_BETWEEN_TITLE_AND_SUBTITLE = 4;
HeadedNodeControl.NODE_HEADER_ICONS_WIDTH = 50;


/***/ }),

/***/ "./src/controls/nodes/headless-node-control.ts":
/*!*****************************************************!*\
  !*** ./src/controls/nodes/headless-node-control.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "HeadlessNodeControl": () => (/* binding */ HeadlessNodeControl)
/* harmony export */ });
/* harmony import */ var _node_control__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node.control */ "./src/controls/nodes/node.control.ts");
/* harmony import */ var _math_vector2__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../math/vector2 */ "./src/math/vector2.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../constants */ "./src/constants.ts");



class HeadlessNodeControl extends _node_control__WEBPACK_IMPORTED_MODULE_0__.NodeControl {
    constructor(node) {
        super(node);
        this.minHeight = 32;
        this.minWidth = Math.max(130, (!isNaN(this.minWidth)) ? this.minWidth : 0);
        this.padding = { top: 2, right: 0, bottom: 0, left: 0 };
        this.createPins(new _math_vector2__WEBPACK_IMPORTED_MODULE_1__.Vector2(0, 0));
    }
    initialize() {
        if (this.node.title) {
            this.minWidth = this.app.canvas
                .font(_constants__WEBPACK_IMPORTED_MODULE_2__.Constants.NODE_MATHFUNC_TITLE_FONT)
                .getContext().measureText(this.node.title).width + HeadlessNodeControl._NODE_PIN_ICONS_WIDTH;
        }
    }
    onDraw(canvas) {
        canvas.fillStyle(HeadlessNodeControl._NODE_BACKGROUND_COLOR)
            .roundedRectangle(0, 0, this.size.x, this.size.y, 16) // -(this.height * .3)
            .fill();
        this.drawTitle(canvas);
        this.drawFirstSubTitle(canvas);
        this.drawStroke(canvas);
    }
    drawTitle(canvas) {
        if (!this.node.title) {
            return;
        }
        canvas
            .font(_constants__WEBPACK_IMPORTED_MODULE_2__.Constants.NODE_MATHFUNC_TITLE_FONT)
            .textAlign('center')
            .fillStyle(_constants__WEBPACK_IMPORTED_MODULE_2__.Constants.NODE_MATHFUNC_TITLE_COLOR)
            .fillText(this.node.title, this.size.x * 0.5, this.size.y * 0.5 + 8);
    }
    drawFirstSubTitle(canvas) {
        if (!this.node.subTitles || this.node.subTitles.length === 0) {
            return;
        }
        canvas
            .font(_constants__WEBPACK_IMPORTED_MODULE_2__.Constants.NODE_MATHFUNC_SUBTITLE_FONT)
            .textAlign('center')
            .fillStyle(_constants__WEBPACK_IMPORTED_MODULE_2__.Constants.NODE_MATHFUNC_TITLE_COLOR)
            .fillText(this.node.subTitles[0].text, this.size.x * 0.5, this.size.y * 0.5 + 22);
    }
}
HeadlessNodeControl._NODE_BACKGROUND_COLOR = "rgba(15,15,15,0.6)";
HeadlessNodeControl._NODE_PIN_ICONS_WIDTH = 140;


/***/ }),

/***/ "./src/controls/nodes/node.control.ts":
/*!********************************************!*\
  !*** ./src/controls/nodes/node.control.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "NodeControl": () => (/* binding */ NodeControl)
/* harmony export */ });
/* harmony import */ var _pin_control__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../pin.control */ "./src/controls/pin.control.ts");
/* harmony import */ var _vertical_panel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../vertical-panel */ "./src/controls/vertical-panel.ts");
/* harmony import */ var _horizontal_panel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../horizontal-panel */ "./src/controls/horizontal-panel.ts");
/* harmony import */ var _data_pin_pin_property__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../data/pin/pin-property */ "./src/data/pin/pin-property.ts");
/* harmony import */ var _data_pin_pin_direction__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../data/pin/pin-direction */ "./src/data/pin/pin-direction.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../container */ "./src/controls/container.ts");
/* harmony import */ var _error_bar__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../error-bar */ "./src/controls/error-bar.ts");
/* harmony import */ var _node_info_icon__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../node-info-icon */ "./src/controls/node-info-icon.ts");
/* harmony import */ var _utils_icon_library__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/icon-library */ "./src/controls/utils/icon-library.ts");









class NodeControl extends _container__WEBPACK_IMPORTED_MODULE_5__.Container {
    constructor(node) {
        super(node.pos.x, node.pos.y);
        this.pins = [];
        this._node = node;
        this.width = 0;
        this.height = 0;
        this._selected = false;
        this._stroke = {
            lineWidth: 1,
            style: 'rgb(0,0,0)'
        };
        this.showAdvanced = node.advancedPinDisplay;
        this.mainPanel = new _vertical_panel__WEBPACK_IMPORTED_MODULE_1__.VerticalPanel();
        this.mainPanel.fillParentHorizontal = true;
        this.add(this.mainPanel);
        this.pinPanel = new _horizontal_panel__WEBPACK_IMPORTED_MODULE_2__.HorizontalPanel();
        this.pinPanel.fillParentHorizontal = true;
        this.mainPanel.add(this.pinPanel);
        this.inputPinPanel = new _vertical_panel__WEBPACK_IMPORTED_MODULE_1__.VerticalPanel();
        this.outputPinPanel = new _vertical_panel__WEBPACK_IMPORTED_MODULE_1__.VerticalPanel();
        this.outputPinPanel.childAlignment = _vertical_panel__WEBPACK_IMPORTED_MODULE_1__.HorizontalAlignment.RIGHT;
        this.outputPinPanel.fillParentHorizontal = true;
        this.pinPanel.add(this.inputPinPanel);
        this.pinPanel.add(this.outputPinPanel);
        this.initErrorBar();
        this.addInfoIcons();
    }
    initErrorBar() {
        if (this.node.errorType !== undefined && this.node.errorMsg !== undefined) {
            switch (this.node.errorType) {
                case 1:
                    let errorBar = new _error_bar__WEBPACK_IMPORTED_MODULE_6__.ErrorBar("ERROR!", this.node.errorMsg);
                    this.mainPanel.add(errorBar);
                    break;
            }
        }
    }
    addInfoIcons() {
        if (this.node.latent) {
            this.mainPanel.add(new _node_info_icon__WEBPACK_IMPORTED_MODULE_7__.NodeInfoIcon(_utils_icon_library__WEBPACK_IMPORTED_MODULE_8__.IconLibrary.LATENT));
        }
    }
    set selected(isSelected) {
        this._selected = isSelected;
    }
    get selected() {
        return this._selected;
    }
    get sourceText() {
        return this._node.sourceText;
    }
    get node() {
        return this._node;
    }
    createPins(offset) {
        for (let property of this.node.customProperties) {
            if (property instanceof _data_pin_pin_property__WEBPACK_IMPORTED_MODULE_3__.PinProperty) {
                this.createPin(property);
            }
        }
    }
    createPin(property) {
        let pinControl = new _pin_control__WEBPACK_IMPORTED_MODULE_0__.PinControl(this.position, property);
        this.pins.push(pinControl);
        this.onPinCreated(pinControl);
    }
    onPinCreated(pin) {
        if (pin.pinProperty.direction === _data_pin_pin_direction__WEBPACK_IMPORTED_MODULE_4__.PinDirection.EGPD_Output) {
            this.outputPinPanel.add(pin);
        }
        else {
            this.inputPinPanel.add(pin);
        }
    }
    onDraw(canvas) {
        ////////////////
        ///////////////////////////////////
        //////////////////////////////////////////////////////////
        //////////
    }
    drawStroke(canvas) {
        if (this._selected) {
            canvas.lineWidth(NodeControl._SELECTION_LINE_WIDTH).strokeStyle(NodeControl._SELECTION_COLOR);
        }
        else {
            canvas.lineWidth(this._stroke.lineWidth).strokeStyle(this._stroke.style);
        }
        canvas.stroke();
    }
}
NodeControl._SELECTION_COLOR = 'rgb(231,158,0)';
NodeControl._SELECTION_LINE_WIDTH = 2.5;


/***/ }),

/***/ "./src/controls/nodes/reroute-node.control.ts":
/*!****************************************************!*\
  !*** ./src/controls/nodes/reroute-node.control.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RerouteNodeControl": () => (/* binding */ RerouteNodeControl)
/* harmony export */ });
/* harmony import */ var _node_control__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node.control */ "./src/controls/nodes/node.control.ts");
/* harmony import */ var _utils_color_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/color-utils */ "./src/controls/utils/color-utils.ts");


class RerouteNodeControl extends _node_control__WEBPACK_IMPORTED_MODULE_0__.NodeControl {
    constructor(node) {
        super(node);
        this.width = 16;
        this.height = 16;
        this._stroke.lineWidth = 0.5;
        this.drawChildren = false;
        this.color = _utils_color_utils__WEBPACK_IMPORTED_MODULE_1__.ColorUtils.getPinColor(node.customProperties[0]);
        this.mainPanel.width = 0;
        this.createPins();
    }
    onPinCreated(pin) {
        pin.ignoreLayout = true;
        this.mainPanel.add(pin);
        pin.position.y = 8;
        pin.width = 20;
        pin.height = 0;
        pin.visible = false;
    }
    onDraw(canvas) {
        canvas.translate(8, 8)
            .fillStyle(this.color)
            .fillCircle(6, 0, 2.3)
            .fillCircle(0, 0, 6);
        this.drawStroke(canvas);
    }
}


/***/ }),

/***/ "./src/controls/nodes/setter-node-control.ts":
/*!***************************************************!*\
  !*** ./src/controls/nodes/setter-node-control.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SetterNodeControl": () => (/* binding */ SetterNodeControl)
/* harmony export */ });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../constants */ "./src/constants.ts");
/* harmony import */ var _headless_node_control__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./headless-node-control */ "./src/controls/nodes/headless-node-control.ts");


class SetterNodeControl extends _headless_node_control__WEBPACK_IMPORTED_MODULE_1__.HeadlessNodeControl {
    drawTitle(canvas) {
        if (!this.node.title) {
            return;
        }
        canvas
            .font("bold 18px sans-serif")
            .textAlign('center')
            .fillStyle(_constants__WEBPACK_IMPORTED_MODULE_0__.Constants.NODE_MATHFUNC_TITLE_COLOR)
            .fillText(this.node.title, this.size.x / 2, 22);
    }
}


/***/ }),

/***/ "./src/controls/partial-node-connection.control.ts":
/*!*********************************************************!*\
  !*** ./src/controls/partial-node-connection.control.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "NodePartialConnectionControl": () => (/* binding */ NodePartialConnectionControl)
/* harmony export */ });
/* harmony import */ var _data_pin_pin_category__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data/pin/pin-category */ "./src/data/pin/pin-category.ts");
/* harmony import */ var _data_pin_pin_direction__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/pin/pin-direction */ "./src/data/pin/pin-direction.ts");
/* harmony import */ var _control__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./control */ "./src/controls/control.ts");
/* harmony import */ var _utils_color_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/color-utils */ "./src/controls/utils/color-utils.ts");




class NodePartialConnectionControl extends _control__WEBPACK_IMPORTED_MODULE_2__.Control {
    constructor(pin) {
        super(pin.getAbsolutPosition().x, pin.getAbsolutPosition().y, -1);
        this._pin = pin;
        this._color = _utils_color_utils__WEBPACK_IMPORTED_MODULE_3__.ColorUtils.getPinColor(this._pin.pinProperty);
        this._isDirectionOutput = this._pin.pinProperty.direction == _data_pin_pin_direction__WEBPACK_IMPORTED_MODULE_1__.PinDirection.EGPD_Output;
        this._lineWidth = (this._pin.pinProperty.category === _data_pin_pin_category__WEBPACK_IMPORTED_MODULE_0__.PinCategory.exec) ? 2.5 : 1.5;
    }
    draw(canvas) {
        canvas.save();
        canvas.translate(this._pin.getPinAbsolutePosition().x, this._pin.getPinAbsolutePosition().y);
        canvas.lineWidth(this._lineWidth)
            .beginPath()
            .setLineDash([30, 4, 2.5, 4, 2.5, 4, 2.5]);
        if (this._isDirectionOutput) {
            canvas.moveTo(6, 0)
                .lineTo(NodePartialConnectionControl.LINE_LENGTH, 0);
        }
        else {
            canvas.moveTo(-6, 0)
                .lineTo(-NodePartialConnectionControl.LINE_LENGTH, 0);
        }
        canvas.strokeStyle(this._color)
            .stroke();
        canvas.restore();
    }
}
NodePartialConnectionControl.LINE_LENGTH = 80;


/***/ }),

/***/ "./src/controls/pin.control.ts":
/*!*************************************!*\
  !*** ./src/controls/pin.control.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PinControl": () => (/* binding */ PinControl)
/* harmony export */ });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _data_pin_pin_category__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/pin/pin-category */ "./src/data/pin/pin-category.ts");
/* harmony import */ var _data_pin_pin_container_type__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data/pin/pin-container-type */ "./src/data/pin/pin-container-type.ts");
/* harmony import */ var _data_pin_pin_direction__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../data/pin/pin-direction */ "./src/data/pin/pin-direction.ts");
/* harmony import */ var _nodes_node_control__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./nodes/node.control */ "./src/controls/nodes/node.control.ts");
/* harmony import */ var _user_control__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./user-control */ "./src/controls/user-control.ts");
/* harmony import */ var _utils_color_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/color-utils */ "./src/controls/utils/color-utils.ts");
/* harmony import */ var _utils_icon_library__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/icon-library */ "./src/controls/utils/icon-library.ts");







// import { DefaultValueBox } from "./utils/default-value-box";

class PinControl extends _user_control__WEBPACK_IMPORTED_MODULE_5__.UserControl {
    constructor(parentPosition, pin) {
        super(0, 0);
        this.connections = [];
        this._pinProperty = pin;
        this.hidden = false;
        this._isInput = this._pinProperty.direction !== _data_pin_pin_direction__WEBPACK_IMPORTED_MODULE_3__.PinDirection.EGPD_Output;
        this._color = _utils_color_utils__WEBPACK_IMPORTED_MODULE_6__.ColorUtils.getPinColor(this._pinProperty);
        if (this._pinProperty.valueType)
            this._secondaryColor = _utils_color_utils__WEBPACK_IMPORTED_MODULE_6__.ColorUtils.getPinColorByCategory(this._pinProperty.valueType);
        this.height = 28;
        this.width = 0;
        this.visible = !pin.hidden;
        this.category = pin.category;
        this.initPinIcons();
    }
    initialize() {
        if (this.visible) {
            if (!this.pinProperty.hidden && !this.pinProperty.hideName) {
                this.width = this.formattedNameWidth(this.pinProperty) + (PinControl.PINS_PADDING_HORIZONTAL * 2);
            }
            else if (!this.pinProperty.hidden) {
                this.width = (PinControl.PINS_PADDING_HORIZONTAL * 2);
            }
            if (this.category == _data_pin_pin_category__WEBPACK_IMPORTED_MODULE_1__.PinCategory.delegate && this.pinProperty.direction === _data_pin_pin_direction__WEBPACK_IMPORTED_MODULE_3__.PinDirection.EGPD_Output) {
                this.width = (PinControl.PINS_PADDING_HORIZONTAL * 2) - 8;
                this.height = 24;
            }
        }
        this.postInit();
    }
    initPinIcons() {
        switch (this._pinProperty.containerType) {
            case _data_pin_pin_container_type__WEBPACK_IMPORTED_MODULE_2__.PinContainerType.Array:
                this.icon = (this._pinProperty.isLinked) ? new Path2D(_utils_icon_library__WEBPACK_IMPORTED_MODULE_7__.IconLibrary.PIN_ARRAY_CONNECTED) : new Path2D(_utils_icon_library__WEBPACK_IMPORTED_MODULE_7__.IconLibrary.PIN_ARRAY_DISCONNECTED);
                break;
            case _data_pin_pin_container_type__WEBPACK_IMPORTED_MODULE_2__.PinContainerType.Set:
                this.icon = new Path2D(_utils_icon_library__WEBPACK_IMPORTED_MODULE_7__.IconLibrary.PIN_SET);
                break;
            case _data_pin_pin_container_type__WEBPACK_IMPORTED_MODULE_2__.PinContainerType.Map:
                this.icon = new Path2D(_utils_icon_library__WEBPACK_IMPORTED_MODULE_7__.IconLibrary.PIN_MAP_KEY);
                this.secondaryIcon = new Path2D(_utils_icon_library__WEBPACK_IMPORTED_MODULE_7__.IconLibrary.PIN_MAP_VALUE);
                break;
            case _data_pin_pin_container_type__WEBPACK_IMPORTED_MODULE_2__.PinContainerType.None:
            default:
                this.icon = undefined;
                break;
        }
        // Overwrite only if there is no icon (Container icons stay even when they are references)
        if (this.icon === undefined && this._pinProperty.isReference) {
            if (this._pinProperty.isLinked)
                this.icon = new Path2D(_utils_icon_library__WEBPACK_IMPORTED_MODULE_7__.IconLibrary.PIN_REFERENCE_CONNECTED);
            else
                this.icon = new Path2D(_utils_icon_library__WEBPACK_IMPORTED_MODULE_7__.IconLibrary.PIN_REFERENCE_DISCONNECTED);
        }
    }
    get pinProperty() {
        return this._pinProperty;
    }
    set parent(value) {
        this.controlParent = value;
        let nodeControl = this.findParent(_nodes_node_control__WEBPACK_IMPORTED_MODULE_4__.NodeControl);
        if (nodeControl) {
            if (this.pinProperty.advancedView == true && !nodeControl.showAdvanced && !this.pinProperty.isLinked) {
                this.visible = false;
            }
        }
    }
    addConnection(connection) {
        this.connections.push(connection);
    }
    postInit() {
        if (this.pinProperty.shouldDrawDefaultValueBox && this._pinProperty.defaultValueControlClass) {
            this.defaultValueBox = new this._pinProperty.defaultValueControlClass(this._pinProperty.defaultValue);
            this.defaultValueBox.initControl(this.app);
            this.defaultValueBox.position.x = this.formattedNameWidth(this._pinProperty) + PinControl.PINS_PADDING_HORIZONTAL + 6;
            this.width += this.defaultValueBox.width;
        }
    }
    setHidden(hidden) {
        this.hidden = hidden;
    }
    onDraw(canvas) {
        if (this.hidden)
            return;
        ////////////////
        ///////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //////////
        canvas.save();
        let pinCategory = this.pinProperty.category;
        canvas.fillStyle(this._color).strokeStyle(this._color);
        let paddingX = (this.pinProperty.direction === _data_pin_pin_direction__WEBPACK_IMPORTED_MODULE_3__.PinDirection.EGPD_Output) ? -this.padding.right : this.padding.left;
        canvas.translate(paddingX, Math.floor(this.height * 0.5));
        switch (pinCategory) {
            case _data_pin_pin_category__WEBPACK_IMPORTED_MODULE_1__.PinCategory.exec:
                this.drawExecutionPin(canvas);
                break;
            case _data_pin_pin_category__WEBPACK_IMPORTED_MODULE_1__.PinCategory.delegate:
                this.drawDelegatePin(canvas);
                break;
            default:
                this.drawPin(canvas);
        }
        canvas.restore();
    }
    drawPinIcon(canvas, icon) {
        const pinX = Math.floor(this.getPinX());
        canvas.fillStyle(this._color)
            .translate(pinX - 7.5, -7.5)
            .fill(this.icon, 'evenodd');
        if (this.secondaryIcon !== undefined) {
            canvas.fillStyle(this._secondaryColor)
                .fill(this.secondaryIcon, 'evenodd');
        }
    }
    drawPin(canvas) {
        let textX = this.setupTextDrawing(canvas);
        const pinX = this.getPinX();
        canvas.fillText(this._pinProperty.formattedName, textX, 4);
        if (this.icon === undefined) {
            canvas.fillStyle(this._color)
                .fillCircle(pinX + 6, 0, 2.3);
            if (this._pinProperty.isLinked) {
                canvas.fillCircle(pinX, 0, 6);
            }
            else {
                canvas.strokeStyle(this._color)
                    .lineWidth(2)
                    .strokeCircle(pinX, 0, 4.8);
                this.drawDefaultValueBox(canvas);
            }
            canvas.strokeStyle("#000")
                .lineWidth(.5)
                .strokeCircle(pinX, 0, 6);
        }
        else {
            if (this.icon)
                this.drawPinIcon(canvas, this.icon);
        }
    }
    drawExecutionPin(canvas) {
        canvas.save();
        let textX = this.setupTextDrawing(canvas);
        canvas.fillText(this._pinProperty.formattedName, textX, 4);
        if (this._pinProperty.formattedName) {
            const textX = this.setupTextDrawing(canvas);
            canvas.fillText(this._pinProperty.formattedName, textX, 4);
        }
        canvas.translate(this.getPinX(), -7);
        canvas.strokeStyle('#fff')
            .fillStyle('#fff')
            .lineWidth(1.1)
            .beginPath()
            .moveTo(-3, 0)
            .lineTo(1, 0)
            .lineTo(8, 6)
            .lineTo(8, 8)
            .lineTo(1, 14)
            .lineTo(-3, 14)
            .lineTo(-4, 13)
            .lineTo(-4, 1)
            .lineTo(-3, 0)
            .closePath();
        if (this.pinProperty.isLinked)
            canvas.fill();
        else
            canvas.stroke();
        canvas.restore();
    }
    drawDelegatePin(canvas) {
        let xPos = 2;
        if (this._pinProperty.direction === _data_pin_pin_direction__WEBPACK_IMPORTED_MODULE_3__.PinDirection.EGPD_Input) {
            let textX = this.setupTextDrawing(canvas);
            canvas.fillText(this._pinProperty.formattedName, textX, 4);
            xPos = -6;
        }
        canvas.save()
            .translate(this.getPinX(), -5)
            .fillStyle(this._color).strokeStyle(this._color);
        canvas.strokeStyle(this._color)
            .lineWidth(2);
        if (this.pinProperty.isLinked)
            canvas.roundedRectangle(xPos, 0, 11, 11, 3)
                .fill();
        else
            canvas
                .lineWidth(2)
                .roundedRectangle(xPos, 0, 10, 10, 3)
                .stroke();
        canvas.restore();
    }
    drawDefaultValueBox(canvas) {
        if (this.defaultValueBox) {
            this.defaultValueBox.draw(canvas);
        }
    }
    getPinX() {
        if (!this._isInput) {
            return this.size.x - PinControl.PINS_PADDING_HORIZONTAL;
        }
        return PinControl.PINS_PADDING_HORIZONTAL;
    }
    setupTextDrawing(canvas) {
        let textX = this.size.x - (PinControl.PIN_NAME_PADDING_LEFT + PinControl.PINS_PADDING_HORIZONTAL);
        if (this._isInput) {
            canvas.textAlign("left");
            textX = PinControl.PIN_NAME_PADDING_LEFT + PinControl.PINS_PADDING_HORIZONTAL;
        }
        else
            canvas.textAlign("right");
        canvas.font('12px sans-serif')
            .fillStyle("#eee");
        return textX;
    }
    formattedNameWidth(pin) {
        return this.app.canvas.font(_constants__WEBPACK_IMPORTED_MODULE_0__.Constants.NODE_FONT).getContext().measureText(pin.formattedName).width + PinControl.PIN_NAME_PADDING_LEFT;
    }
    // TODO: Remove this function
    static calculateTotalPinWidth(pin) {
        return 0;
        // let defaultValueBoxWidth = DefaultValueBox.defaultValueWidth(pin);
        // if(defaultValueBoxWidth > 0) {
        //     defaultValueBoxWidth += Constants.DEFAULT_VALUE_BOX_MARGIN_LEFT;
        // }
        // return PinControl.formattedNameWidth(pin) + defaultValueBoxWidth;
    }
    getPinAbsolutePosition() {
        let position = this.getAbsolutPosition();
        position.y += this.height * 0.5;
        if (this.pinProperty.direction === _data_pin_pin_direction__WEBPACK_IMPORTED_MODULE_3__.PinDirection.EGPD_Output) {
            position.x += (this.width || this.size.x) - PinControl.PINS_PADDING_HORIZONTAL;
            if (this.pinProperty.category === _data_pin_pin_category__WEBPACK_IMPORTED_MODULE_1__.PinCategory.delegate)
                position.x += 8;
        }
        else {
            position.x += PinControl.PINS_PADDING_HORIZONTAL;
        }
        return position;
    }
}
PinControl.PIN_NAME_PADDING_LEFT = 12;
PinControl.PINS_PADDING_HORIZONTAL = 16;


/***/ }),

/***/ "./src/controls/struct-box.control.ts":
/*!********************************************!*\
  !*** ./src/controls/struct-box.control.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StructBoxControl": () => (/* binding */ StructBoxControl)
/* harmony export */ });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _user_control__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./user-control */ "./src/controls/user-control.ts");


class StructBoxControl extends _user_control__WEBPACK_IMPORTED_MODULE_1__.UserControl {
    constructor(entries) {
        super();
        this.height = _constants__WEBPACK_IMPORTED_MODULE_0__.Constants.DEFAULT_BOX_HEIGHT;
        this.entries = [];
    }
    initialize() {
        let totalWidth = 0;
        this.entries.forEach(e => {
            const keyWidth = this.app.canvas.getContext().measureText(`${e.key}`).width + 3;
            const valueWidth = this.app.canvas.getContext().measureText(`${e.value}`).width;
            const boxWidth = (keyWidth + valueWidth) // Width of the text
                + (_constants__WEBPACK_IMPORTED_MODULE_0__.Constants.DEFAULT_VALUE_BOX_TEXT_PADDING * 2); // Left and right box padding
            this.entries.push({
                key: e.key,
                value: e.value,
                x: totalWidth,
                keyWidth,
                boxWidth
            });
            totalWidth += boxWidth + 5; // Margin left;
        });
        this.width = totalWidth;
    }
    onDraw(canvas) {
        this.entries.forEach(entry => {
            canvas // Draw background box
                .roundedRectangle(entry.x, 0 - _constants__WEBPACK_IMPORTED_MODULE_0__.Constants.DEFAULT_BOX_HEIGHT / 2, entry.boxWidth, _constants__WEBPACK_IMPORTED_MODULE_0__.Constants.DEFAULT_BOX_HEIGHT, _constants__WEBPACK_IMPORTED_MODULE_0__.Constants.DEFAULT_BOX_RADIUS)
                .fillStyle('rgba(70,70,70,0.5)')
                .fill();
            canvas // Draw key label
                .textAlign("left")
                .font('10px sans-serif')
                .fillStyle("#999")
                .fillText(`${entry.key}`, entry.x + _constants__WEBPACK_IMPORTED_MODULE_0__.Constants.DEFAULT_VALUE_BOX_TEXT_PADDING, _constants__WEBPACK_IMPORTED_MODULE_0__.Constants.DEFAULT_VALUE_BOX_TEXT_PADDING);
            canvas // Draw value
                .textAlign("left")
                .font(_constants__WEBPACK_IMPORTED_MODULE_0__.Constants.NODE_FONT)
                .fillStyle("#ccc")
                .fillText(`${entry.value}`, entry.x + entry.keyWidth + _constants__WEBPACK_IMPORTED_MODULE_0__.Constants.DEFAULT_VALUE_BOX_TEXT_PADDING, _constants__WEBPACK_IMPORTED_MODULE_0__.Constants.DEFAULT_VALUE_BOX_TEXT_PADDING);
        });
    }
}


/***/ }),

/***/ "./src/controls/text-box.control.ts":
/*!******************************************!*\
  !*** ./src/controls/text-box.control.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TextBoxControl": () => (/* binding */ TextBoxControl)
/* harmony export */ });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ "./src/constants.ts");
/* harmony import */ var _user_control__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./user-control */ "./src/controls/user-control.ts");


class TextBoxControl extends _user_control__WEBPACK_IMPORTED_MODULE_1__.UserControl {
    constructor(text) {
        super();
        this.text = text;
        this.height = _constants__WEBPACK_IMPORTED_MODULE_0__.Constants.DEFAULT_BOX_HEIGHT;
    }
    initialize() {
        this.width = this.app.canvas.getContext().measureText(this.text).width + _constants__WEBPACK_IMPORTED_MODULE_0__.Constants.DEFAULT_VALUE_BOX_TEXT_PADDING * 2;
    }
    onDraw(canvas) {
        canvas
            .roundedRectangle(0, 0 - _constants__WEBPACK_IMPORTED_MODULE_0__.Constants.DEFAULT_BOX_HEIGHT / 2, this.width, _constants__WEBPACK_IMPORTED_MODULE_0__.Constants.DEFAULT_BOX_HEIGHT, _constants__WEBPACK_IMPORTED_MODULE_0__.Constants.DEFAULT_BOX_RADIUS)
            .fillStyle('rgba(70,70,70,0.5)')
            .fill()
            .font(_constants__WEBPACK_IMPORTED_MODULE_0__.Constants.NODE_FONT)
            .fillStyle("#ccc")
            .textAlign("left")
            .fillText(this.text, _constants__WEBPACK_IMPORTED_MODULE_0__.Constants.DEFAULT_VALUE_BOX_TEXT_PADDING, _constants__WEBPACK_IMPORTED_MODULE_0__.Constants.DEFAULT_VALUE_BOX_TEXT_PADDING);
    }
}


/***/ }),

/***/ "./src/controls/user-control.ts":
/*!**************************************!*\
  !*** ./src/controls/user-control.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "UserControl": () => (/* binding */ UserControl)
/* harmony export */ });
/* harmony import */ var _math_vector2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math/vector2 */ "./src/math/vector2.ts");
/* harmony import */ var _control__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./control */ "./src/controls/control.ts");


class UserControl extends _control__WEBPACK_IMPORTED_MODULE_1__.Control {
    constructor(x, y, zIndex) {
        super(x, y, zIndex);
        this.padding = { top: 0, right: 0, bottom: 0, left: 0 };
        this.controlSize = new _math_vector2__WEBPACK_IMPORTED_MODULE_0__.Vector2(0, 0);
        this.visible = true;
    }
    get parent() {
        return this.controlParent;
    }
    set parent(value) {
        this.controlParent = value;
    }
    draw(canvas) {
        if (!this.visible) {
            return;
        }
        canvas.save();
        canvas.translate(Math.round(this.position.x), Math.round(this.position.y));
        this.onDraw(canvas);
        canvas.restore();
    }
    refreshLayout() {
        this.controlSize = this.getCalculatedSize();
        this.setDirty(true);
        if (this.controlParent) {
            this.controlParent.refreshLayout();
        }
    }
    getCalculatedSize() {
        let size = this.size;
        size.x += this.padding.left + this.padding.right;
        size.y += this.padding.top + this.padding.bottom;
        return size;
    }
    get size() {
        let size = this.controlSize.copy();
        size.x = Math.max(size.x, (this.desiredWidth || 0));
        size.y = Math.max(size.y, (this.desiredHeight || 0));
        size.x = Math.max(size.x, (this.minWidth || 0));
        size.y = Math.max(size.y, (this.minHeight || 0));
        size.x = (this.width) ? this.width : size.x;
        size.y = (this.height) ? this.height : size.y;
        return size;
    }
    setDirty(value) {
        this.dirty = value;
    }
    isDirty() {
        return this.dirty;
    }
    getAbsolutPosition() {
        let position = new _math_vector2__WEBPACK_IMPORTED_MODULE_0__.Vector2(0, 0);
        if (this.controlParent !== undefined) {
            position = this.controlParent.getAbsolutPosition();
            position.y += this.controlParent.padding.top;
            position.x += this.controlParent.padding.left;
        }
        position.x += this.position.x;
        position.y += this.position.y;
        return position;
    }
    findParent(type) {
        if (this.controlParent === undefined)
            return undefined;
        if (this.controlParent instanceof type) {
            return this.controlParent;
        }
        else {
            return this.controlParent.findParent(type);
        }
    }
}


/***/ }),

/***/ "./src/controls/utils/color-box.control.ts":
/*!*************************************************!*\
  !*** ./src/controls/utils/color-box.control.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ColorBoxControl": () => (/* binding */ ColorBoxControl)
/* harmony export */ });
/* harmony import */ var _user_control__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../user-control */ "./src/controls/user-control.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../constants */ "./src/constants.ts");


class ColorBoxControl extends _user_control__WEBPACK_IMPORTED_MODULE_0__.UserControl {
    constructor(color) {
        super();
        this.color = color;
        this.height = _constants__WEBPACK_IMPORTED_MODULE_1__.Constants.DEFAULT_BOX_HEIGHT;
        this.width = this.height;
    }
    onDraw(canvas) {
        canvas
            .roundedRectangle(0, 0 - _constants__WEBPACK_IMPORTED_MODULE_1__.Constants.DEFAULT_BOX_HEIGHT / 2, this.width, this.height, _constants__WEBPACK_IMPORTED_MODULE_1__.Constants.DEFAULT_BOX_RADIUS)
            .fillStyle(this.color.toRGBAString())
            .fill();
    }
}


/***/ }),

/***/ "./src/controls/utils/color-utils.ts":
/*!*******************************************!*\
  !*** ./src/controls/utils/color-utils.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StructClass": () => (/* binding */ StructClass),
/* harmony export */   "ColorUtils": () => (/* binding */ ColorUtils)
/* harmony export */ });
/* harmony import */ var _data_pin_pin_category__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../data/pin/pin-category */ "./src/data/pin/pin-category.ts");

var StructClass;
(function (StructClass) {
    StructClass["VECTOR"] = "/Script/CoreUObject.Vector";
    StructClass["ROTATOR"] = "/Script/CoreUObject.Rotator";
    StructClass["LatentActionInfo"] = "/Script/Engine.LatentActionInfo";
    StructClass["LINEAR_COLOR"] = "/Script/CoreUObject.LinearColor";
    StructClass["VECTOR2D"] = "/Script/CoreUObject.Vector2D";
    StructClass["TRANSFORM"] = "/Script/CoreUObject.Transform";
})(StructClass || (StructClass = {}));
class ColorUtils {
    static getPinColor(pin) {
        return this.getPinColorByCategory(pin.category, pin.subCategoryObject.class);
    }
    static getPinColorByCategory(category, subCategoryObject) {
        switch (category) {
            case _data_pin_pin_category__WEBPACK_IMPORTED_MODULE_0__.PinCategory.delegate:
                return 'rgb(255, 56, 56)';
            case _data_pin_pin_category__WEBPACK_IMPORTED_MODULE_0__.PinCategory.bool:
                return 'rgb(146, 1, 1)';
            case _data_pin_pin_category__WEBPACK_IMPORTED_MODULE_0__.PinCategory.float:
                return 'rgb(158, 250, 68)';
            case _data_pin_pin_category__WEBPACK_IMPORTED_MODULE_0__.PinCategory.int:
                return 'rgb(30, 226, 174)';
            case _data_pin_pin_category__WEBPACK_IMPORTED_MODULE_0__.PinCategory.int64:
                return 'rgb(171, 226, 174)';
            case _data_pin_pin_category__WEBPACK_IMPORTED_MODULE_0__.PinCategory.byte:
                return 'rgb(0, 101, 92)';
            case _data_pin_pin_category__WEBPACK_IMPORTED_MODULE_0__.PinCategory.struct:
                const map = {
                    [StructClass.VECTOR]: 'rgb(253, 200, 35)',
                    [StructClass.ROTATOR]: 'rgb(159, 178, 253)',
                    [StructClass.TRANSFORM]: 'rgb(230, 105, 2)',
                };
                return map[subCategoryObject] || 'rgb(0, 88, 200)';
            case _data_pin_pin_category__WEBPACK_IMPORTED_MODULE_0__.PinCategory.name:
                return 'rgb(150, 97, 185)';
            case _data_pin_pin_category__WEBPACK_IMPORTED_MODULE_0__.PinCategory.string:
                return 'rgb(254, 0, 212)';
            case _data_pin_pin_category__WEBPACK_IMPORTED_MODULE_0__.PinCategory.object:
                return 'rgb(0, 133, 191)';
            case _data_pin_pin_category__WEBPACK_IMPORTED_MODULE_0__.PinCategory["class"]:
                return 'rgb(88, 0, 187)';
            case _data_pin_pin_category__WEBPACK_IMPORTED_MODULE_0__.PinCategory.wildcard:
                return 'rgb(128, 121, 121)';
            case _data_pin_pin_category__WEBPACK_IMPORTED_MODULE_0__.PinCategory.text:
                return 'rgb(230, 123, 169)';
            case _data_pin_pin_category__WEBPACK_IMPORTED_MODULE_0__.PinCategory.byte:
                return 'rgb(0, 110, 100)';
            default:
                return 'rgb(230, 230, 230)';
        }
    }
}


/***/ }),

/***/ "./src/controls/utils/icon-library.ts":
/*!********************************************!*\
  !*** ./src/controls/utils/icon-library.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "IconLibrary": () => (/* binding */ IconLibrary)
/* harmony export */ });
class IconLibrary {
}
IconLibrary.PIN_ARRAY_CONNECTED = "M9.482,10.473l-2.964,-0l0,3.024l2.964,0l-0,-3.024Zm-3.969,-0l-2.963,-0l-0,3.024l2.963,0l0,-3.024Zm7.937,-0l-2.963,-0l-0,3.024l2.963,0l0,-3.024Zm-3.968,-4.027l-2.964,0l0,3.025l2.964,-0l-0,-3.025Zm-3.969,0l-2.963,0l-0,3.025l2.963,-0l0,-3.025Zm7.937,0l-2.963,0l-0,3.025l2.963,-0l0,-3.025Zm-7.937,-4.026l-2.963,-0l-0,3.024l2.963,0l0,-3.024Zm3.969,-0l-2.964,-0l0,3.024l2.964,0l-0,-3.024Zm3.968,-0l-2.963,-0l-0,3.024l2.963,0l0,-3.024Z";
IconLibrary.PIN_ARRAY_DISCONNECTED = "M9.482,10.473l-2.964,-0l0,3.024l2.964,0l-0,-3.024Zm-3.969,-0l-2.963,-0l-0,3.024l2.963,0l0,-3.024Zm7.937,-0l-2.963,-0l-0,3.024l2.963,0l0,-3.024Zm-7.937,-4.027l-2.963,0l-0,3.025l2.963,-0l0,-3.025Zm7.937,0l-2.963,0l-0,3.025l2.963,-0l0,-3.025Zm-7.937,-4.026l-2.963,-0l-0,3.024l2.963,0l0,-3.024Zm3.969,-0l-2.964,-0l0,3.024l2.964,0l-0,-3.024Zm3.968,-0l-2.963,-0l-0,3.024l2.963,0l0,-3.024Z";
IconLibrary.PIN_SET = "M6.966,1.985l-0,2.034l-1.053,-0c-0.494,-0 -0.894,0.4 -0.894,0.894l-0,0.07l-0.013,-0c-0,1.187 -0.516,2.255 -1.336,2.992c0.82,0.736 1.336,1.804 1.336,2.992l-0.002,0.05l0.015,0l-0,0.07c-0,0.494 0.4,0.894 0.894,0.894l1.053,0l-0,1.999l-1.469,-0c-1.382,-0 -2.504,-1.122 -2.504,-2.503l0,-0.46c0,-1.11 -0.901,-2.011 -2.011,-2.011l0,-2.012c1.11,-0 2.011,-0.901 2.011,-2.011l0,-0.495c0,-1.381 1.122,-2.503 2.504,-2.503l1.469,0Zm2.002,0l1.535,0c1.382,0 2.504,1.122 2.504,2.503l-0,0.495c-0,1.11 0.901,2.011 2.011,2.011l-0,2.012c-1.11,0 -2.011,0.901 -2.011,2.011l-0,0.46c-0,1.381 -1.122,2.503 -2.504,2.503l-1.535,-0l0,-1.999l1.119,0c0.494,0 0.894,-0.4 0.894,-0.894l0,-0.07l0.013,0c0,-1.194 0.522,-2.268 1.351,-3.005c-0.829,-0.737 -1.351,-1.811 -1.351,-3.006l0.001,-0.023l-0.014,-0l0,-0.07c0,-0.494 -0.4,-0.894 -0.894,-0.894l-1.119,-0l0,-2.034Z";
IconLibrary.PIN_MAP_KEY = "M5.513,10.473l-2.963,-0l-0,3.024l2.963,0l0,-3.024Zm0,-4.027l-2.963,0l-0,3.025l2.963,-0l0,-3.025Zm0,-4.026l-2.963,-0l-0,3.024l2.963,0l0,-3.024Z";
IconLibrary.PIN_MAP_VALUE = "M13.45,10.473l-6.932,-0l0,3.024l6.932,0l0,-3.024Zm0,-4.027l-6.932,0l0,3.025l6.932,-0l0,-3.025Zm0,-4.026l-6.932,-0l0,3.024l6.932,0l0,-3.024Z";
IconLibrary.PIN_REFERENCE_CONNECTED = "M13.45,8.001l-5.45,-5.451l-5.45,5.451l5.45,5.45l5.45,-5.45Z";
IconLibrary.PIN_REFERENCE_DISCONNECTED = "M13.45,8.001l-5.45,-5.451l-5.45,5.451l5.45,5.45l5.45,-5.45Zm-2.596,-0l-2.854,-2.855l-2.854,2.855l2.854,2.854l2.854,-2.854Z";
IconLibrary.DEFAULT_VALUE_BOOL_TRUE = "M6.42,8.655l-1.177,-1.177c-0.382,-0.382 -1.002,-0.382 -1.383,-0c-0.382,0.381 -0.382,1.001 -0,1.383l1.853,1.853c0.195,0.194 0.451,0.29 0.707,0.285c0.256,0.005 0.513,-0.091 0.707,-0.285l5.013,-5.013c0.382,-0.382 0.382,-1.002 0,-1.383c-0.381,-0.382 -1.001,-0.382 -1.383,-0l-4.337,4.337Z";
IconLibrary.FUNCTION = "M12.962,3.932c0.88,-1.811 -0.139,-2.954 -1.879,-2.949c-3.498,0.01 -3.564,2.488 -4.093,5.112l-1.868,-0.077l-0.287,1.435l1.907,0.114l-0.837,5.243c0,-0 -0.292,1.924 -1.164,1.805c-0.978,-0.133 -0.602,-1.396 -0.602,-1.396l-1.174,-0.429c-0.553,1.226 -0.293,3.209 1.87,3.21c3.352,0.001 3.163,-1.918 4.352,-8.227l1.697,0.093l0.435,-1.485l-1.849,-0.089c0.501,-2.285 0.48,-4.128 1.849,-3.868c0.618,0.118 0.249,1.508 0.249,1.508l1.394,-0Z";
IconLibrary.MAKE_STRUCT = "M1.121,16l-1.121,-1.121l2.332,-2.332l-1.778,-0l-0,-1.586l4.485,-0l0,4.485l-1.586,0l0,-1.778l-2.332,2.332Zm12.316,-9.213c0,-0.606 -0.492,-1.098 -1.097,-1.098l-7.824,0c-0.606,0 -1.098,0.492 -1.098,1.098l-0,2.196c-0,0.606 0.492,1.098 1.098,1.098l7.824,-0c0.605,-0 1.097,-0.492 1.097,-1.098l0,-2.196Zm-13.437,-5.666l1.121,-1.121l2.332,2.332l0,-1.778l1.586,-0l0,4.485l-4.485,0l-0,-1.586l1.778,0l-2.332,-2.332Z";
IconLibrary.BREAK_STRUCT = "M11.011,12.082l1.122,-1.121l2.332,2.332l-0,-1.778l1.585,-0l0,4.485l-4.485,-0l0,-1.586l1.778,0l-2.332,-2.332Zm2.426,-5.237c0,-0.606 -0.492,-1.098 -1.097,-1.098l-7.824,-0c-0.606,-0 -1.098,0.492 -1.098,1.098l-0,2.195c-0,0.606 0.492,1.098 1.098,1.098l7.824,0c0.605,0 1.097,-0.492 1.097,-1.098l0,-2.195Zm-1.358,-1.803l-1.121,-1.121l2.332,-2.332l-1.779,0l0,-1.586l4.486,0l-0,4.486l-1.586,-0l-0,-1.779l-2.332,2.332Z";
IconLibrary.EVENT = "M15.475,9.212c0.669,-0.669 0.669,-1.755 -0,-2.424l-6.263,-6.263c-0.669,-0.669 -1.755,-0.669 -2.424,0l-6.263,6.263c-0.669,0.669 -0.669,1.755 0,2.424l6.263,6.263c0.669,0.669 1.755,0.669 2.424,-0l6.263,-6.263Zm-11.195,1.194c-0.116,-0 -0.227,-0.046 -0.309,-0.128c-0.082,-0.082 -0.128,-0.193 -0.128,-0.309c0,-0.923 0,-3.057 0,-3.947c0,-0.106 0.042,-0.207 0.117,-0.282c0.075,-0.075 0.177,-0.118 0.283,-0.118c0.95,0 3.261,0 3.261,0l0,-3.552c0,-0.151 0.09,-0.287 0.228,-0.348c0.138,-0.06 0.298,-0.033 0.409,0.069c1.527,1.411 5.35,4.945 6.44,5.951c0.076,0.071 0.119,0.169 0.119,0.272c-0,0.103 -0.043,0.202 -0.119,0.272c-1.081,0.999 -4.856,4.487 -6.405,5.919c-0.117,0.108 -0.286,0.136 -0.432,0.073c-0.146,-0.064 -0.24,-0.208 -0.24,-0.367c0,-1.294 0,-3.505 0,-3.505l-3.224,-0Z";
IconLibrary.CUSTOM_EVENT = "M15.475,9.212c0.669,-0.669 0.669,-1.755 -0,-2.424l-6.263,-6.263c-0.669,-0.669 -1.755,-0.669 -2.424,0l-6.263,6.263c-0.669,0.669 -0.669,1.755 0,2.424l6.263,6.263c0.669,0.669 1.755,0.669 2.424,-0l6.263,-6.263Zm-11.195,1.194c-0.116,-0 -0.227,-0.046 -0.309,-0.128c-0.082,-0.082 -0.128,-0.193 -0.128,-0.309c0,-0.923 0,-3.057 0,-3.947c0,-0.106 0.042,-0.207 0.117,-0.282c0.075,-0.075 0.177,-0.118 0.283,-0.118c0.95,0 3.261,0 3.261,0l0,-3.552c0,-0.151 0.09,-0.287 0.228,-0.348c0.138,-0.06 0.298,-0.033 0.409,0.069c1.527,1.411 5.35,4.945 6.44,5.951c0.076,0.071 0.119,0.169 0.119,0.272c-0,0.103 -0.043,0.202 -0.119,0.272c-1.081,0.999 -4.856,4.487 -6.405,5.919c-0.117,0.108 -0.286,0.136 -0.432,0.073c-0.146,-0.064 -0.24,-0.208 -0.24,-0.367c0,-1.294 0,-3.505 0,-3.505l-3.224,-0Zm6.96,-4.087c-0.446,-0.446 -1.051,-0.697 -1.682,-0.697c-1.313,0 -2.378,1.066 -2.378,2.379c-0,1.313 1.065,2.378 2.378,2.378c0.631,0 1.236,-0.25 1.682,-0.696l-0.841,-0.841c-0.223,0.223 -0.526,0.348 -0.841,0.348c-0.656,0 -1.189,-0.533 -1.189,-1.189c-0,-0.656 0.533,-1.189 1.189,-1.189c0.315,-0 0.618,0.125 0.841,0.348l0.841,-0.841Z";
IconLibrary.BRANCH = "M10.996,1.917l0,-1.917l3.956,2.482l-3.956,2.482l0,-1.818l-1.257,0l-0.125,0.002c-2.623,0.066 -4.729,2.213 -4.729,4.852c0,2.681 2.173,4.854 4.854,4.854l1.257,-0l0,-1.818l3.956,2.482l-3.956,2.482l0,-1.917l-1.257,0c-3.022,0 -5.529,-2.202 -6.002,-5.089l-2.755,-0l0,-1.988l2.755,0c0.473,-2.887 2.98,-5.089 6.002,-5.089l1.257,-0Z";
IconLibrary.SEQUENCE = "M4.975,11.974l-0,-3.015l3.025,-0l0,-1.988l-3.025,-0l-0,-3.015l3.025,-0l0,-1.989l-5.014,0l0,5.039l-3.025,-0l0,1.988l3.025,0l0,4.968l5.014,0l-0,-1.988l-3.025,-0Zm4.36,-0l-0,1.988l2.018,0l-0,-1.988l-2.018,-0Zm-0,-5.003l-0,1.988l4.036,-0l-0,-1.988l-4.036,-0Zm-0,-5.004l-0,1.989l5.617,-0l-0,-1.989l-5.617,0Z";
IconLibrary.LOOP = "M5.952,2.997l0,-2.041l4.857,3.472l-4.857,3.473l0,-2.428c-1.902,0.046 -3.433,1.606 -3.433,3.52c0,1.944 1.579,3.522 3.522,3.522l3.918,-0c1.943,-0 3.522,-1.578 3.522,-3.522c-0,-1.651 -1.138,-3.037 -2.672,-3.418l0,-2.524c2.929,0.393 5.191,2.905 5.191,5.942c0,3.31 -2.687,5.997 -5.997,5.997l-4.006,0c-3.31,0 -5.997,-2.687 -5.997,-5.997c0,-3.295 2.663,-5.973 5.952,-5.996Z";
IconLibrary.GATE = "M0.982,2.984l0,10.004l13.97,-0l-0,-10.004l-13.97,0Zm11.496,8.493l-4.538,-2.756l-5.424,-0l-0,2.756l9.962,-0Zm-2.065,-2.756l3.005,1.824l0,-1.824l-3.005,-0Zm-7.897,-1.502l2.951,-0l-2.951,-1.792l-0,1.792Zm0.939,-2.724l4.485,2.724l5.478,-0l0,-2.724l-9.963,0Z";
IconLibrary.FLIPFLOP = "M10.251,14.01l4.701,-10.034l-0,-2.993l-4.701,10.034l-3.977,-10.034l-5.292,10.034l0,2.993l5.292,-10.034l3.977,10.034Z";
IconLibrary.DO_N = "M0.982,10.143l0,-2.242l10.492,0l-0.903,-0.902l1.179,-1.179l3.202,3.202l-3.202,3.202l-1.179,-1.178l0.903,-0.903l-10.492,-0Zm6.017,-7.805l1.981,2.627l1.023,-0l-0,-3.982l-1.023,-0l0,2.627l-1.981,-2.627l-1.022,-0l-0,3.982l1.022,-0l-0,-2.627Z";
IconLibrary.DO_ONCE = "M0.982,10.143l0,-2.242l10.492,0l-0.903,-0.902l1.179,-1.179l3.202,3.202l-3.202,3.202l-1.179,-1.178l0.903,-0.903l-10.492,-0Zm6.045,-9.16l0.973,-0l0,4.005l0.988,0l0,1.002l-2.983,-0l0,-1.002l1.002,0l-0,-2.002l-1.002,-0l0,-0.981c0.564,-0 1.022,-0.458 1.022,-1.022Z";
IconLibrary.SWITCH = "M4.975,11.974l-0,-3.015l3.025,-0l0,-1.988l-3.025,-0l-0,-3.015l3.025,-0l0,-1.989l-5.014,0l0,5.039l-3.025,-0l0,1.988l3.025,0l0,4.968l5.014,0l-0,-1.988l-3.025,-0Zm4.983,-7.935l0,-2.094l2.817,-0l-0.875,-0.875l1.069,-1.07l2.992,2.992l-2.992,2.991l-1.069,-1.069l0.875,-0.875l-2.817,-0Z";
IconLibrary.CAST = "M5.22,9.035l-3.249,2.233l0,-5.509l3.261,2.241l4.768,0l-0,-3.001l4.952,3.515l-4.952,3.515l-0,-2.994l-4.78,0Z";
IconLibrary.SELECT = "M8,6.971l0,-5.004l-6.005,0l0,1.989l4.017,-0l-0,3.015l-4.017,-0l0,1.988l4.017,-0l-0,3.015l-4.017,-0l0,1.988l4.017,0l-0,0.035l1.988,0l0,-5.038l1.017,-0l-0,-1.988l-1.017,-0Zm3.966,2.074l-1.956,-0l0,-2.09l1.956,0l0,-1.941l1.048,0l2.986,2.986l-2.986,2.986l-1.048,-0l0,-1.941Z";
IconLibrary.INPUT_KEY = "M9.263,12.728c-0,-0.247 -0.201,-0.447 -0.447,-0.447l-2.566,-0c-0.247,-0 -0.447,0.2 -0.447,0.447l0,2.619c0,0.247 0.2,0.447 0.447,0.447l2.566,0c0.246,0 0.447,-0.2 0.447,-0.447l-0,-2.619Zm3.923,-0c-0,-0.247 -0.2,-0.447 -0.447,-0.447l-2.566,-0c-0.246,-0 -0.447,0.2 -0.447,0.447l0,2.619c0,0.247 0.201,0.447 0.447,0.447l2.566,0c0.247,0 0.447,-0.2 0.447,-0.447l-0,-2.619Zm-5.429,-4.005c-0,-0.247 -0.201,-0.447 -0.447,-0.447l-2.566,-0c-0.246,-0 -0.447,0.2 -0.447,0.447l0,2.619c0,0.247 0.201,0.447 0.447,0.447l2.566,-0c0.246,-0 0.447,-0.2 0.447,-0.447l-0,-2.619Zm7.892,-0c-0,-0.247 -0.201,-0.447 -0.448,-0.447l-2.565,-0c-0.247,-0 -0.447,0.2 -0.447,0.447l0,2.619c0,0.247 0.2,0.447 0.447,0.447l2.565,-0c0.247,-0 0.448,-0.2 0.448,-0.447l-0,-2.619Zm-11.838,-0c-0,-0.247 -0.2,-0.447 -0.447,-0.447l-2.565,-0c-0.247,-0 -0.448,0.2 -0.448,0.447l0,2.619c0,0.247 0.201,0.447 0.448,0.447l2.565,-0c0.247,-0 0.447,-0.2 0.447,-0.447l-0,-2.619Zm7.892,-0c-0,-0.247 -0.201,-0.447 -0.447,-0.447l-2.566,-0c-0.246,-0 -0.447,0.2 -0.447,0.447l0,2.619c0,0.247 0.201,0.447 0.447,0.447l2.566,-0c0.246,-0 0.447,-0.2 0.447,-0.447l-0,-2.619Zm-4.918,-4.005c0,-0.247 -0.2,-0.448 -0.447,-0.448l-2.565,0c-0.247,0 -0.447,0.201 -0.447,0.448l-0,2.619c-0,0.246 0.2,0.447 0.447,0.447l2.565,-0c0.247,-0 0.447,-0.201 0.447,-0.447l0,-2.619Zm3.938,-0c0,-0.247 -0.2,-0.448 -0.447,-0.448l-2.565,0c-0.247,0 -0.447,0.201 -0.447,0.448l-0,2.619c-0,0.246 0.2,0.447 0.447,0.447l2.565,-0c0.247,-0 0.447,-0.201 0.447,-0.447l0,-2.619Zm-2.966,-4.065c-0,-0.247 -0.201,-0.447 -0.447,-0.447l-2.566,-0c-0.246,-0 -0.447,0.2 -0.447,0.447l0,2.619c0,0.247 0.201,0.447 0.447,0.447l2.566,0c0.246,0 0.447,-0.2 0.447,-0.447l-0,-2.619Zm-3.946,0c-0,-0.247 -0.2,-0.447 -0.447,-0.447l-2.565,-0c-0.247,-0 -0.448,0.2 -0.448,0.447l0,2.619c0,0.247 0.201,0.447 0.448,0.447l2.565,0c0.247,0 0.447,-0.2 0.447,-0.447l-0,-2.619Zm7.892,0c-0,-0.247 -0.201,-0.447 -0.447,-0.447l-2.566,-0c-0.246,-0 -0.447,0.2 -0.447,0.447l0,2.619c0,0.247 0.201,0.447 0.447,0.447l2.566,0c0.246,0 0.447,-0.2 0.447,-0.447l-0,-2.619Z";
IconLibrary.INPUT_GAMEPAD = "M10.506,5.016l0,-0.246c0,-0.135 0.111,-0.245 0.246,-0.245l1.507,-0c0.136,-0 0.246,0.11 0.246,0.245l-0,0.701c0.632,0.356 1.144,0.99 1.498,1.729c0.619,1.289 1.706,5.78 -0.433,5.81c-1.305,0.018 -1.934,-1.533 -3.13,-3.351l-4.88,-0c-1.196,1.818 -1.825,3.369 -3.13,3.351c-2.139,-0.03 -1.052,-4.521 -0.433,-5.81c0.354,-0.739 0.866,-1.373 1.498,-1.729l0,-0.701c0,-0.135 0.11,-0.245 0.246,-0.245l1.507,-0c0.135,-0 0.246,0.11 0.246,0.245l-0,0.246l5.012,-0Zm0.788,2.477c-0.251,0 -0.439,0.198 -0.42,0.442c0.019,0.244 0.238,0.442 0.489,0.442c0.251,0 0.439,-0.198 0.42,-0.442c-0.019,-0.244 -0.238,-0.442 -0.489,-0.442Zm-6.834,0c0.251,0 0.439,0.198 0.42,0.442c-0.019,0.244 -0.238,0.442 -0.489,0.442c-0.251,0 -0.439,-0.198 -0.42,-0.442c0.019,-0.244 0.238,-0.442 0.489,-0.442Zm7.555,-0.735c-0.251,0 -0.44,0.198 -0.421,0.442c0.019,0.244 0.238,0.442 0.489,0.442c0.251,0 0.44,-0.198 0.421,-0.442c-0.019,-0.244 -0.238,-0.442 -0.489,-0.442Zm-1.633,0c-0.251,0 -0.439,0.198 -0.42,0.442c0.019,0.244 0.238,0.442 0.489,0.442c0.251,0 0.439,-0.198 0.42,-0.442c-0.019,-0.244 -0.238,-0.442 -0.489,-0.442Zm-6.643,0c0.251,0 0.439,0.198 0.42,0.442c-0.019,0.244 -0.238,0.442 -0.489,0.442c-0.251,0 -0.439,-0.198 -0.42,-0.442c0.019,-0.244 0.238,-0.442 0.489,-0.442Zm1.633,0c0.25,0 0.439,0.198 0.42,0.442c-0.019,0.244 -0.238,0.442 -0.489,0.442c-0.251,0 -0.439,-0.198 -0.42,-0.442c0.019,-0.244 0.238,-0.442 0.489,-0.442Zm5.731,-0.71c-0.251,0 -0.439,0.198 -0.42,0.442c0.019,0.244 0.238,0.442 0.489,0.442c0.25,0 0.439,-0.198 0.42,-0.442c-0.019,-0.244 -0.238,-0.442 -0.489,-0.442Zm-6.452,0c0.251,0 0.439,0.198 0.42,0.442c-0.019,0.244 -0.238,0.442 -0.489,0.442c-0.251,0 -0.439,-0.198 -0.42,-0.442c0.019,-0.244 0.238,-0.442 0.489,-0.442Z";
IconLibrary.INPUT_TOUCH = "M7.717,11.585c-0,-0.332 -0.27,-0.601 -0.601,-0.601l-5.533,-0c-0.332,-0 -0.601,0.269 -0.601,0.601l0,2.804c0,0.332 0.269,0.601 0.601,0.601l5.533,0c0.331,0 0.601,-0.269 0.601,-0.601l-0,-2.804Zm7.301,-0c-0,-0.332 -0.269,-0.601 -0.601,-0.601l-5.533,-0c-0.331,-0 -0.601,0.269 -0.601,0.601l0,2.804c0,0.332 0.27,0.601 0.601,0.601l5.533,0c0.332,0 0.601,-0.269 0.601,-0.601l-0,-2.804Zm-0,-10.128c-0,-0.262 -0.212,-0.474 -0.474,-0.474l-13.088,-0c-0.262,-0 -0.474,0.212 -0.474,0.474l0,8.531c0,0.262 0.212,0.474 0.474,0.474l13.088,0c0.262,0 0.474,-0.212 0.474,-0.474l-0,-8.531Zm-7.018,0.527c2.063,0 3.738,1.675 3.738,3.738c0,2.064 -1.675,3.739 -3.738,3.739c-2.063,-0 -3.738,-1.675 -3.738,-3.739c-0,-2.063 1.675,-3.738 3.738,-3.738Zm0,0.603c1.73,-0 3.135,1.405 3.135,3.135c0,1.731 -1.405,3.136 -3.135,3.136c-1.73,-0 -3.135,-1.405 -3.135,-3.136c-0,-1.73 1.405,-3.135 3.135,-3.135Z";
IconLibrary.MOUSE = "M2.706,6.758c1.309,-0.436 3.204,-0.718 5.294,-0.718c1.872,-0 3.587,0.227 4.865,0.587c0.006,0.446 0.006,0.905 0.006,1.373c-0,4.415 -2.719,8 -4.881,8c-2.162,0 -5.299,-3.585 -5.299,-8c0,-0.423 0.004,-0.838 0.015,-1.242Zm5.02,-6.755l0,1.879c-0.49,0.309 -0.854,1.062 -0.854,1.93c-0,0.669 0.216,1.268 0.538,1.65c-1.863,0.052 -3.52,0.347 -4.685,0.791c0.16,-3.503 1.016,-6.148 5.001,-6.25Zm0.527,0.001c3.916,0.117 4.511,2.677 4.602,6.102c-1.133,-0.363 -2.629,-0.6 -4.285,-0.645c0.322,-0.381 0.537,-0.981 0.537,-1.649c0,-0.868 -0.364,-1.621 -0.854,-1.93l-0,-1.878Zm-0.511,2.184l0.495,0c0.195,0.43 0.33,1.005 0.33,1.624c0,0.628 -0.139,1.212 -0.339,1.643c-0.076,-0.001 -0.152,-0.001 -0.228,-0.001c-0.083,-0 -0.166,0 -0.249,0.001c-0.2,-0.431 -0.339,-1.015 -0.339,-1.643c-0,-0.619 0.135,-1.194 0.33,-1.624Z";
IconLibrary.PILL = "M15.018,8.973c-0,-1.637 -1.329,-2.966 -2.966,-2.966l-8.104,-0c-1.637,-0 -2.966,1.329 -2.966,2.966c0,1.637 1.329,2.966 2.966,2.966l8.104,0c1.637,0 2.966,-1.329 2.966,-2.966Z";
IconLibrary.CONSTRUCT = "M14.496,5.478c-0.086,0.02 -0.176,0.03 -0.268,0.03l-12.456,-0c-0.092,-0 -0.182,-0.01 -0.268,-0.03l-0,7.663c-0,0.463 0.376,0.839 0.839,0.839l11.314,-0c0.463,-0 0.839,-0.376 0.839,-0.839l0,-7.663Zm0.522,-3.484c-0,-0.558 -0.453,-1.011 -1.012,-1.011l-12.012,-0c-0.559,-0 -1.012,0.453 -1.012,1.011l0,2.024c0,0.558 0.453,1.011 1.012,1.011l12.012,0c0.559,0 1.012,-0.453 1.012,-1.011l-0,-2.024Z";
IconLibrary.TIMER = "M8,0.983c3.873,-0 7.018,3.138 7.018,7.004c-0,3.865 -3.145,7.003 -7.018,7.003c-3.873,0 -7.018,-3.138 -7.018,-7.003c0,-3.866 3.145,-7.004 7.018,-7.004Zm0,1.532c3.026,0 5.483,2.452 5.483,5.472c-0,3.019 -2.457,5.471 -5.483,5.471c-3.026,0 -5.483,-2.452 -5.483,-5.471c0,-3.02 2.457,-5.472 5.483,-5.472Zm-0.768,5.099l-0.001,0.012l0,0.748c0,0.206 0.168,0.374 0.374,0.374l4.464,0c0.206,0 0.374,-0.168 0.374,-0.374l-0,-0.748c-0,-0.206 -0.168,-0.374 -0.374,-0.374l-3.3,-0l-0,-2.693c-0,-0.212 -0.173,-0.384 -0.385,-0.384l-0.768,-0c-0.212,-0 -0.385,0.172 -0.385,0.384l0,3.043l0.001,0.012Z";
IconLibrary.MAKE_ARRAY = "M0.893,16l-0.893,-0.893l1.857,-1.856l-1.416,-0l-0,-1.263l3.571,0l-0,3.571l-1.263,0l0,-1.416l-1.856,1.857Zm11.086,-5.497l-3.003,0l-0,3.012l3.003,-0l-0,-3.012Zm-4.022,0l-3.003,0l0,3.012l3.003,-0l0,-3.012Zm8.043,0l-3.003,0l-0,3.012l3.003,-0l0,-3.012Zm-4.021,-4.009l-3.003,0l-0,3.012l3.003,-0l-0,-3.012Zm-4.022,0l-3.003,0l0,3.012l3.003,-0l0,-3.012Zm8.043,0l-3.003,0l-0,3.012l3.003,-0l-0,-3.012Zm-8.043,-4.009l-3.003,0l0,3.012l3.003,-0l0,-3.012Zm4.022,0l-3.003,0l-0,3.012l3.003,-0l-0,-3.012Zm4.021,0l-3.003,0l-0,3.012l3.003,-0l-0,-3.012Zm-16,-1.599l0.886,-0.886l1.843,1.843l0,-1.405l1.254,-0l-0,3.545l-3.545,-0l-0,-1.254l1.405,0l-1.843,-1.843Z";
IconLibrary.SPAWN_ACTOR = "M7.612,0.994c-0.329,0.393 -0.306,0.98 0.064,1.35l1.26,1.259l-1.686,0c-0.561,0 -1.016,0.456 -1.016,1.017c-0,0.561 0.455,1.017 1.016,1.017l1.684,-0l-1.258,1.258c-0.395,0.395 -0.395,1.035 -0,1.43c0.394,0.394 1.035,0.394 1.429,-0l1.259,-1.259l-0,1.777c-0,0.561 0.455,1.016 1.017,1.016c0.561,0 1.016,-0.455 1.016,-1.016l0,-1.778l1.26,1.26c0.37,0.369 0.955,0.392 1.349,0.065c-0.209,3.678 -3.268,6.6 -7.006,6.6c-3.873,0 -7.018,-3.138 -7.018,-7.003c0,-3.736 2.937,-6.793 6.63,-6.993Zm3.292,7.771c0,0.263 0.214,0.476 0.477,0.476c0.262,0 0.476,-0.213 0.476,-0.476l-0,-2.034c-0,-0.262 -0.214,-0.476 -0.476,-0.476c-0.263,0 -0.477,0.214 -0.477,0.476l0,2.034Zm3.071,-0.877c0.185,0.185 0.487,0.185 0.673,-0c0.186,-0.186 0.186,-0.488 -0,-0.674l-1.438,-1.438c-0.186,-0.186 -0.488,-0.186 -0.673,0c-0.186,0.186 -0.186,0.488 -0,0.674l1.438,1.438Zm-3.751,-1.438c0.186,-0.186 0.186,-0.488 0,-0.674c-0.185,-0.186 -0.487,-0.186 -0.673,0l-1.438,1.438c-0.186,0.186 -0.186,0.488 0,0.674c0.186,0.185 0.488,0.185 0.674,-0l1.437,-1.438Zm4.387,-0.813c0.125,0.346 0.222,0.705 0.289,1.074l-1.075,-1.074l0.786,-0Zm-3.23,-2.034c0.561,0 1.016,0.456 1.016,1.017c0,0.561 -0.455,1.017 -1.016,1.017c-0.562,-0 -1.017,-0.456 -1.017,-1.017c-0,-0.561 0.455,-1.017 1.017,-1.017Zm4.144,1.493c0.263,0 0.476,-0.213 0.476,-0.476c0,-0.263 -0.213,-0.476 -0.476,-0.476l-2.033,0c-0.263,0 -0.476,0.213 -0.476,0.476c-0,0.263 0.213,0.476 0.476,0.476l2.033,0Zm-6.256,0c0.263,0 0.477,-0.213 0.477,-0.476c-0,-0.263 -0.214,-0.476 -0.477,-0.476l-2.033,0c-0.263,0 -0.476,0.213 -0.476,0.476c-0,0.263 0.213,0.476 0.476,0.476l2.033,0Zm0.282,-1.632c0.186,0.186 0.488,0.186 0.673,0c0.186,-0.186 0.186,-0.488 0,-0.673l-1.437,-1.438c-0.186,-0.186 -0.488,-0.186 -0.674,-0c-0.186,0.186 -0.186,0.487 0,0.673l1.438,1.438Zm5.097,-1.438c0.186,-0.186 0.186,-0.487 -0,-0.673c-0.186,-0.186 -0.488,-0.186 -0.673,-0l-1.438,1.438c-0.186,0.185 -0.186,0.487 -0,0.673c0.185,0.186 0.487,0.186 0.673,0l1.438,-1.438Zm-3.744,0.483c0,0.263 0.214,0.476 0.477,0.476c0.262,0 0.476,-0.213 0.476,-0.476l-0,-2.033c-0,-0.263 -0.214,-0.477 -0.476,-0.477c-0.263,0 -0.477,0.214 -0.477,0.477l0,2.033Zm-1.612,-1.406c0.368,0.069 0.726,0.166 1.072,0.289l-0,0.783l-1.072,-1.072Z";
IconLibrary.IS_VALID = "M8.968,11.978l-1.982,0l-0,1.982l1.982,0l-0,-1.982Zm-0.968,-4.015l-1.014,0l-0,3.012l1.982,-0l-0,-1.136c1.739,-0.432 3.028,-2.004 3.028,-3.877c0,-2.206 -1.79,-3.996 -3.996,-3.996c-2.207,-0 -3.996,1.789 -3.996,3.996l1.998,-0c-0,-1.104 0.894,-1.998 1.998,-1.998c1.103,-0 1.998,0.895 1.998,1.998c0,1.103 -0.894,1.998 -1.998,1.998l0,0.003Z";
IconLibrary.MACRO = "M4.632,6.37c-0.24,0.492 -0.374,1.046 -0.374,1.63c-0,2.065 1.677,3.742 3.742,3.742c2.065,0 3.742,-1.677 3.742,-3.742c0,-2.065 -1.677,-3.742 -3.742,-3.742c-0.418,-0 -0.82,0.069 -1.194,0.196l-0.764,-2.266l0.397,-2.034c1.031,-0.205 2.091,-0.205 3.122,-0l0.409,2.099c0.24,0.082 0.473,0.179 0.701,0.29l1.774,-1.195c0.873,0.584 1.623,1.334 2.207,2.207l-1.195,1.774c0.111,0.228 0.208,0.461 0.29,0.701l2.099,0.409c0.205,1.031 0.205,2.091 0,3.122l-2.099,0.409c-0.082,0.24 -0.179,0.473 -0.29,0.701l1.195,1.774c-0.584,0.873 -1.334,1.623 -2.207,2.207l-1.774,-1.195c-0.228,0.111 -0.461,0.208 -0.701,0.29l-0.409,2.099c-1.031,0.205 -2.091,0.205 -3.122,0l-0.409,-2.099c-0.24,-0.082 -0.473,-0.179 -0.701,-0.29l-1.774,1.195c-0.873,-0.584 -1.623,-1.334 -2.207,-2.207l1.195,-1.774c-0.111,-0.228 -0.208,-0.461 -0.29,-0.701l-2.099,-0.409c-0.205,-1.031 -0.205,-2.091 -0,-3.122l2.099,-0.409c0.077,-0.226 0.167,-0.446 0.272,-0.66l-0.001,-0.001l0.41,-0.846l-1.428,0.353l-0.433,-1.751l4.358,-1.076l1.853,4.087l-1.643,0.745l-0.607,-1.34l-0.402,0.829Z";
IconLibrary.LATENT = "M10.667,1.31c5.164,0 9.357,4.185 9.357,9.339c-0,5.154 -4.193,9.338 -9.357,9.338c-5.165,0 -9.358,-4.184 -9.358,-9.338c0,-5.154 4.193,-9.339 9.358,-9.339Zm0.695,8.661l0,-7.105c0,-0.191 -0.156,-0.347 -0.348,-0.347l-0.695,-0c-0.192,-0 -0.348,0.156 -0.348,0.347l0,7.435l0.001,0.009l-0.001,0.009l0,0.695c0,0.192 0.156,0.348 0.348,0.348l5.924,0c0.191,0 0.347,-0.156 0.347,-0.348l0,-0.695c0,-0.192 -0.156,-0.348 -0.347,-0.348l-4.881,0Z";


/***/ }),

/***/ "./src/controls/vertical-panel.ts":
/*!****************************************!*\
  !*** ./src/controls/vertical-panel.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "HorizontalAlignment": () => (/* binding */ HorizontalAlignment),
/* harmony export */   "VerticalPanel": () => (/* binding */ VerticalPanel)
/* harmony export */ });
/* harmony import */ var _math_vector2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math/vector2 */ "./src/math/vector2.ts");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./container */ "./src/controls/container.ts");


var HorizontalAlignment;
(function (HorizontalAlignment) {
    HorizontalAlignment[HorizontalAlignment["LEFT"] = 0] = "LEFT";
    HorizontalAlignment[HorizontalAlignment["CENTER"] = 1] = "CENTER";
    HorizontalAlignment[HorizontalAlignment["RIGHT"] = 2] = "RIGHT";
})(HorizontalAlignment || (HorizontalAlignment = {}));
class VerticalPanel extends _container__WEBPACK_IMPORTED_MODULE_1__.Container {
    constructor(x, y, zIndex) {
        super(x, y, zIndex);
        this.childAlignment = HorizontalAlignment.LEFT;
    }
    onDraw(canvas) {
        ////////////////
        ////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////
        //////////
    }
    getCalculatedSize() {
        let size = new _math_vector2__WEBPACK_IMPORTED_MODULE_0__.Vector2(0, 0);
        let childHeight = 0;
        this.verticalFillCount = 0;
        for (let child of this.children) {
            if (child.ignoreLayout || !child.visible)
                continue;
            let childSize = child.getCalculatedSize();
            child.position.y = size.y;
            size.x = Math.max(size.x, childSize.x);
            size.y += childSize.y;
            if (child.fillParentVertical) {
                this.verticalFillCount++;
            }
            else {
                childHeight += childSize.y;
            }
        }
        size.x = Math.max(size.x, (this.minWidth || 0));
        size.y = Math.max(size.y, (this.minHeight || 0));
        this.controlSize = size.copy();
        this.childrenHeight = childHeight;
        size.x += this.padding.left + this.padding.right;
        size.y += this.padding.top + this.padding.bottom;
        return size;
    }
    positionChildren() {
        if (this.childAlignment == HorizontalAlignment.RIGHT) {
            for (let child of this.children) {
                let rest = (this.size.x - this.padding.left) - child.size.x;
                child.position.x = rest;
            }
        }
    }
    applyFills(remainingSize) {
        let remainingHeight = (remainingSize?.y || this.size.y) - this.childrenHeight - (this.padding.top + this.padding.bottom);
        let width = this.size.x;
        let height = remainingHeight / this.verticalFillCount;
        let position = new _math_vector2__WEBPACK_IMPORTED_MODULE_0__.Vector2(this.padding.left, this.padding.top);
        for (let child of this.children) {
            if (child.ignoreLayout || !child.visible)
                continue;
            child.position.x = position.x;
            child.position.y = position.y;
            if (child.fillParentHorizontal) {
                child.desiredWidth = width;
            }
            if (child.fillParentVertical) {
                child.desiredHeight = height;
            }
            position.y += child.size.y + (child.padding.top || 0) + (child.padding.bottom || 0);
            if (child instanceof _container__WEBPACK_IMPORTED_MODULE_1__.Container) {
                child.applyFills(new _math_vector2__WEBPACK_IMPORTED_MODULE_0__.Vector2(width, height));
            }
        }
        this.positionChildren();
    }
}


/***/ }),

/***/ "./src/controls/warning-bar.ts":
/*!*************************************!*\
  !*** ./src/controls/warning-bar.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "WarningBar": () => (/* binding */ WarningBar)
/* harmony export */ });
/* harmony import */ var _label__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./label */ "./src/controls/label.ts");
/* harmony import */ var _vertical_panel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vertical-panel */ "./src/controls/vertical-panel.ts");


class WarningBar extends _vertical_panel__WEBPACK_IMPORTED_MODULE_1__.VerticalPanel {
    constructor(text) {
        super();
        this.color = "#FFE32F";
        this.svg = new Image();
        this.svg.src = 'data:image/svg+xml,' + escape('<svg width="32px" height="32px" viewBox="0 5 32 27" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" xmlns:serif="http://www.serif.com/" style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2;"><path d="M16,6.988l-16,0l-16,18.024l16,-0l16,-18.024Z" style="fill:' + this.color + ';fill-opacity:0.4;"/><path d="M48,6.988l-16,0l-16,18.024l16,-0l16,-18.024Z" style="fill:' + this.color + ';fill-opacity:0.4;"/></svg>');
        this.svg.width = "25px";
        this.svg.height = "25px";
        this.svg.onload = () => { this.imageLoaded(); };
        this.fillParentHorizontal = true;
        this.minHeight = 25;
        this.label = new _label__WEBPACK_IMPORTED_MODULE_0__.Label(text);
        this.label.fillParentHorizontal = true;
        this.label.textAlign = 'center';
        this.label.padding = { top: 7, right: 0, bottom: 5, left: 0 };
        this.add(this.label);
    }
    onDraw(canvas) {
        canvas.fillStyle(this.pattern);
        canvas.fillRect(0, 0, this.size.x, this.size.y);
    }
    imageLoaded() {
        this.pattern = this.app.canvas.getContext().createPattern(this.svg, 'repeat');
        this.app.scene.refresh();
    }
}


/***/ }),

/***/ "./src/data/classes/unreal-node-class.ts":
/*!***********************************************!*\
  !*** ./src/data/classes/unreal-node-class.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "UnrealNodeClass": () => (/* binding */ UnrealNodeClass)
/* harmony export */ });
var UnrealNodeClass;
(function (UnrealNodeClass) {
    UnrealNodeClass["KNOT"] = "/Script/BlueprintGraph.K2Node_Knot";
    UnrealNodeClass["CALL_FUNCTION"] = "/Script/BlueprintGraph.K2Node_CallFunction";
    UnrealNodeClass["IF_THEN_ELSE"] = "/Script/BlueprintGraph.K2Node_IfThenElse";
    UnrealNodeClass["EXECUTION_SEQUENCE"] = "/Script/BlueprintGraph.K2Node_ExecutionSequence";
    UnrealNodeClass["MULTI_GATE"] = "/Script/BlueprintGraph.K2Node_MultiGate";
    UnrealNodeClass["VARIABLE_GET"] = "/Script/BlueprintGraph.K2Node_VariableGet";
    UnrealNodeClass["VARIABLE_SET"] = "/Script/BlueprintGraph.K2Node_VariableSet";
    UnrealNodeClass["EVENT"] = "/Script/BlueprintGraph.K2Node_Event";
    UnrealNodeClass["CUSTOM_EVENT"] = "/Script/BlueprintGraph.K2Node_CustomEvent";
    UnrealNodeClass["INPUT_AXIS_EVENT"] = "/Script/BlueprintGraph.K2Node_InputAxisEvent";
    UnrealNodeClass["COMMENT"] = "/Script/UnrealEd.EdGraphNode_Comment";
    UnrealNodeClass["INPUT_KEY"] = "/Script/BlueprintGraph.K2Node_InputKey";
    UnrealNodeClass["CommutativeAssociativeBinaryOperator"] = "/Script/BlueprintGraph.K2Node_CommutativeAssociativeBinaryOperator";
    UnrealNodeClass["DYNAMIC_CAST"] = "/Script/BlueprintGraph.K2Node_DynamicCast";
    UnrealNodeClass["SWITCH_ENUM"] = "/Script/BlueprintGraph.K2Node_SwitchEnum";
    UnrealNodeClass["MACRO_INSTANCE"] = "/Script/BlueprintGraph.K2Node_MacroInstance";
    UnrealNodeClass["FUNCTION_ENTRY"] = "/Script/BlueprintGraph.K2Node_FunctionEntry";
    UnrealNodeClass["FUNCTION_RESULT"] = "/Script/BlueprintGraph.K2Node_FunctionResult";
    UnrealNodeClass["CALL_ARRAY_FUNCTION"] = "/Script/BlueprintGraph.K2Node_CallArrayFunction";
    UnrealNodeClass["SELF"] = "/Script/BlueprintGraph.K2Node_Self";
    UnrealNodeClass["GET_ARRAY_ITEM"] = "/Script/BlueprintGraph.K2Node_GetArrayItem";
    UnrealNodeClass["MAKE_ARRAY"] = "/Script/BlueprintGraph.K2Node_MakeArray";
    UnrealNodeClass["INPUT_TOUCH"] = "/Script/BlueprintGraph.K2Node_InputTouch";
    UnrealNodeClass["GET_INPUT_AXIS_KEY_VALUE"] = "/Script/BlueprintGraph.K2Node_GetInputAxisKeyValue";
    UnrealNodeClass["SET_FIELDS_IN_STRUCT"] = "/Script/BlueprintGraph.K2Node_SetFieldsInStruct";
    UnrealNodeClass["BREAK_STRUCT"] = "/Script/BlueprintGraph.K2Node_BreakStruct";
    UnrealNodeClass["MAKE_STRUCT"] = "/Script/BlueprintGraph.K2Node_MakeStruct";
    UnrealNodeClass["SELECT"] = "/Script/BlueprintGraph.K2Node_Select";
    UnrealNodeClass["TIMELINE"] = "/Script/BlueprintGraph.K2Node_Timeline";
    UnrealNodeClass["SPAWN_ACTOR_FROM_CLASS"] = "/Script/BlueprintGraph.K2Node_SpawnActorFromClass";
    UnrealNodeClass["TUNNEL"] = "/Script/BlueprintGraph.K2Node_Tunnel";
    UnrealNodeClass["CREATE_WIDGET"] = "/Script/UMGEditor.K2Node_CreateWidget";
    UnrealNodeClass["CREATE_OBJECT"] = "/Script/BlueprintGraph.K2Node_GenericCreateObject";
})(UnrealNodeClass || (UnrealNodeClass = {}));


/***/ }),

/***/ "./src/data/color.ts":
/*!***************************!*\
  !*** ./src/data/color.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Color": () => (/* binding */ Color)
/* harmony export */ });
class Color {
    constructor(value, ...params) {
        if (typeof value == "string") {
            this.initializeFromString(value);
        }
        else if (typeof value == "number" && params.length >= 2) {
            params.unshift(value);
            this.initializeFromComponentValues(params);
        }
    }
    initializeFromString(colorString) {
        if (colorString.startsWith('#')) {
            this.R = Number.parseInt(colorString.substr(1, 2), 16);
            this.G = Number.parseInt(colorString.substr(3, 2), 16);
            this.B = Number.parseInt(colorString.substr(5, 2), 16);
            this.A = 1;
            if (colorString.length >= 9) {
                this.A = Number.parseInt(colorString.substr(7, 2), 16);
            }
        }
        else if (colorString.startsWith('rgb')) {
            let withAlpha = colorString.startsWith('rgba');
            colorString = colorString.replace(/[rgba()]/g, '');
            let components = colorString.split(',');
            this.R = Number.parseInt(components[0]);
            this.G = Number.parseInt(components[1]);
            this.B = Number.parseInt(components[2]);
            this.A = 1;
            if (withAlpha) {
                this.A = Number.parseFloat(components[3]);
            }
        }
    }
    initializeFromComponentValues(values) {
        this.R = values[0];
        this.G = values[1];
        this.B = values[2];
        this.A = 1;
        if (values.length > 3)
            this.A = values[3];
    }
    applyGamma() {
        this.R = Math.floor(Math.min(1, Math.max(0, Math.pow(this.R / 255.0, 1 / 2.2))) * 255);
        this.G = Math.floor(Math.min(1, Math.max(0, Math.pow(this.G / 255.0, 1 / 2.2))) * 255);
        this.B = Math.floor(Math.min(1, Math.max(0, Math.pow(this.B / 255.0, 1 / 2.2))) * 255);
    }
    darken(value) {
        value = 1 - value;
        this.R = this.R * value;
        this.G = this.G * value;
        this.B = this.B * value;
    }
    toRGBString() {
        let components = [this.R, this.G, this.B];
        return 'rgb(' + components.join(',') + ')';
    }
    toRGBAString() {
        let components = [this.R, this.G, this.B, this.A];
        return 'rgba(' + components.join(',') + ')';
    }
    toHexString() {
        let hex = "#";
        hex = ("0" + this.R.toString(16)).slice(-2)
            + ("0" + this.G.toString(16)).slice(-2)
            + ("0" + this.B.toString(16)).slice(-2);
        return hex;
    }
    toHexWithAlphaString() {
        let hex = "#";
        hex = ("0" + this.R.toString(16)).slice(-2)
            + ("0" + this.G.toString(16)).slice(-2)
            + ("0" + this.B.toString(16)).slice(-2)
            + ("0" + this.A.toString(16)).slice(-2);
        return hex;
    }
}


/***/ }),

/***/ "./src/data/custom-property.ts":
/*!*************************************!*\
  !*** ./src/data/custom-property.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CustomProperty": () => (/* binding */ CustomProperty)
/* harmony export */ });
class CustomProperty {
}


/***/ }),

/***/ "./src/data/nodes/variable.node.ts":
/*!*****************************************!*\
  !*** ./src/data/nodes/variable.node.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "VariableType": () => (/* binding */ VariableType)
/* harmony export */ });
var VariableType;
(function (VariableType) {
    VariableType[VariableType["Getter"] = 0] = "Getter";
    VariableType[VariableType["Setter"] = 1] = "Setter";
})(VariableType || (VariableType = {}));


/***/ }),

/***/ "./src/data/pin/pin-category.ts":
/*!**************************************!*\
  !*** ./src/data/pin/pin-category.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PinCategory": () => (/* binding */ PinCategory)
/* harmony export */ });
var PinCategory;
(function (PinCategory) {
    PinCategory["delegate"] = "delegate";
    PinCategory["exec"] = "exec";
    PinCategory["object"] = "object";
    PinCategory["int"] = "int";
    PinCategory["int64"] = "int64";
    PinCategory["string"] = "string";
    PinCategory["text"] = "text";
    PinCategory["float"] = "float";
    PinCategory["struct"] = "struct";
    PinCategory["class"] = "class";
    PinCategory["bool"] = "bool";
    PinCategory["name"] = "name";
    PinCategory["wildcard"] = "wildcard";
    PinCategory["byte"] = "byte";
})(PinCategory || (PinCategory = {}));


/***/ }),

/***/ "./src/data/pin/pin-container-type.ts":
/*!********************************************!*\
  !*** ./src/data/pin/pin-container-type.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PinContainerType": () => (/* binding */ PinContainerType)
/* harmony export */ });
var PinContainerType;
(function (PinContainerType) {
    PinContainerType["None"] = "None";
    PinContainerType["Array"] = "Array";
    PinContainerType["Set"] = "Set";
    PinContainerType["Map"] = "Map";
})(PinContainerType || (PinContainerType = {}));


/***/ }),

/***/ "./src/data/pin/pin-direction.ts":
/*!***************************************!*\
  !*** ./src/data/pin/pin-direction.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PinDirection": () => (/* binding */ PinDirection)
/* harmony export */ });
var PinDirection;
(function (PinDirection) {
    PinDirection[PinDirection["EGPD_Input"] = 0] = "EGPD_Input";
    PinDirection[PinDirection["EGPD_Output"] = 1] = "EGPD_Output";
})(PinDirection || (PinDirection = {}));


/***/ }),

/***/ "./src/data/pin/pin-link.ts":
/*!**********************************!*\
  !*** ./src/data/pin/pin-link.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PinLink": () => (/* binding */ PinLink)
/* harmony export */ });
class PinLink {
}


/***/ }),

/***/ "./src/data/pin/pin-property.ts":
/*!**************************************!*\
  !*** ./src/data/pin/pin-property.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PinProperty": () => (/* binding */ PinProperty)
/* harmony export */ });
/* harmony import */ var _custom_property__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../custom-property */ "./src/data/custom-property.ts");
/* harmony import */ var _pin_direction__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pin-direction */ "./src/data/pin/pin-direction.ts");


class PinProperty extends _custom_property__WEBPACK_IMPORTED_MODULE_0__.CustomProperty {
    constructor(nodeName) {
        super();
        this.nodeName = nodeName;
        this.direction = _pin_direction__WEBPACK_IMPORTED_MODULE_1__.PinDirection.EGPD_Input;
    }
    get isLinked() {
        return (this.linkedTo && this.linkedTo.length > 0);
    }
    get formattedName() {
        if (this.hideName) {
            return '';
        }
        if (this.friendlyName) {
            return this.friendlyName;
        }
        return this.name;
    }
    get shouldDrawDefaultValueBox() {
        return (!this.isLinked && this.direction !== _pin_direction__WEBPACK_IMPORTED_MODULE_1__.PinDirection.EGPD_Output && this.defaultValue != undefined);
    }
    getUniqueName() {
        return this.nodeName + " " + this.id;
    }
}


/***/ }),

/***/ "./src/data/replication-type.ts":
/*!**************************************!*\
  !*** ./src/data/replication-type.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ReplicationType": () => (/* binding */ ReplicationType)
/* harmony export */ });
var ReplicationType;
(function (ReplicationType) {
    ReplicationType[ReplicationType["NotReplicated"] = 0] = "NotReplicated";
    ReplicationType[ReplicationType["Multicast"] = 1] = "Multicast";
    ReplicationType[ReplicationType["RunOnServer"] = 2] = "RunOnServer";
    ReplicationType[ReplicationType["RunOnOwningClient"] = 3] = "RunOnOwningClient";
})(ReplicationType || (ReplicationType = {}));


/***/ }),

/***/ "./src/math/boundingbox.ts":
/*!*********************************!*\
  !*** ./src/math/boundingbox.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BoundingBox": () => (/* binding */ BoundingBox)
/* harmony export */ });
class BoundingBox {
    static checkIntersection(pos1, size1, pos2, size2) {
        this.absRect(pos1, size1);
        this.absRect(pos2, size2);
        if (pos1.x < pos2.x + size2.x &&
            pos1.x + size1.x > pos2.x &&
            pos1.y < pos2.y + size2.y &&
            pos1.y + size1.y > pos2.y) {
            return true;
        }
        return false;
    }
    /**
     * This method mirrors the rectangle so that both axes are positive if the size is negative.
     */
    static absRect(pos, size) {
        if (size.x < 0) {
            pos.x += size.x;
            size.x = Math.abs(size.x);
        }
        if (size.y < 0) {
            pos.y += size.y;
            size.y = Math.abs(size.y);
        }
    }
}


/***/ }),

/***/ "./src/math/vector2.ts":
/*!*****************************!*\
  !*** ./src/math/vector2.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Vector2": () => (/* binding */ Vector2)
/* harmony export */ });
class Vector2 {
    constructor(x, y) {
        this.x = x;
        this.y = y;
    }
    add(vec) {
        return new Vector2(this.x + vec.x, this.y + vec.y);
    }
    subtract(vec) {
        return new Vector2(this.x - vec.x, this.y - vec.y);
    }
    divide(vec) {
        return new Vector2(this.x / vec.x, this.y / vec.y);
    }
    multiply(vec) {
        if (vec instanceof Vector2)
            return new Vector2(this.x * vec.x, this.y * vec.y);
        else
            return new Vector2(this.x * vec, this.y * vec);
    }
    toString() {
        return `Vector2(x: ${this.x}, y: ${this.y})`;
    }
    copy() {
        return new Vector2(this.x, this.y);
    }
}


/***/ }),

/***/ "./src/parser/blueprint-parser-utils.ts":
/*!**********************************************!*\
  !*** ./src/parser/blueprint-parser-utils.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

var _enum_names_json__WEBPACK_IMPORTED_MODULE_2___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BlueprintParserUtils": () => (/* binding */ BlueprintParserUtils)
/* harmony export */ });
/* harmony import */ var _data_pin_pin_property__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data/pin/pin-property */ "./src/data/pin/pin-property.ts");
/* harmony import */ var _utils_text_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/text-utils */ "./src/utils/text-utils.ts");
/* harmony import */ var _enum_names_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./enum-names.json */ "./src/parser/enum-names.json");



class BlueprintParserUtils {
    static parseString(value) {
        return value.replace(/(?<!\\)["']/g, '');
    }
    static stripLine(text) {
        return text.replace('\t', '').trim();
    }
    static parseColor(value) {
        value = value.replace(/[()]/g, '');
        let colorData = value.split(',');
        let colorArray = [];
        for (let data of colorData) {
            let keyValue = data.split('=');
            let value = (keyValue[0] != 'A') ? Math.floor(Number.parseFloat(keyValue[1]) * 255) : Number.parseFloat(keyValue[1]);
            colorArray.push(value);
        }
        let colorString = "rgba(" + colorArray.join(',') + ")";
        return colorString;
    }
    static getClassFriendlyName(value) {
        const defaultObject = BlueprintParserUtils.parseString(value);
        const matches = /(?<=\.)((?!_C$)\w)*/g.exec(defaultObject);
        if (!matches) {
            return value;
        }
        return matches[0];
    }
    static hidePinNames(customProperties) {
        customProperties.forEach(p => {
            if (p instanceof _data_pin_pin_property__WEBPACK_IMPORTED_MODULE_0__.PinProperty === false) {
                return false;
            }
            p.hideName = true;
        });
    }
    static getFirstClassNameFromPinProperties(customProperties) {
        for (const property of customProperties) {
            if (!(property instanceof _data_pin_pin_property__WEBPACK_IMPORTED_MODULE_0__.PinProperty)) {
                continue;
            }
            ;
            if (property.name !== "Class" || property.isLinked) {
                continue;
            }
            ;
            return property.defaultValue || "NONE";
        }
    }
    static parseEnumValue(enumClass, value) {
        value = value.replace(/["']/g, '');
        let classObj = /*#__PURE__*/ (_enum_names_json__WEBPACK_IMPORTED_MODULE_2___namespace_cache || (_enum_names_json__WEBPACK_IMPORTED_MODULE_2___namespace_cache = __webpack_require__.t(_enum_names_json__WEBPACK_IMPORTED_MODULE_2__, 2)))[enumClass];
        if (classObj) {
            let name = classObj[value];
            return name || (0,_utils_text_utils__WEBPACK_IMPORTED_MODULE_1__.prettifyText)(value);
        }
        return (0,_utils_text_utils__WEBPACK_IMPORTED_MODULE_1__.prettifyText)(value);
    }
}


/***/ }),

/***/ "./src/parser/blueprint-parser.ts":
/*!****************************************!*\
  !*** ./src/parser/blueprint-parser.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BlueprintParser": () => (/* binding */ BlueprintParser)
/* harmony export */ });
/* harmony import */ var _blueprint_parser_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./blueprint-parser-utils */ "./src/parser/blueprint-parser-utils.ts");
/* harmony import */ var _node_parsers_generic_node_parser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node-parsers/generic-node.parser */ "./src/parser/node-parsers/generic-node.parser.ts");
/* harmony import */ var _parsing_node_data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./parsing-node-data */ "./src/parser/parsing-node-data.ts");



class BlueprintParser {
    constructor() {
        this._OBJECT_STARTING_TAG = "Begin Object";
        this._OBJECT_ENDING_TAG = "End Object";
    }
    parseBlueprint(blueprintData) {
        let controls = new Array();
        this._lines = blueprintData
            .replace(/\r/g, '')
            .split('\n');
        for (let i = 0; i < this._lines.length; ++i) {
            let line = _blueprint_parser_utils__WEBPACK_IMPORTED_MODULE_0__.BlueprintParserUtils.stripLine(this._lines[i]);
            if (line.startsWith(this._OBJECT_STARTING_TAG)) {
                const lines = this.getLinesUntilEndTag(i);
                i += lines.length;
                lines.unshift(line);
                controls.push(new _node_parsers_generic_node_parser__WEBPACK_IMPORTED_MODULE_1__.GenericNodeParser().parse(new _parsing_node_data__WEBPACK_IMPORTED_MODULE_2__.ParsingNodeData(lines)));
            }
        }
        return controls;
    }
    getLinesUntilEndTag(lineNumber) {
        let lines = Array();
        let line = "";
        do {
            lineNumber++;
            if (lineNumber >= this._lines.length) {
                throw new Error("Invalid blueprint text. An 'Object' node was never closed. Missing 'End Object'");
            }
            line = _blueprint_parser_utils__WEBPACK_IMPORTED_MODULE_0__.BlueprintParserUtils.stripLine(this._lines[lineNumber]);
            if (line.startsWith(this._OBJECT_STARTING_TAG)) {
                throw new Error("Invalid blueprint text. An 'Object' node was opened before the previous was closed. Missing 'End Object'");
            }
            lines.push(line);
        } while (!line.startsWith(this._OBJECT_ENDING_TAG));
        return lines;
    }
}


/***/ }),

/***/ "./src/parser/macro-graph-reference.parser.ts":
/*!****************************************************!*\
  !*** ./src/parser/macro-graph-reference.parser.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MacroGraphReferenceParser": () => (/* binding */ MacroGraphReferenceParser)
/* harmony export */ });
/* harmony import */ var _blueprint_parser_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./blueprint-parser-utils */ "./src/parser/blueprint-parser-utils.ts");

class MacroGraphReferenceParser {
    parse(referenceString) {
        referenceString = referenceString.trim();
        referenceString = referenceString.substr(1, referenceString.length - 2);
        let dataRef = {};
        const data = referenceString.split(',');
        for (let i = 0; i < data.length; ++i) {
            let dataSet = data[i].split('=');
            let key = dataSet[0];
            let value = dataSet[1];
            switch (key) {
                case "MacroGraph":
                    dataRef.macroFuncName = MacroGraphReferenceParser.extractNodeNameOfMacroGraphStr(value.substring(value.indexOf("'")));
                    break;
                case "GraphBlueprint":
                    break;
                case "GraphGuid":
                    break;
            }
        }
        return dataRef;
    }
    static extractNodeNameOfMacroGraphStr(value) {
        const stringWithoutQuotes = _blueprint_parser_utils__WEBPACK_IMPORTED_MODULE_0__.BlueprintParserUtils.parseString(value);
        const matches = /(?<=\:)\w*/g.exec(stringWithoutQuotes);
        if (!matches) {
            return stringWithoutQuotes;
        }
        return matches[0];
    }
}


/***/ }),

/***/ "./src/parser/node-data-reference.parser.ts":
/*!**************************************************!*\
  !*** ./src/parser/node-data-reference.parser.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "NodeDataReferenceParser": () => (/* binding */ NodeDataReferenceParser)
/* harmony export */ });
/* harmony import */ var _blueprint_parser_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./blueprint-parser-utils */ "./src/parser/blueprint-parser-utils.ts");

class NodeDataReferenceParser {
    constructor() {
        this.FUNCTION_NAMES = {
            "K2_GetComponentRotation": "GetWorldRotation",
            "GreaterGreater_VectorRotator": "RotateVector"
        };
    }
    parse(referenceString) {
        referenceString = referenceString.trim();
        referenceString = referenceString.substr(1, referenceString.length - 2);
        let dataRef = {};
        const data = referenceString.split(',');
        for (let i = 0; i < data.length; ++i) {
            let dataSet = data[i].split('=');
            let key = dataSet[0];
            let value = dataSet[1];
            switch (key) {
                case "MemberName":
                    dataRef.memberName = this.translateFunctionName(_blueprint_parser_utils__WEBPACK_IMPORTED_MODULE_0__.BlueprintParserUtils.parseString(value));
                    break;
                case "MemberParent":
                    dataRef.memberParent = NodeDataReferenceParser.parseClassReference(value);
                    break;
                case "MemberGuid":
                    dataRef.memberGUID = value;
                    break;
                case "bSelfContext":
                    dataRef.selfContext = value == "True";
                    break;
            }
        }
        return dataRef;
    }
    translateFunctionName(value) {
        for (let key in this.FUNCTION_NAMES) {
            let name = this.FUNCTION_NAMES[key];
            value = value.replace(key, name);
        }
        return value;
    }
    static parseClassReference(referenceString) {
        const type = referenceString.substring(0, referenceString.indexOf("'"));
        const classPath = referenceString.substring(referenceString.indexOf("'")).replace(/['"]/g, '');
        const className = _blueprint_parser_utils__WEBPACK_IMPORTED_MODULE_0__.BlueprintParserUtils.getClassFriendlyName(classPath);
        return { type, classPath, className };
    }
}


/***/ }),

/***/ "./src/parser/node-friendly-names.ts":
/*!*******************************************!*\
  !*** ./src/parser/node-friendly-names.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "NodeFriendlyNames": () => (/* binding */ NodeFriendlyNames)
/* harmony export */ });
const NodeFriendlyNames = {
    'K2_SetTimerDelegate': 'Set Timer by Event',
    'K2_SetTimer': 'Set Timer by Function Name',
    'K2_PauseTimer': 'Pause Timer by Function Name',
    'K2_ClearAndInvalidateTimerHandle': 'Clear and Invalidate Timer by Handle',
    'K2_ClearTimer': 'Clear Timer by Function Name',
    'K2_TimerExists': 'Does Timer Exist by Function Name',
    'K2_TimerExistsHandle': 'Does Timer Exist by Handle',
    'K2_GetTimerElapsedTime': 'Get Timer Elapsed Time by Function Name',
    'K2_GetTimerElapsedTimeHandle': 'Get Timer Elapsed Time by Handle',
    'K2_InvalidateTimerHandle': 'Invalidate',
    'K2_IsTimerActiveHandle': 'Is Timer Active by Handle',
    'K2_DestroyActor': 'Destroy Actor'
};


/***/ }),

/***/ "./src/parser/node-parsers/array-function-node.parser.ts":
/*!***************************************************************!*\
  !*** ./src/parser/node-parsers/array-function-node.parser.ts ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ArrayFunctionNodeParser": () => (/* binding */ ArrayFunctionNodeParser)
/* harmony export */ });
/* harmony import */ var _controls_nodes_headed_node_control__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../controls/nodes/headed-node-control */ "./src/controls/nodes/headed-node-control.ts");
/* harmony import */ var _controls_nodes_headless_node_control__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../controls/nodes/headless-node-control */ "./src/controls/nodes/headless-node-control.ts");
/* harmony import */ var _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../controls/utils/icon-library */ "./src/controls/utils/icon-library.ts");
/* harmony import */ var _utils_text_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/text-utils */ "./src/utils/text-utils.ts");
/* harmony import */ var _blueprint_parser_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../blueprint-parser-utils */ "./src/parser/blueprint-parser-utils.ts");
/* harmony import */ var _node_parser__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../node.parser */ "./src/parser/node.parser.ts");






class ArrayFunctionNodeParser extends _node_parser__WEBPACK_IMPORTED_MODULE_5__.NodeParser {
    parse(data) {
        const node = data.node;
        let isPrimitive = false;
        // Check if there is an exceptional case
        const func = ArrayFunctionNodeParser.FUNCTIONS.find(f => node.functionReference.memberName === f.name);
        if (func) {
            node.title = func.displayName;
            isPrimitive = func.isPrimitive;
        }
        else {
            // Do the common intepretation
            if (node.functionReference.memberName.startsWith('Array_')) {
                node.title = node.functionReference.memberName.substr(6);
                node.title = (0,_utils_text_utils__WEBPACK_IMPORTED_MODULE_3__.insertSpacesBetweenCapitalizedWords)(node.title).toUpperCase();
                isPrimitive = true;
            }
        }
        node.subTitles = [];
        if (isPrimitive === true) {
            _blueprint_parser_utils__WEBPACK_IMPORTED_MODULE_4__.BlueprintParserUtils.hidePinNames(node.customProperties);
            return new _controls_nodes_headless_node_control__WEBPACK_IMPORTED_MODULE_1__.HeadlessNodeControl(node);
        }
        return new _controls_nodes_headed_node_control__WEBPACK_IMPORTED_MODULE_0__.HeadedNodeControl(node, _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_2__.IconLibrary.FUNCTION);
    }
}
ArrayFunctionNodeParser.FUNCTIONS = [
    { name: 'Array_Identical', displayName: '==', isPrimitive: true },
    { name: 'Array_Remove', displayName: 'REMOVE INDEX', isPrimitive: true },
    { name: 'Array_RemoveItem', displayName: 'REMOVE', isPrimitive: true },
    { name: 'Array_RandomFromStream', displayName: 'Random Array Item from Stream', isPrimitive: false },
    { name: 'Array_Set', displayName: 'Set Array Elem', isPrimitive: false }
];


/***/ }),

/***/ "./src/parser/node-parsers/call-function-node.parser.ts":
/*!**************************************************************!*\
  !*** ./src/parser/node-parsers/call-function-node.parser.ts ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CallFunctionNodeParser": () => (/* binding */ CallFunctionNodeParser)
/* harmony export */ });
/* harmony import */ var _controls_nodes_headed_node_control__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../controls/nodes/headed-node-control */ "./src/controls/nodes/headed-node-control.ts");
/* harmony import */ var _math_function_node_parser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math-function-node.parser */ "./src/parser/node-parsers/math-function-node.parser.ts");
/* harmony import */ var _node_data_reference_parser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../node-data-reference.parser */ "./src/parser/node-data-reference.parser.ts");
/* harmony import */ var _node_parser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../node.parser */ "./src/parser/node.parser.ts");
/* harmony import */ var _utils_text_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/text-utils */ "./src/utils/text-utils.ts");
/* harmony import */ var _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../controls/utils/icon-library */ "./src/controls/utils/icon-library.ts");
/* harmony import */ var _data_classes_unreal_node_class__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../data/classes/unreal-node-class */ "./src/data/classes/unreal-node-class.ts");
/* harmony import */ var _controls_nodes_foldable_headed_node_control__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../controls/nodes/foldable-headed-node.control */ "./src/controls/nodes/foldable-headed-node.control.ts");
/* harmony import */ var _string_function_node_parser__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./string-function-node.parser */ "./src/parser/node-parsers/string-function-node.parser.ts");
/* harmony import */ var _array_function_node_parser__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./array-function-node.parser */ "./src/parser/node-parsers/array-function-node.parser.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../constants */ "./src/constants.ts");











class CallFunctionNodeParser extends _node_parser__WEBPACK_IMPORTED_MODULE_3__.NodeParser {
    constructor() {
        super({
            "bIsPureFunc": (node, value) => { node.isPureFunc = (value === "True"); },
            "bIsConstFunc": (node, value) => { node.isConstFunc = (value === "True"); },
            "FunctionReference": (node, value) => {
                const parser = new _node_data_reference_parser__WEBPACK_IMPORTED_MODULE_2__.NodeDataReferenceParser();
                node.functionReference = parser.parse(value);
                node.title = (0,_utils_text_utils__WEBPACK_IMPORTED_MODULE_4__.insertSpacesBetweenCapitalizedWords)((0,_utils_text_utils__WEBPACK_IMPORTED_MODULE_4__.findFriendlyName)(node.functionReference.memberName));
                if (node.functionReference.selfContext === true) {
                    node.subTitles.push({ text: `Target is self context` });
                }
                else if (node.functionReference?.memberParent?.className) { // && node.functionReference?.memberParent?.type !== 'Class'
                    // Get self pin
                    const selfPin = node.customProperties.find(p => {
                        return p?.name?.toLowerCase() === 'self';
                    });
                    // Only show the target information if the self pin isn't hidden.
                    if (selfPin && !selfPin.hidden) {
                        const formattedClassName = (0,_utils_text_utils__WEBPACK_IMPORTED_MODULE_4__.prettifyText)(node.functionReference?.memberParent?.className);
                        node.subTitles.push({ text: `Target is ${formattedClassName}` });
                    }
                }
            },
        });
    }
    parse(data) {
        const node = data.node;
        this.parseProperties(data);
        node.backgroundColor = node.isPureFunc === true ? _constants__WEBPACK_IMPORTED_MODULE_10__.Constants.DEFAULT_FUNC_PURE_BACKGROUND_COLOR : _constants__WEBPACK_IMPORTED_MODULE_10__.Constants.DEFAULT_FUNC_BACKGROUND_COLOR;
        let icon = _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_5__.IconLibrary.FUNCTION;
        // Special case for construction node
        if (node.class === _data_classes_unreal_node_class__WEBPACK_IMPORTED_MODULE_6__.UnrealNodeClass.FUNCTION_ENTRY) {
            icon = this.handleFunctionNode(node);
        }
        const parser = CallFunctionNodeParser._FUNCTION_MAP[node.functionReference?.memberParent?.classPath];
        if (parser)
            return parser(data);
        if (node.advancedPinDisplay !== undefined) {
            return new _controls_nodes_foldable_headed_node_control__WEBPACK_IMPORTED_MODULE_7__.FoldableHeadedNodeControl(node, icon);
        }
        else {
            return new _controls_nodes_headed_node_control__WEBPACK_IMPORTED_MODULE_0__.HeadedNodeControl(node, icon);
        }
    }
    handleFunctionNode(node) {
        node.backgroundColor = _constants__WEBPACK_IMPORTED_MODULE_10__.Constants.DEFAULT_FUNC_ENTRY_BACKGROUND_COLOR;
        node.title = (0,_utils_text_utils__WEBPACK_IMPORTED_MODULE_4__.insertSpacesBetweenCapitalizedWords)(node.functionReference.memberName.replace('UserConstructionScript', 'ConstructionScript'));
        return _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_5__.IconLibrary.BREAK_STRUCT;
    }
}
CallFunctionNodeParser._FUNCTION_MAP = {
    "/Script/Engine.KismetMathLibrary": (d) => new _math_function_node_parser__WEBPACK_IMPORTED_MODULE_1__.MathFunctionNodeParser().parse(d),
    "/Script/Engine.KismetStringLibrary": (d) => new _string_function_node_parser__WEBPACK_IMPORTED_MODULE_8__.StringFunctionNodeParser().parse(d),
    "/Script/Engine.KismetArrayLibrary": (d) => new _array_function_node_parser__WEBPACK_IMPORTED_MODULE_9__.ArrayFunctionNodeParser().parse(d),
};


/***/ }),

/***/ "./src/parser/node-parsers/comment-node.parser.ts":
/*!********************************************************!*\
  !*** ./src/parser/node-parsers/comment-node.parser.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CommentNodeParser": () => (/* binding */ CommentNodeParser)
/* harmony export */ });
/* harmony import */ var _controls_nodes_comment_node_control__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../controls/nodes/comment-node.control */ "./src/controls/nodes/comment-node.control.ts");
/* harmony import */ var _blueprint_parser_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../blueprint-parser-utils */ "./src/parser/blueprint-parser-utils.ts");
/* harmony import */ var _node_parser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../node.parser */ "./src/parser/node.parser.ts");



class CommentNodeParser extends _node_parser__WEBPACK_IMPORTED_MODULE_2__.NodeParser {
    constructor() {
        super({
            "CommentColor": (node, value) => { node.backgroundColor = _blueprint_parser_utils__WEBPACK_IMPORTED_MODULE_1__.BlueprintParserUtils.parseColor(value); },
            "NodeWidth": (node, value) => { node.width = Number.parseInt(value); },
            "NodeHeight": (node, value) => { node.height = Number.parseInt(value); },
            "NodeComment": (node, value) => { node.title = value.replace(/"/g, ''); }
        });
    }
    parse(data) {
        this.parseProperties(data);
        return new _controls_nodes_comment_node_control__WEBPACK_IMPORTED_MODULE_0__.CommentNodeControl(data.node);
    }
}


/***/ }),

/***/ "./src/parser/node-parsers/create-object-node.parser.ts":
/*!**************************************************************!*\
  !*** ./src/parser/node-parsers/create-object-node.parser.ts ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CreateObjectNodeParser": () => (/* binding */ CreateObjectNodeParser)
/* harmony export */ });
/* harmony import */ var _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../controls/utils/icon-library */ "./src/controls/utils/icon-library.ts");
/* harmony import */ var _node_parser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node.parser */ "./src/parser/node.parser.ts");
/* harmony import */ var _utils_text_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/text-utils */ "./src/utils/text-utils.ts");
/* harmony import */ var _blueprint_parser_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../blueprint-parser-utils */ "./src/parser/blueprint-parser-utils.ts");
/* harmony import */ var _controls_nodes_headed_node_control__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../controls/nodes/headed-node-control */ "./src/controls/nodes/headed-node-control.ts");





class CreateObjectNodeParser extends _node_parser__WEBPACK_IMPORTED_MODULE_1__.NodeParser {
    parse(data) {
        const className = _blueprint_parser_utils__WEBPACK_IMPORTED_MODULE_3__.BlueprintParserUtils.getFirstClassNameFromPinProperties(data.node.customProperties) || '';
        data.node.title = `Create ${(0,_utils_text_utils__WEBPACK_IMPORTED_MODULE_2__.prettifyText)(className)}`;
        return new _controls_nodes_headed_node_control__WEBPACK_IMPORTED_MODULE_4__.HeadedNodeControl(data.node, _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_0__.IconLibrary.CONSTRUCT);
    }
}


/***/ }),

/***/ "./src/parser/node-parsers/create-widget-node.parser.ts":
/*!**************************************************************!*\
  !*** ./src/parser/node-parsers/create-widget-node.parser.ts ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CreateWidgetNodeParser": () => (/* binding */ CreateWidgetNodeParser)
/* harmony export */ });
/* harmony import */ var _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../controls/utils/icon-library */ "./src/controls/utils/icon-library.ts");
/* harmony import */ var _node_parser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node.parser */ "./src/parser/node.parser.ts");
/* harmony import */ var _utils_text_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/text-utils */ "./src/utils/text-utils.ts");
/* harmony import */ var _blueprint_parser_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../blueprint-parser-utils */ "./src/parser/blueprint-parser-utils.ts");
/* harmony import */ var _controls_nodes_headed_node_control__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../controls/nodes/headed-node-control */ "./src/controls/nodes/headed-node-control.ts");





class CreateWidgetNodeParser extends _node_parser__WEBPACK_IMPORTED_MODULE_1__.NodeParser {
    parse(data) {
        const className = _blueprint_parser_utils__WEBPACK_IMPORTED_MODULE_3__.BlueprintParserUtils.getFirstClassNameFromPinProperties(data.node.customProperties) || 'User ';
        data.node.title = `Create ${(0,_utils_text_utils__WEBPACK_IMPORTED_MODULE_2__.prettifyText)(className)} Widget`;
        return new _controls_nodes_headed_node_control__WEBPACK_IMPORTED_MODULE_4__.HeadedNodeControl(data.node, _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_0__.IconLibrary.CONSTRUCT);
    }
}


/***/ }),

/***/ "./src/parser/node-parsers/custom-event-node.parser.ts":
/*!*************************************************************!*\
  !*** ./src/parser/node-parsers/custom-event-node.parser.ts ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CustomEventNodeParser": () => (/* binding */ CustomEventNodeParser)
/* harmony export */ });
/* harmony import */ var _controls_nodes_headed_node_control__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../controls/nodes/headed-node-control */ "./src/controls/nodes/headed-node-control.ts");
/* harmony import */ var _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../controls/utils/icon-library */ "./src/controls/utils/icon-library.ts");
/* harmony import */ var _data_replication_type__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../data/replication-type */ "./src/data/replication-type.ts");
/* harmony import */ var _node_parser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../node.parser */ "./src/parser/node.parser.ts");




/*

FunctionFlags:
-------------------------------------------------

Multicast:   FunctionFlags=16448
RunOnServer: FunctionFlags=2097216
RunOnOwning: FunctionFlags=16777280

0000 0000 0000 0000 0000 0100 0000, 2^6: Probably if event replicates in general
0000 0000 0000 0000 0000 1000 0000, 2^7: Reliable
0000 0000 0000 0100 0000 0000 0000, 2^14: Multicast
0000 0010 0000 0000 0000 0000 0000, 2^21: Run on Server
0001 0000 0000 0000 0000 0000 0000, 2^24: Run on owning Client

*/
class CustomEventNodeParser extends _node_parser__WEBPACK_IMPORTED_MODULE_3__.NodeParser {
    constructor() {
        super({
            "CustomFunctionName": (node, value) => {
                node.customFunctionName = value.replace(/"/g, '');
                node.title = node.customFunctionName;
                node.subTitles.unshift({ text: 'Custom Event' });
            },
            "FunctionFlags": (node, value) => {
                node.functionFlags = Number.parseInt(value);
                node.reliable = ((node.functionFlags & CustomEventNodeParser.FUNCTION_FLAG_RELIABLE) != 0);
                node.replicationType = this.getReplicationType(node.functionFlags);
                if (node.replicationType !== _data_replication_type__WEBPACK_IMPORTED_MODULE_2__.ReplicationType.NotReplicated) {
                    const repKey = _data_replication_type__WEBPACK_IMPORTED_MODULE_2__.ReplicationType[node.replicationType];
                    const text = CustomEventNodeParser.REPLICATION_TYPE_TEXTS[repKey];
                    node.subTitles.unshift({ text, orderIndex: 1 });
                }
            },
            "ErrorType": (node, value) => { node.errorType = Number.parseInt(value); }
        });
    }
    parse(data) {
        this.parseProperties(data);
        data.node.backgroundColor = CustomEventNodeParser._DEFAULT_BACKGROUND_COLOR;
        return new _controls_nodes_headed_node_control__WEBPACK_IMPORTED_MODULE_0__.HeadedNodeControl(data.node, _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_1__.IconLibrary.CUSTOM_EVENT);
    }
    getReplicationType(functionFlags) {
        for (const prop in CustomEventNodeParser.FUNCTION_FLAG_BIT_MASKS) {
            if (Object.prototype.hasOwnProperty.call(CustomEventNodeParser.FUNCTION_FLAG_BIT_MASKS, prop)) {
                const bitMask = CustomEventNodeParser.FUNCTION_FLAG_BIT_MASKS[prop];
                if ((functionFlags & bitMask) != 0) {
                    return _data_replication_type__WEBPACK_IMPORTED_MODULE_2__.ReplicationType[prop];
                }
            }
        }
        return _data_replication_type__WEBPACK_IMPORTED_MODULE_2__.ReplicationType.NotReplicated;
    }
}
CustomEventNodeParser.FUNCTION_FLAG_RELIABLE = 64;
CustomEventNodeParser.FUNCTION_FLAG_BIT_MASKS = {
    [_data_replication_type__WEBPACK_IMPORTED_MODULE_2__.ReplicationType.Multicast]: 16384,
    [_data_replication_type__WEBPACK_IMPORTED_MODULE_2__.ReplicationType.RunOnServer]: 2097152,
    [_data_replication_type__WEBPACK_IMPORTED_MODULE_2__.ReplicationType.RunOnOwningClient]: 16777216,
};
CustomEventNodeParser.REPLICATION_TYPE_TEXTS = {
    [_data_replication_type__WEBPACK_IMPORTED_MODULE_2__.ReplicationType.Multicast]: 'Executes On All',
    [_data_replication_type__WEBPACK_IMPORTED_MODULE_2__.ReplicationType.RunOnServer]: 'Executes On Server',
    [_data_replication_type__WEBPACK_IMPORTED_MODULE_2__.ReplicationType.RunOnOwningClient]: 'Executes On Owning Client',
};
CustomEventNodeParser._DEFAULT_BACKGROUND_COLOR = '156, 36, 35';


/***/ }),

/***/ "./src/parser/node-parsers/dynamic-cast-node.parser.ts":
/*!*************************************************************!*\
  !*** ./src/parser/node-parsers/dynamic-cast-node.parser.ts ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DynamicCastNodeParser": () => (/* binding */ DynamicCastNodeParser)
/* harmony export */ });
/* harmony import */ var _controls_nodes_headed_node_control__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../controls/nodes/headed-node-control */ "./src/controls/nodes/headed-node-control.ts");
/* harmony import */ var _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../controls/utils/icon-library */ "./src/controls/utils/icon-library.ts");
/* harmony import */ var _node_data_reference_parser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../node-data-reference.parser */ "./src/parser/node-data-reference.parser.ts");
/* harmony import */ var _node_parser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../node.parser */ "./src/parser/node.parser.ts");




class DynamicCastNodeParser extends _node_parser__WEBPACK_IMPORTED_MODULE_3__.NodeParser {
    constructor() {
        super({
            "TargetType": (node, value) => {
                node.targetType = _node_data_reference_parser__WEBPACK_IMPORTED_MODULE_2__.NodeDataReferenceParser.parseClassReference(value);
            }
        });
    }
    parse(data) {
        this.parseProperties(data);
        let castNode = data.node;
        castNode.title = "Cast to " + castNode.targetType.className;
        castNode.backgroundColor = "32, 116, 120";
        return new _controls_nodes_headed_node_control__WEBPACK_IMPORTED_MODULE_0__.HeadedNodeControl(data.node, _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_1__.IconLibrary.CAST);
    }
}


/***/ }),

/***/ "./src/parser/node-parsers/event-node.parser.ts":
/*!******************************************************!*\
  !*** ./src/parser/node-parsers/event-node.parser.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "EventNodeParser": () => (/* binding */ EventNodeParser)
/* harmony export */ });
/* harmony import */ var _controls_nodes_headed_node_control__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../controls/nodes/headed-node-control */ "./src/controls/nodes/headed-node-control.ts");
/* harmony import */ var _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../controls/utils/icon-library */ "./src/controls/utils/icon-library.ts");
/* harmony import */ var _node_data_reference_parser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../node-data-reference.parser */ "./src/parser/node-data-reference.parser.ts");
/* harmony import */ var _node_parser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../node.parser */ "./src/parser/node.parser.ts");




class EventNodeParser extends _node_parser__WEBPACK_IMPORTED_MODULE_3__.NodeParser {
    constructor() {
        super({
            "EventReference": (node, value) => {
                const parser = new _node_data_reference_parser__WEBPACK_IMPORTED_MODULE_2__.NodeDataReferenceParser();
                node.eventReference = parser.parse(value);
                node.title = 'Event ' + node.eventReference.memberName.replace('Receive', '');
            },
            "bOverrideFunction": (node, value) => { node.overrideFunction = (value === "True"); },
        });
    }
    parse(data) {
        this.parseProperties(data);
        data.node.backgroundColor = EventNodeParser._DEFAULT_BACKGROUND_COLOR;
        return new _controls_nodes_headed_node_control__WEBPACK_IMPORTED_MODULE_0__.HeadedNodeControl(data.node, _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_1__.IconLibrary.EVENT);
    }
}
EventNodeParser._DEFAULT_BACKGROUND_COLOR = '156, 36, 35';


/***/ }),

/***/ "./src/parser/node-parsers/flow-control-node.parser.ts":
/*!*************************************************************!*\
  !*** ./src/parser/node-parsers/flow-control-node.parser.ts ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FlowControlNodeParser": () => (/* binding */ FlowControlNodeParser)
/* harmony export */ });
/* harmony import */ var _controls_nodes_headed_node_control__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../controls/nodes/headed-node-control */ "./src/controls/nodes/headed-node-control.ts");
/* harmony import */ var _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../controls/utils/icon-library */ "./src/controls/utils/icon-library.ts");
/* harmony import */ var _data_classes_unreal_node_class__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../data/classes/unreal-node-class */ "./src/data/classes/unreal-node-class.ts");
/* harmony import */ var _node_parser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../node.parser */ "./src/parser/node.parser.ts");




class FlowControlNodeParser extends _node_parser__WEBPACK_IMPORTED_MODULE_3__.NodeParser {
    parse(data) {
        const nodeData = FlowControlNodeParser._NODE_TITLES[data.node.class];
        data.node.title = nodeData.title;
        data.node.backgroundColor = FlowControlNodeParser._DEFAULT_BACKGROUND_COLOR;
        return new _controls_nodes_headed_node_control__WEBPACK_IMPORTED_MODULE_0__.HeadedNodeControl(data.node, nodeData.icon);
    }
}
FlowControlNodeParser._DEFAULT_BACKGROUND_COLOR = '150, 150, 150';
FlowControlNodeParser._NODE_TITLES = {
    [_data_classes_unreal_node_class__WEBPACK_IMPORTED_MODULE_2__.UnrealNodeClass.IF_THEN_ELSE]: { title: "Branch", icon: _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_1__.IconLibrary.BRANCH },
    [_data_classes_unreal_node_class__WEBPACK_IMPORTED_MODULE_2__.UnrealNodeClass.EXECUTION_SEQUENCE]: { title: "Sequence", icon: _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_1__.IconLibrary.SEQUENCE },
    [_data_classes_unreal_node_class__WEBPACK_IMPORTED_MODULE_2__.UnrealNodeClass.MULTI_GATE]: { title: "Multi Gate", icon: _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_1__.IconLibrary.SEQUENCE },
};


/***/ }),

/***/ "./src/parser/node-parsers/function-entry-node.parser.ts":
/*!***************************************************************!*\
  !*** ./src/parser/node-parsers/function-entry-node.parser.ts ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FunctionEntryNodeParser": () => (/* binding */ FunctionEntryNodeParser)
/* harmony export */ });
/* harmony import */ var _controls_nodes_headed_node_control__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../controls/nodes/headed-node-control */ "./src/controls/nodes/headed-node-control.ts");
/* harmony import */ var _node_data_reference_parser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node-data-reference.parser */ "./src/parser/node-data-reference.parser.ts");
/* harmony import */ var _node_parser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../node.parser */ "./src/parser/node.parser.ts");
/* harmony import */ var _utils_text_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/text-utils */ "./src/utils/text-utils.ts");
/* harmony import */ var _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../controls/utils/icon-library */ "./src/controls/utils/icon-library.ts");
/* harmony import */ var _data_classes_unreal_node_class__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../data/classes/unreal-node-class */ "./src/data/classes/unreal-node-class.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../constants */ "./src/constants.ts");







class FunctionEntryNodeParser extends _node_parser__WEBPACK_IMPORTED_MODULE_2__.NodeParser {
    constructor() {
        super({
            "FunctionReference": (node, value) => {
                const parser = new _node_data_reference_parser__WEBPACK_IMPORTED_MODULE_1__.NodeDataReferenceParser();
                node.functionReference = parser.parse(value);
                node.functionReference.memberName = node.functionReference.memberName.replace('UserConstructionScript', 'ConstructionScript');
                node.backgroundColor = _constants__WEBPACK_IMPORTED_MODULE_6__.Constants.DEFAULT_FUNC_ENTRY_BACKGROUND_COLOR;
                if (node.class === _data_classes_unreal_node_class__WEBPACK_IMPORTED_MODULE_5__.UnrealNodeClass.FUNCTION_RESULT) {
                    node.title = 'Return Node';
                }
                else {
                    node.title = (0,_utils_text_utils__WEBPACK_IMPORTED_MODULE_3__.insertSpacesBetweenCapitalizedWords)((0,_utils_text_utils__WEBPACK_IMPORTED_MODULE_3__.findFriendlyName)(node.functionReference.memberName));
                }
            },
        });
    }
    parse(data) {
        this.parseProperties(data);
        return new _controls_nodes_headed_node_control__WEBPACK_IMPORTED_MODULE_0__.HeadedNodeControl(data.node, _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_4__.IconLibrary.CONSTRUCT);
    }
}


/***/ }),

/***/ "./src/parser/node-parsers/generic-node.parser.ts":
/*!********************************************************!*\
  !*** ./src/parser/node-parsers/generic-node.parser.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GenericNodeParser": () => (/* binding */ GenericNodeParser)
/* harmony export */ });
/* harmony import */ var _data_classes_unreal_node_class__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../data/classes/unreal-node-class */ "./src/data/classes/unreal-node-class.ts");
/* harmony import */ var _comment_node_parser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./comment-node.parser */ "./src/parser/node-parsers/comment-node.parser.ts");
/* harmony import */ var _node_parser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../node.parser */ "./src/parser/node.parser.ts");
/* harmony import */ var _call_function_node_parser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./call-function-node.parser */ "./src/parser/node-parsers/call-function-node.parser.ts");
/* harmony import */ var _input_axis_node_parser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./input-axis-node.parser */ "./src/parser/node-parsers/input-axis-node.parser.ts");
/* harmony import */ var _variable_node_parser__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./variable-node.parser */ "./src/parser/node-parsers/variable-node.parser.ts");
/* harmony import */ var _pin_property_parser__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../pin-property.parser */ "./src/parser/pin-property.parser.ts");
/* harmony import */ var _controls_nodes_headed_node_control__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../controls/nodes/headed-node-control */ "./src/controls/nodes/headed-node-control.ts");
/* harmony import */ var _math_vector2__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../math/vector2 */ "./src/math/vector2.ts");
/* harmony import */ var _flow_control_node_parser__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./flow-control-node.parser */ "./src/parser/node-parsers/flow-control-node.parser.ts");
/* harmony import */ var _knot_node_parser__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./knot-node.parser */ "./src/parser/node-parsers/knot-node.parser.ts");
/* harmony import */ var _custom_event_node_parser__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./custom-event-node.parser */ "./src/parser/node-parsers/custom-event-node.parser.ts");
/* harmony import */ var _event_node_parser__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./event-node.parser */ "./src/parser/node-parsers/event-node.parser.ts");
/* harmony import */ var _input_key_node_parser__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./input-key-node.parser */ "./src/parser/node-parsers/input-key-node.parser.ts");
/* harmony import */ var _dynamic_cast_node_parser__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./dynamic-cast-node.parser */ "./src/parser/node-parsers/dynamic-cast-node.parser.ts");
/* harmony import */ var _switch_enum_node_parser__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./switch-enum-node.parser */ "./src/parser/node-parsers/switch-enum-node.parser.ts");
/* harmony import */ var _data_pin_pin_property__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../data/pin/pin-property */ "./src/data/pin/pin-property.ts");
/* harmony import */ var _data_pin_pin_direction__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../data/pin/pin-direction */ "./src/data/pin/pin-direction.ts");
/* harmony import */ var _data_pin_pin_category__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../data/pin/pin-category */ "./src/data/pin/pin-category.ts");
/* harmony import */ var _macro_instance_node_parser__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./macro-instance-node.parser */ "./src/parser/node-parsers/macro-instance-node.parser.ts");
/* harmony import */ var _function_entry_node_parser__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./function-entry-node.parser */ "./src/parser/node-parsers/function-entry-node.parser.ts");
/* harmony import */ var _get_array_item_node_parser__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./get-array-item-node.parser */ "./src/parser/node-parsers/get-array-item-node.parser.ts");
/* harmony import */ var _make_array_node_parser__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./make-array-node.parser */ "./src/parser/node-parsers/make-array-node.parser.ts");
/* harmony import */ var _input_touch_node_parser__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./input-touch-node.parser */ "./src/parser/node-parsers/input-touch-node.parser.ts");
/* harmony import */ var _get_input_axis_key_value_node_parser__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./get-input-axis-key-value-node.parser */ "./src/parser/node-parsers/get-input-axis-key-value-node.parser.ts");
/* harmony import */ var _struct_node_parser__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./struct-node.parser */ "./src/parser/node-parsers/struct-node.parser.ts");
/* harmony import */ var _controls_utils_color_utils__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../../controls/utils/color-utils */ "./src/controls/utils/color-utils.ts");
/* harmony import */ var _select_node_parser__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./select-node.parser */ "./src/parser/node-parsers/select-node.parser.ts");
/* harmony import */ var _timeline_node_parser__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./timeline-node.parser */ "./src/parser/node-parsers/timeline-node.parser.ts");
/* harmony import */ var _spawn_actor_node_parser__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./spawn-actor-node.parser */ "./src/parser/node-parsers/spawn-actor-node.parser.ts");
/* harmony import */ var _tunnel_node_parser__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./tunnel-node.parser */ "./src/parser/node-parsers/tunnel-node.parser.ts");
/* harmony import */ var _create_widget_node_parser__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./create-widget-node.parser */ "./src/parser/node-parsers/create-widget-node.parser.ts");
/* harmony import */ var _create_object_node_parser__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./create-object-node.parser */ "./src/parser/node-parsers/create-object-node.parser.ts");

































class GenericNodeParser extends _node_parser__WEBPACK_IMPORTED_MODULE_2__.NodeParser {
    constructor() {
        super({
            "NodeGuid": (node, v) => { node.guid = v; },
            "NodePosX": (node, v) => { node.pos.x = Number.parseInt(v); },
            "NodePosY": (node, v) => { node.pos.y = Number.parseInt(v); },
            "AdvancedPinDisplay": (node, v) => {
                node.advancedPinDisplay = v === "Shown" ? true : false;
            },
            "EnabledState": (node, v) => { node.enabledState = v; },
            "ErrorType": (node, v) => { node.errorType = Number.parseInt(v); },
            "ErrorMsg": (node, v) => { node.errorMsg = v.replace(/["]/g, '').replace(/\\\'/g, '\''); }
        });
        this._OBJECT_STARTING_TAG = "Begin Object";
        this._nodeParsers = {
            [_data_classes_unreal_node_class__WEBPACK_IMPORTED_MODULE_0__.UnrealNodeClass.KNOT]: () => new _knot_node_parser__WEBPACK_IMPORTED_MODULE_10__.KnotNodeParser(),
            [_data_classes_unreal_node_class__WEBPACK_IMPORTED_MODULE_0__.UnrealNodeClass.CALL_FUNCTION]: () => new _call_function_node_parser__WEBPACK_IMPORTED_MODULE_3__.CallFunctionNodeParser(),
            [_data_classes_unreal_node_class__WEBPACK_IMPORTED_MODULE_0__.UnrealNodeClass.IF_THEN_ELSE]: () => new _flow_control_node_parser__WEBPACK_IMPORTED_MODULE_9__.FlowControlNodeParser(),
            [_data_classes_unreal_node_class__WEBPACK_IMPORTED_MODULE_0__.UnrealNodeClass.EXECUTION_SEQUENCE]: () => new _flow_control_node_parser__WEBPACK_IMPORTED_MODULE_9__.FlowControlNodeParser(),
            [_data_classes_unreal_node_class__WEBPACK_IMPORTED_MODULE_0__.UnrealNodeClass.MULTI_GATE]: () => new _flow_control_node_parser__WEBPACK_IMPORTED_MODULE_9__.FlowControlNodeParser(),
            [_data_classes_unreal_node_class__WEBPACK_IMPORTED_MODULE_0__.UnrealNodeClass.VARIABLE_GET]: () => new _variable_node_parser__WEBPACK_IMPORTED_MODULE_5__.VariableNodeParser(),
            [_data_classes_unreal_node_class__WEBPACK_IMPORTED_MODULE_0__.UnrealNodeClass.VARIABLE_SET]: () => new _variable_node_parser__WEBPACK_IMPORTED_MODULE_5__.VariableNodeParser(),
            [_data_classes_unreal_node_class__WEBPACK_IMPORTED_MODULE_0__.UnrealNodeClass.EVENT]: () => new _event_node_parser__WEBPACK_IMPORTED_MODULE_12__.EventNodeParser(),
            [_data_classes_unreal_node_class__WEBPACK_IMPORTED_MODULE_0__.UnrealNodeClass.CUSTOM_EVENT]: () => new _custom_event_node_parser__WEBPACK_IMPORTED_MODULE_11__.CustomEventNodeParser(),
            [_data_classes_unreal_node_class__WEBPACK_IMPORTED_MODULE_0__.UnrealNodeClass.INPUT_AXIS_EVENT]: () => new _input_axis_node_parser__WEBPACK_IMPORTED_MODULE_4__.InputAxisNodeParser(),
            [_data_classes_unreal_node_class__WEBPACK_IMPORTED_MODULE_0__.UnrealNodeClass.COMMENT]: () => new _comment_node_parser__WEBPACK_IMPORTED_MODULE_1__.CommentNodeParser(),
            [_data_classes_unreal_node_class__WEBPACK_IMPORTED_MODULE_0__.UnrealNodeClass.INPUT_KEY]: () => new _input_key_node_parser__WEBPACK_IMPORTED_MODULE_13__.InputKeyNodeParser(),
            [_data_classes_unreal_node_class__WEBPACK_IMPORTED_MODULE_0__.UnrealNodeClass.CommutativeAssociativeBinaryOperator]: () => new _call_function_node_parser__WEBPACK_IMPORTED_MODULE_3__.CallFunctionNodeParser(),
            [_data_classes_unreal_node_class__WEBPACK_IMPORTED_MODULE_0__.UnrealNodeClass.DYNAMIC_CAST]: () => new _dynamic_cast_node_parser__WEBPACK_IMPORTED_MODULE_14__.DynamicCastNodeParser(),
            [_data_classes_unreal_node_class__WEBPACK_IMPORTED_MODULE_0__.UnrealNodeClass.SWITCH_ENUM]: () => new _switch_enum_node_parser__WEBPACK_IMPORTED_MODULE_15__.SwitchEnumNodeParser(),
            [_data_classes_unreal_node_class__WEBPACK_IMPORTED_MODULE_0__.UnrealNodeClass.MACRO_INSTANCE]: () => new _macro_instance_node_parser__WEBPACK_IMPORTED_MODULE_19__.MacroInstanceNodeParser(),
            [_data_classes_unreal_node_class__WEBPACK_IMPORTED_MODULE_0__.UnrealNodeClass.FUNCTION_ENTRY]: () => new _function_entry_node_parser__WEBPACK_IMPORTED_MODULE_20__.FunctionEntryNodeParser(),
            [_data_classes_unreal_node_class__WEBPACK_IMPORTED_MODULE_0__.UnrealNodeClass.FUNCTION_RESULT]: () => new _function_entry_node_parser__WEBPACK_IMPORTED_MODULE_20__.FunctionEntryNodeParser(),
            [_data_classes_unreal_node_class__WEBPACK_IMPORTED_MODULE_0__.UnrealNodeClass.CALL_ARRAY_FUNCTION]: () => new _call_function_node_parser__WEBPACK_IMPORTED_MODULE_3__.CallFunctionNodeParser(),
            [_data_classes_unreal_node_class__WEBPACK_IMPORTED_MODULE_0__.UnrealNodeClass.SELF]: () => new _variable_node_parser__WEBPACK_IMPORTED_MODULE_5__.VariableNodeParser(),
            [_data_classes_unreal_node_class__WEBPACK_IMPORTED_MODULE_0__.UnrealNodeClass.GET_ARRAY_ITEM]: () => new _get_array_item_node_parser__WEBPACK_IMPORTED_MODULE_21__.GetArrayItemNodeParser(),
            [_data_classes_unreal_node_class__WEBPACK_IMPORTED_MODULE_0__.UnrealNodeClass.MAKE_ARRAY]: () => new _make_array_node_parser__WEBPACK_IMPORTED_MODULE_22__.MakeArrayNodeParser(),
            [_data_classes_unreal_node_class__WEBPACK_IMPORTED_MODULE_0__.UnrealNodeClass.INPUT_TOUCH]: () => new _input_touch_node_parser__WEBPACK_IMPORTED_MODULE_23__.InputTouchNodeParser(),
            [_data_classes_unreal_node_class__WEBPACK_IMPORTED_MODULE_0__.UnrealNodeClass.GET_INPUT_AXIS_KEY_VALUE]: () => new _get_input_axis_key_value_node_parser__WEBPACK_IMPORTED_MODULE_24__.GetInputAxisKeyValueNodeParser(),
            [_data_classes_unreal_node_class__WEBPACK_IMPORTED_MODULE_0__.UnrealNodeClass.SET_FIELDS_IN_STRUCT]: () => new _struct_node_parser__WEBPACK_IMPORTED_MODULE_25__.StructNodeParser(),
            [_data_classes_unreal_node_class__WEBPACK_IMPORTED_MODULE_0__.UnrealNodeClass.BREAK_STRUCT]: () => new _struct_node_parser__WEBPACK_IMPORTED_MODULE_25__.StructNodeParser(),
            [_data_classes_unreal_node_class__WEBPACK_IMPORTED_MODULE_0__.UnrealNodeClass.MAKE_STRUCT]: () => new _struct_node_parser__WEBPACK_IMPORTED_MODULE_25__.StructNodeParser(),
            [_data_classes_unreal_node_class__WEBPACK_IMPORTED_MODULE_0__.UnrealNodeClass.SELECT]: () => new _select_node_parser__WEBPACK_IMPORTED_MODULE_27__.SelectNodeParser(),
            [_data_classes_unreal_node_class__WEBPACK_IMPORTED_MODULE_0__.UnrealNodeClass.TIMELINE]: () => new _timeline_node_parser__WEBPACK_IMPORTED_MODULE_28__.TimelineNodeParser(),
            [_data_classes_unreal_node_class__WEBPACK_IMPORTED_MODULE_0__.UnrealNodeClass.SPAWN_ACTOR_FROM_CLASS]: () => new _spawn_actor_node_parser__WEBPACK_IMPORTED_MODULE_29__.SpawnActorNodeParser(),
            [_data_classes_unreal_node_class__WEBPACK_IMPORTED_MODULE_0__.UnrealNodeClass.TUNNEL]: () => new _tunnel_node_parser__WEBPACK_IMPORTED_MODULE_30__.TunnelNodeParser(),
            [_data_classes_unreal_node_class__WEBPACK_IMPORTED_MODULE_0__.UnrealNodeClass.CREATE_WIDGET]: () => new _create_widget_node_parser__WEBPACK_IMPORTED_MODULE_31__.CreateWidgetNodeParser(),
            [_data_classes_unreal_node_class__WEBPACK_IMPORTED_MODULE_0__.UnrealNodeClass.CREATE_OBJECT]: () => new _create_object_node_parser__WEBPACK_IMPORTED_MODULE_32__.CreateObjectNodeParser(),
        };
        this._customPropertyParsers = {
            "Pin": () => new _pin_property_parser__WEBPACK_IMPORTED_MODULE_6__.PinPropertyParser(),
        };
    }
    parse(data) {
        const headerLine = data.lines[0];
        const header = this.parseHeader(headerLine);
        data.node = {
            class: header.class,
            name: header.name,
            title: header.name,
            subTitles: [],
            guid: undefined,
            pos: new _math_vector2__WEBPACK_IMPORTED_MODULE_8__.Vector2(0, 0),
            sourceText: data.lines.join('\n'),
            customProperties: [],
            latent: false,
        };
        this.parseProperties(data);
        this.parseCustomProperties(data);
        const particularImplementation = this._nodeParsers[data.node.class];
        if (!particularImplementation) {
            console.info(`There is no particular implementation for class ${data.node.class}. Falling back to the generic node class.`);
            return new _controls_nodes_headed_node_control__WEBPACK_IMPORTED_MODULE_7__.HeadedNodeControl(data.node);
        }
        const parser = particularImplementation();
        return parser.parse(data);
    }
    parseHeader(headerLine) {
        let options = {};
        const parseArgument = (argumentTerm) => {
            const keyValuePair = argumentTerm.split("=");
            options[keyValuePair[0]] = keyValuePair[1].replace(/"/g, '');
        };
        const prefixLength = this._OBJECT_STARTING_TAG.length;
        const headerWithoutStartingTag = headerLine.substr(prefixLength, headerLine.length - prefixLength - 1);
        const headerArguments = headerWithoutStartingTag.trim().split(' ') || [];
        headerArguments.forEach(a => parseArgument(a));
        return {
            class: options.Class,
            name: options.Name
        };
    }
    parseCustomProperties(data) {
        for (const line of data.unparsedLines) {
            if (line.startsWith('CustomProperties')) {
                const property = this.parseCustomProperty(line, data.node.name);
                if (!property) {
                    continue;
                }
                data.node.customProperties.push(property);
                if (property instanceof _data_pin_pin_property__WEBPACK_IMPORTED_MODULE_16__.PinProperty) {
                    if (property.subCategoryObject.class === _controls_utils_color_utils__WEBPACK_IMPORTED_MODULE_26__.StructClass.LatentActionInfo) {
                        data.node.latent = true;
                    }
                }
            }
        }
        this.hideExecPins(data.node);
    }
    parseCustomProperty(propertyLine, nodeName) {
        // Removes "CustomProperties" from property line
        propertyLine = propertyLine.substr("CustomProperties".length).trim();
        let dataset = propertyLine.split(' ');
        let type = dataset.shift();
        let data = dataset.join(' ');
        data = data.trim();
        data = data.substr(1, data.length - 2);
        const propertyParser = this._customPropertyParsers[type];
        if (!propertyParser) {
            console.info(`There is no implementation for custom property type '${type}'. Skip this property`);
            return;
        }
        const customProperty = propertyParser().parse(data, nodeName);
        return customProperty;
    }
    hideExecPins(node) {
        let execPinsByDirection = {
            [_data_pin_pin_direction__WEBPACK_IMPORTED_MODULE_17__.PinDirection.EGPD_Input]: new Array(),
            [_data_pin_pin_direction__WEBPACK_IMPORTED_MODULE_17__.PinDirection.EGPD_Output]: new Array(),
        };
        // Groups exec pins according to their direction
        for (const property of node.customProperties) {
            if (!(property instanceof _data_pin_pin_property__WEBPACK_IMPORTED_MODULE_16__.PinProperty)) {
                continue;
            }
            if (property.direction == undefined || property.category !== _data_pin_pin_category__WEBPACK_IMPORTED_MODULE_18__.PinCategory.exec) {
                continue;
            }
            execPinsByDirection[property.direction].push(property);
        }
        // By default, the pin name is displayed...
        // Hides name of the exec pin if it is the only one of its type (pin direction).
        for (const pinDirection in execPinsByDirection) {
            if (Object.prototype.hasOwnProperty.call(execPinsByDirection, pinDirection)) {
                const counter = execPinsByDirection[pinDirection];
                if (counter.length == 1) {
                    counter[0].hideName = true;
                }
            }
        }
    }
}


/***/ }),

/***/ "./src/parser/node-parsers/get-array-item-node.parser.ts":
/*!***************************************************************!*\
  !*** ./src/parser/node-parsers/get-array-item-node.parser.ts ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GetArrayItemNodeParser": () => (/* binding */ GetArrayItemNodeParser)
/* harmony export */ });
/* harmony import */ var _node_parser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node.parser */ "./src/parser/node.parser.ts");
/* harmony import */ var _controls_nodes_headless_node_control__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../controls/nodes/headless-node-control */ "./src/controls/nodes/headless-node-control.ts");
/* harmony import */ var _blueprint_parser_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../blueprint-parser-utils */ "./src/parser/blueprint-parser-utils.ts");



class GetArrayItemNodeParser extends _node_parser__WEBPACK_IMPORTED_MODULE_0__.NodeParser {
    constructor() {
        super({
            "bReturnByRefDesired": (node, value) => { node.returnByRefDesired = !(value === "False"); },
        });
    }
    parse(data) {
        const node = data.node;
        node.returnByRefDesired = true;
        this.parseProperties(data);
        node.title = 'GET';
        node.subTitles.push({
            text: (node.returnByRefDesired === true) ? 'a ref' : 'a copy'
        });
        _blueprint_parser_utils__WEBPACK_IMPORTED_MODULE_2__.BlueprintParserUtils.hidePinNames(node.customProperties);
        return new _controls_nodes_headless_node_control__WEBPACK_IMPORTED_MODULE_1__.HeadlessNodeControl(node);
    }
}


/***/ }),

/***/ "./src/parser/node-parsers/get-input-axis-key-value-node.parser.ts":
/*!*************************************************************************!*\
  !*** ./src/parser/node-parsers/get-input-axis-key-value-node.parser.ts ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GetInputAxisKeyValueNodeParser": () => (/* binding */ GetInputAxisKeyValueNodeParser)
/* harmony export */ });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../constants */ "./src/constants.ts");
/* harmony import */ var _controls_nodes_headed_node_control__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../controls/nodes/headed-node-control */ "./src/controls/nodes/headed-node-control.ts");
/* harmony import */ var _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../controls/utils/icon-library */ "./src/controls/utils/icon-library.ts");
/* harmony import */ var _utils_text_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/text-utils */ "./src/utils/text-utils.ts");
/* harmony import */ var _node_parser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../node.parser */ "./src/parser/node.parser.ts");





class GetInputAxisKeyValueNodeParser extends _node_parser__WEBPACK_IMPORTED_MODULE_4__.NodeParser {
    constructor() {
        super({
            "InputAxisKey": (node, value) => { node.inputAxisKey = value; },
        });
    }
    parse(data) {
        this.parseProperties(data);
        data.node.backgroundColor = _constants__WEBPACK_IMPORTED_MODULE_0__.Constants.DEFAULT_FUNC_PURE_BACKGROUND_COLOR;
        let inputNode = data.node;
        inputNode.title = "Get " + (0,_utils_text_utils__WEBPACK_IMPORTED_MODULE_3__.insertSpacesBetweenCapitalizedWords)(inputNode.inputAxisKey);
        let icon = _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_2__.IconLibrary.FUNCTION;
        if (inputNode.inputAxisKey.startsWith("Mouse")) {
            icon = _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_2__.IconLibrary.MOUSE;
        }
        return new _controls_nodes_headed_node_control__WEBPACK_IMPORTED_MODULE_1__.HeadedNodeControl(data.node, icon);
    }
}


/***/ }),

/***/ "./src/parser/node-parsers/input-axis-node.parser.ts":
/*!***********************************************************!*\
  !*** ./src/parser/node-parsers/input-axis-node.parser.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "InputAxisNodeParser": () => (/* binding */ InputAxisNodeParser)
/* harmony export */ });
/* harmony import */ var _controls_nodes_headed_node_control__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../controls/nodes/headed-node-control */ "./src/controls/nodes/headed-node-control.ts");
/* harmony import */ var _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../controls/utils/icon-library */ "./src/controls/utils/icon-library.ts");
/* harmony import */ var _node_parser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../node.parser */ "./src/parser/node.parser.ts");



class InputAxisNodeParser extends _node_parser__WEBPACK_IMPORTED_MODULE_2__.NodeParser {
    constructor() {
        super({
            "InputAxisName": (node, value) => {
                node.inputAxisName = value.replace(/"/g, '');
                node.title = "InputAxis " + node.inputAxisName;
            },
            "CustomFunctionName": (node, value) => { node.customFunctionName = value; },
        });
    }
    parse(data) {
        this.parseProperties(data);
        data.node.backgroundColor = InputAxisNodeParser._DEFAULT_BACKGROUND_COLOR;
        return new _controls_nodes_headed_node_control__WEBPACK_IMPORTED_MODULE_0__.HeadedNodeControl(data.node, _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_1__.IconLibrary.EVENT);
    }
}
InputAxisNodeParser._DEFAULT_BACKGROUND_COLOR = '156, 36, 35';


/***/ }),

/***/ "./src/parser/node-parsers/input-key-node.parser.ts":
/*!**********************************************************!*\
  !*** ./src/parser/node-parsers/input-key-node.parser.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "InputKeyNodeParser": () => (/* binding */ InputKeyNodeParser)
/* harmony export */ });
/* harmony import */ var _controls_nodes_headed_node_control__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../controls/nodes/headed-node-control */ "./src/controls/nodes/headed-node-control.ts");
/* harmony import */ var _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../controls/utils/icon-library */ "./src/controls/utils/icon-library.ts");
/* harmony import */ var _utils_text_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/text-utils */ "./src/utils/text-utils.ts");
/* harmony import */ var _node_parser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../node.parser */ "./src/parser/node.parser.ts");




class InputKeyNodeParser extends _node_parser__WEBPACK_IMPORTED_MODULE_3__.NodeParser {
    constructor() {
        super({
            "InputKey": (node, value) => { node.inputKey = value; },
            "bControl": (node, value) => { node.control = value.toLowerCase() === "true"; },
            "bAlt": (node, value) => { node.alt = value.toLowerCase() === "true"; },
            "bShift": (node, value) => { node.shift = value.toLowerCase() === "true"; },
            "bCommand": (node, value) => { node.command = value.toLowerCase() === "true"; },
        });
    }
    parse(data) {
        this.parseProperties(data);
        data.node.backgroundColor = InputKeyNodeParser.DEFAULT_BACKGROUND_COLOR;
        let inputKeyNode = data.node;
        let modifiers = [];
        let title = "";
        if (inputKeyNode.control)
            modifiers.push("Ctrl");
        if (inputKeyNode.command)
            modifiers.push("Cmd");
        if (inputKeyNode.alt)
            modifiers.push("Alt");
        if (inputKeyNode.shift)
            modifiers.push("Shift");
        if (modifiers.length > 0) {
            title = modifiers.join('+') + " ";
        }
        title += (0,_utils_text_utils__WEBPACK_IMPORTED_MODULE_2__.prettifyText)(inputKeyNode.inputKey);
        title = title.replace("Magic Leap", "ML");
        let icon = _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_1__.IconLibrary.INPUT_KEY;
        if (inputKeyNode.inputKey.startsWith("Gamepad_") || inputKeyNode.inputKey.startsWith("MagicLeap_")) {
            icon = _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_1__.IconLibrary.INPUT_GAMEPAD;
        }
        data.node.title = title;
        return new _controls_nodes_headed_node_control__WEBPACK_IMPORTED_MODULE_0__.HeadedNodeControl(data.node, icon);
    }
}
InputKeyNodeParser.DEFAULT_BACKGROUND_COLOR = '156, 36, 35';


/***/ }),

/***/ "./src/parser/node-parsers/input-touch-node.parser.ts":
/*!************************************************************!*\
  !*** ./src/parser/node-parsers/input-touch-node.parser.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "InputTouchNodeParser": () => (/* binding */ InputTouchNodeParser)
/* harmony export */ });
/* harmony import */ var _controls_nodes_headed_node_control__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../controls/nodes/headed-node-control */ "./src/controls/nodes/headed-node-control.ts");
/* harmony import */ var _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../controls/utils/icon-library */ "./src/controls/utils/icon-library.ts");
/* harmony import */ var _node_parser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../node.parser */ "./src/parser/node.parser.ts");



class InputTouchNodeParser extends _node_parser__WEBPACK_IMPORTED_MODULE_2__.NodeParser {
    parse(data) {
        data.node.title = "Input Touch";
        data.node.backgroundColor = InputTouchNodeParser._DEFAULT_BACKGROUND_COLOR;
        return new _controls_nodes_headed_node_control__WEBPACK_IMPORTED_MODULE_0__.HeadedNodeControl(data.node, _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_1__.IconLibrary.INPUT_TOUCH);
    }
}
InputTouchNodeParser._DEFAULT_BACKGROUND_COLOR = '156, 36, 35';


/***/ }),

/***/ "./src/parser/node-parsers/knot-node.parser.ts":
/*!*****************************************************!*\
  !*** ./src/parser/node-parsers/knot-node.parser.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "KnotNodeParser": () => (/* binding */ KnotNodeParser)
/* harmony export */ });
/* harmony import */ var _controls_nodes_reroute_node_control__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../controls/nodes/reroute-node.control */ "./src/controls/nodes/reroute-node.control.ts");
/* harmony import */ var _node_parser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node.parser */ "./src/parser/node.parser.ts");


class KnotNodeParser extends _node_parser__WEBPACK_IMPORTED_MODULE_1__.NodeParser {
    parse(data) {
        data.node.backgroundColor = KnotNodeParser._DEFAULT_BACKGROUND_COLOR;
        return new _controls_nodes_reroute_node_control__WEBPACK_IMPORTED_MODULE_0__.RerouteNodeControl(data.node);
    }
}
KnotNodeParser._DEFAULT_BACKGROUND_COLOR = '255, 255, 255';


/***/ }),

/***/ "./src/parser/node-parsers/macro-instance-node.parser.ts":
/*!***************************************************************!*\
  !*** ./src/parser/node-parsers/macro-instance-node.parser.ts ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MacroInstanceNodeParser": () => (/* binding */ MacroInstanceNodeParser)
/* harmony export */ });
/* harmony import */ var _controls_nodes_headed_node_control__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../controls/nodes/headed-node-control */ "./src/controls/nodes/headed-node-control.ts");
/* harmony import */ var _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../controls/utils/icon-library */ "./src/controls/utils/icon-library.ts");
/* harmony import */ var _macro_graph_reference_parser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../macro-graph-reference.parser */ "./src/parser/macro-graph-reference.parser.ts");
/* harmony import */ var _node_parser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../node.parser */ "./src/parser/node.parser.ts");
/* harmony import */ var _utils_text_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/text-utils */ "./src/utils/text-utils.ts");





class MacroInstanceNodeParser extends _node_parser__WEBPACK_IMPORTED_MODULE_3__.NodeParser {
    constructor() {
        super({
            "MacroGraphReference": (node, value) => {
                const parser = new _macro_graph_reference_parser__WEBPACK_IMPORTED_MODULE_2__.MacroGraphReferenceParser();
                node.macroGraphReference = parser.parse(value);
                node.title = (0,_utils_text_utils__WEBPACK_IMPORTED_MODULE_4__.insertSpacesBetweenCapitalizedWords)(node.macroGraphReference.macroFuncName);
            },
        });
    }
    parse(data) {
        this.parseProperties(data);
        const macroNode = data.node;
        const icon = MacroInstanceNodeParser.getIconForMacro(macroNode.macroGraphReference.macroFuncName);
        data.node.backgroundColor = MacroInstanceNodeParser._DEFAULT_BACKGROUND_COLOR;
        return new _controls_nodes_headed_node_control__WEBPACK_IMPORTED_MODULE_0__.HeadedNodeControl(data.node, icon);
    }
    static getIconForMacro(macroFuncName) {
        switch (macroFuncName) {
            case 'ForLoop': return _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_1__.IconLibrary.LOOP;
            case 'ForLoopWithBreak': return _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_1__.IconLibrary.LOOP;
            case 'WhileLoop': return _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_1__.IconLibrary.LOOP;
            case 'Gate': return _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_1__.IconLibrary.GATE;
            case 'FlipFlop': return _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_1__.IconLibrary.FLIPFLOP;
            case 'Do': return _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_1__.IconLibrary.DO_N;
            case 'DoOnce': return _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_1__.IconLibrary.DO_ONCE;
            case 'IsValid': return _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_1__.IconLibrary.IS_VALID;
            default: return _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_1__.IconLibrary.MACRO;
        }
    }
}
MacroInstanceNodeParser._DEFAULT_BACKGROUND_COLOR = '150, 150, 150';


/***/ }),

/***/ "./src/parser/node-parsers/make-array-node.parser.ts":
/*!***********************************************************!*\
  !*** ./src/parser/node-parsers/make-array-node.parser.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MakeArrayNodeParser": () => (/* binding */ MakeArrayNodeParser)
/* harmony export */ });
/* harmony import */ var _node_parser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node.parser */ "./src/parser/node.parser.ts");
/* harmony import */ var _controls_nodes_headed_node_control__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../controls/nodes/headed-node-control */ "./src/controls/nodes/headed-node-control.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../constants */ "./src/constants.ts");
/* harmony import */ var _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../controls/utils/icon-library */ "./src/controls/utils/icon-library.ts");




class MakeArrayNodeParser extends _node_parser__WEBPACK_IMPORTED_MODULE_0__.NodeParser {
    parse(data) {
        data.node.title = 'Make Array';
        data.node.backgroundColor = _constants__WEBPACK_IMPORTED_MODULE_2__.Constants.DEFAULT_FUNC_PURE_BACKGROUND_COLOR;
        return new _controls_nodes_headed_node_control__WEBPACK_IMPORTED_MODULE_1__.HeadedNodeControl(data.node, _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_3__.IconLibrary.MAKE_ARRAY);
    }
}


/***/ }),

/***/ "./src/parser/node-parsers/math-function-node.parser.ts":
/*!**************************************************************!*\
  !*** ./src/parser/node-parsers/math-function-node.parser.ts ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MathFunctionNodeParser": () => (/* binding */ MathFunctionNodeParser)
/* harmony export */ });
/* harmony import */ var _controls_nodes_headed_node_control__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../controls/nodes/headed-node-control */ "./src/controls/nodes/headed-node-control.ts");
/* harmony import */ var _controls_nodes_headless_node_control__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../controls/nodes/headless-node-control */ "./src/controls/nodes/headless-node-control.ts");
/* harmony import */ var _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../controls/utils/icon-library */ "./src/controls/utils/icon-library.ts");
/* harmony import */ var _blueprint_parser_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../blueprint-parser-utils */ "./src/parser/blueprint-parser-utils.ts");
/* harmony import */ var _node_parser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../node.parser */ "./src/parser/node.parser.ts");





class MathFunctionNodeParser extends _node_parser__WEBPACK_IMPORTED_MODULE_4__.NodeParser {
    parse(data) {
        const node = data.node;
        const mathFunc = MathFunctionNodeParser.MATH_FUNCTIONS.find(f => node.functionReference.memberName.startsWith(f.name));
        node.subTitles = [];
        node.isPrimitiveNode = !!mathFunc;
        if (node.isPrimitiveNode) {
            node.title = mathFunc.displayName;
            _blueprint_parser_utils__WEBPACK_IMPORTED_MODULE_3__.BlueprintParserUtils.hidePinNames(node.customProperties);
            return new _controls_nodes_headless_node_control__WEBPACK_IMPORTED_MODULE_1__.HeadlessNodeControl(node);
        }
        return new _controls_nodes_headed_node_control__WEBPACK_IMPORTED_MODULE_0__.HeadedNodeControl(node, this.getIconForHeadedNode(node));
    }
    getIconForHeadedNode(node) {
        if (node.functionReference.memberName.startsWith("Make")) {
            return _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_2__.IconLibrary.MAKE_STRUCT;
        }
        if (node.functionReference.memberName.startsWith("Break")) {
            return _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_2__.IconLibrary.BREAK_STRUCT;
        }
        return _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_2__.IconLibrary.FUNCTION;
    }
}
MathFunctionNodeParser.MATH_FUNCTIONS = [
    { name: 'Multiply', displayName: '×', },
    { name: 'Divide', displayName: '÷', },
    { name: 'Add', displayName: '+', },
    { name: 'Subtract', displayName: '-', },
    { name: 'Percent', displayName: '%', },
    { name: 'FMax', displayName: 'MAX', },
    { name: 'Max', displayName: 'MAX', },
    { name: 'FMin', displayName: 'MIN', },
    { name: 'Min', displayName: 'MIN', },
    { name: 'Dot', displayName: '⋅', },
    { name: 'LessEqual', displayName: '<=', },
    { name: 'Less', displayName: '<', },
    { name: 'GreaterEqual', displayName: '>=', },
    { name: 'Greater', displayName: '>', },
    { name: 'Abs', displayName: 'ABS', },
    { name: 'Exp', displayName: 'e', },
    { name: 'Sqrt', displayName: 'SQRT', },
    { name: 'Square', displayName: '^2', },
    { name: 'NotEqual', displayName: '!=', },
    { name: 'Not', displayName: 'NOT', },
    { name: 'EqualEqual', displayName: '==', },
    { name: 'BooleanOR', displayName: 'OR', },
    { name: 'BooleanXOR', displayName: 'XOR', },
    { name: 'BooleanNOR', displayName: 'NOR', },
    { name: 'BooleanAND', displayName: 'AND', },
    { name: 'BooleanNAND', displayName: 'NAND', },
];


/***/ }),

/***/ "./src/parser/node-parsers/select-node.parser.ts":
/*!*******************************************************!*\
  !*** ./src/parser/node-parsers/select-node.parser.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SelectNodeParser": () => (/* binding */ SelectNodeParser)
/* harmony export */ });
/* harmony import */ var _controls_nodes_headed_node_control__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../controls/nodes/headed-node-control */ "./src/controls/nodes/headed-node-control.ts");
/* harmony import */ var _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../controls/utils/icon-library */ "./src/controls/utils/icon-library.ts");
/* harmony import */ var _data_pin_pin_property__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../data/pin/pin-property */ "./src/data/pin/pin-property.ts");
/* harmony import */ var _node_parser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../node.parser */ "./src/parser/node.parser.ts");




class SelectNodeParser extends _node_parser__WEBPACK_IMPORTED_MODULE_3__.NodeParser {
    constructor() {
        super({
            "IndexPinType": (node, value) => {
                value = value.replace(/[()]/g, '');
                let properties = value.split(',');
                let category, subCategory;
                for (let property of properties) {
                    let keyValue = property.split('=');
                    if (keyValue[0] == "PinCategory") {
                        category = keyValue[1].replace('"', '');
                    }
                    if (keyValue[0] == "PinSubCategory") {
                        subCategory = keyValue[1].replace('"', '');
                    }
                }
                node.indexPinType = { category: category, subCategory: subCategory };
            },
        });
    }
    parse(data) {
        this.parseProperties(data);
        data.node.title = "Select";
        SelectNodeParser.changePinsToReference(data);
        return new _controls_nodes_headed_node_control__WEBPACK_IMPORTED_MODULE_0__.HeadedNodeControl(data.node, _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_1__.IconLibrary.SELECT);
    }
    static changePinsToReference(data) {
        // The copied blueprint pins have not set the bIsReference flag to true.
        // The Select node always passes references therefore we have to set them manually
        for (let property of data.node.customProperties) {
            if (property instanceof _data_pin_pin_property__WEBPACK_IMPORTED_MODULE_2__.PinProperty) {
                if (property.name.toLowerCase() !== "index") {
                    property.isReference = true;
                }
            }
        }
    }
}


/***/ }),

/***/ "./src/parser/node-parsers/spawn-actor-node.parser.ts":
/*!************************************************************!*\
  !*** ./src/parser/node-parsers/spawn-actor-node.parser.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SpawnActorNodeParser": () => (/* binding */ SpawnActorNodeParser)
/* harmony export */ });
/* harmony import */ var _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../controls/utils/icon-library */ "./src/controls/utils/icon-library.ts");
/* harmony import */ var _node_parser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node.parser */ "./src/parser/node.parser.ts");
/* harmony import */ var _controls_nodes_foldable_headed_node_control__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../controls/nodes/foldable-headed-node.control */ "./src/controls/nodes/foldable-headed-node.control.ts");
/* harmony import */ var _utils_text_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/text-utils */ "./src/utils/text-utils.ts");
/* harmony import */ var _blueprint_parser_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../blueprint-parser-utils */ "./src/parser/blueprint-parser-utils.ts");





class SpawnActorNodeParser extends _node_parser__WEBPACK_IMPORTED_MODULE_1__.NodeParser {
    parse(data) {
        const className = _blueprint_parser_utils__WEBPACK_IMPORTED_MODULE_4__.BlueprintParserUtils.getFirstClassNameFromPinProperties(data.node.customProperties) || '';
        data.node.title = `Spawn Actor ${(0,_utils_text_utils__WEBPACK_IMPORTED_MODULE_3__.prettifyText)(className)}`;
        return new _controls_nodes_foldable_headed_node_control__WEBPACK_IMPORTED_MODULE_2__.FoldableHeadedNodeControl(data.node, _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_0__.IconLibrary.SPAWN_ACTOR);
    }
}


/***/ }),

/***/ "./src/parser/node-parsers/string-function-node.parser.ts":
/*!****************************************************************!*\
  !*** ./src/parser/node-parsers/string-function-node.parser.ts ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StringFunctionNodeParser": () => (/* binding */ StringFunctionNodeParser)
/* harmony export */ });
/* harmony import */ var _controls_nodes_headed_node_control__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../controls/nodes/headed-node-control */ "./src/controls/nodes/headed-node-control.ts");
/* harmony import */ var _controls_nodes_headless_node_control__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../controls/nodes/headless-node-control */ "./src/controls/nodes/headless-node-control.ts");
/* harmony import */ var _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../controls/utils/icon-library */ "./src/controls/utils/icon-library.ts");
/* harmony import */ var _blueprint_parser_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../blueprint-parser-utils */ "./src/parser/blueprint-parser-utils.ts");
/* harmony import */ var _node_parser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../node.parser */ "./src/parser/node.parser.ts");





class StringFunctionNodeParser extends _node_parser__WEBPACK_IMPORTED_MODULE_4__.NodeParser {
    parse(data) {
        const node = data.node;
        const func = StringFunctionNodeParser.STR_FUNCTIONS.find(f => node.functionReference.memberName.startsWith(f.name));
        if (func) {
            node.title = func.displayName;
        }
        node.subTitles = [];
        if (func?.isPrimitive === true) {
            _blueprint_parser_utils__WEBPACK_IMPORTED_MODULE_3__.BlueprintParserUtils.hidePinNames(node.customProperties);
            return new _controls_nodes_headless_node_control__WEBPACK_IMPORTED_MODULE_1__.HeadlessNodeControl(node);
        }
        return new _controls_nodes_headed_node_control__WEBPACK_IMPORTED_MODULE_0__.HeadedNodeControl(node, _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_2__.IconLibrary.FUNCTION);
    }
}
StringFunctionNodeParser.STR_FUNCTIONS = [
    { name: 'Concat_StrStr', displayName: 'Append', },
    { name: 'Conv_', displayName: '·', isPrimitive: true },
];


/***/ }),

/***/ "./src/parser/node-parsers/struct-node.parser.ts":
/*!*******************************************************!*\
  !*** ./src/parser/node-parsers/struct-node.parser.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StructNodeParser": () => (/* binding */ StructNodeParser)
/* harmony export */ });
/* harmony import */ var _controls_nodes_headed_node_control__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../controls/nodes/headed-node-control */ "./src/controls/nodes/headed-node-control.ts");
/* harmony import */ var _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../controls/utils/icon-library */ "./src/controls/utils/icon-library.ts");
/* harmony import */ var _node_parser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../node.parser */ "./src/parser/node.parser.ts");
/* harmony import */ var _node_data_reference_parser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../node-data-reference.parser */ "./src/parser/node-data-reference.parser.ts");
/* harmony import */ var _data_classes_unreal_node_class__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../data/classes/unreal-node-class */ "./src/data/classes/unreal-node-class.ts");





class StructNodeParser extends _node_parser__WEBPACK_IMPORTED_MODULE_2__.NodeParser {
    constructor() {
        super({
            "StructType": (node, value) => {
                node.structType = _node_data_reference_parser__WEBPACK_IMPORTED_MODULE_3__.NodeDataReferenceParser.parseClassReference(value);
            },
        });
    }
    parse(data) {
        this.parseProperties(data);
        data.node.backgroundColor = StructNodeParser._DEFAULT_BACKGROUND_COLOR;
        const structNode = data.node;
        let title = "";
        let icon = _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_1__.IconLibrary.PILL;
        console.log(data.node.class);
        switch (data.node.class) {
            case _data_classes_unreal_node_class__WEBPACK_IMPORTED_MODULE_4__.UnrealNodeClass.SET_FIELDS_IN_STRUCT:
                title = "Set members in ";
                break;
            case _data_classes_unreal_node_class__WEBPACK_IMPORTED_MODULE_4__.UnrealNodeClass.BREAK_STRUCT:
                title = "Break ";
                icon = _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_1__.IconLibrary.BREAK_STRUCT;
                break;
            case _data_classes_unreal_node_class__WEBPACK_IMPORTED_MODULE_4__.UnrealNodeClass.MAKE_STRUCT:
                title = "Make ";
                icon = _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_1__.IconLibrary.MAKE_STRUCT;
                break;
        }
        structNode.title = title + structNode.structType.className;
        return new _controls_nodes_headed_node_control__WEBPACK_IMPORTED_MODULE_0__.HeadedNodeControl(data.node, icon);
    }
}
StructNodeParser._DEFAULT_BACKGROUND_COLOR = '19, 42, 79';


/***/ }),

/***/ "./src/parser/node-parsers/switch-enum-node.parser.ts":
/*!************************************************************!*\
  !*** ./src/parser/node-parsers/switch-enum-node.parser.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SwitchEnumNodeParser": () => (/* binding */ SwitchEnumNodeParser)
/* harmony export */ });
/* harmony import */ var _controls_nodes_foldable_headed_node_control__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../controls/nodes/foldable-headed-node.control */ "./src/controls/nodes/foldable-headed-node.control.ts");
/* harmony import */ var _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../controls/utils/icon-library */ "./src/controls/utils/icon-library.ts");
/* harmony import */ var _blueprint_parser_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../blueprint-parser-utils */ "./src/parser/blueprint-parser-utils.ts");
/* harmony import */ var _node_parser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../node.parser */ "./src/parser/node.parser.ts");




class SwitchEnumNodeParser extends _node_parser__WEBPACK_IMPORTED_MODULE_3__.NodeParser {
    constructor() {
        super({
            "Enum": (node, value) => { node.enum = _blueprint_parser_utils__WEBPACK_IMPORTED_MODULE_2__.BlueprintParserUtils.parseString(value); },
            "EnumEntries": (node, value) => {
                if (!node.enumEntries)
                    node.enumEntries = [];
                node.enumEntries.push(_blueprint_parser_utils__WEBPACK_IMPORTED_MODULE_2__.BlueprintParserUtils.parseString(value));
            }
        });
    }
    parse(data) {
        this.parseProperties(data);
        let switchNode = data.node;
        switchNode.title = "Switch on " + _blueprint_parser_utils__WEBPACK_IMPORTED_MODULE_2__.BlueprintParserUtils.getClassFriendlyName(switchNode.enum);
        switchNode.backgroundColor = "162, 161, 35";
        return new _controls_nodes_foldable_headed_node_control__WEBPACK_IMPORTED_MODULE_0__.FoldableHeadedNodeControl(data.node, _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_1__.IconLibrary.SWITCH);
    }
}


/***/ }),

/***/ "./src/parser/node-parsers/timeline-node.parser.ts":
/*!*********************************************************!*\
  !*** ./src/parser/node-parsers/timeline-node.parser.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TimelineNodeParser": () => (/* binding */ TimelineNodeParser)
/* harmony export */ });
/* harmony import */ var _controls_nodes_headed_node_control__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../controls/nodes/headed-node-control */ "./src/controls/nodes/headed-node-control.ts");
/* harmony import */ var _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../controls/utils/icon-library */ "./src/controls/utils/icon-library.ts");
/* harmony import */ var _blueprint_parser_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../blueprint-parser-utils */ "./src/parser/blueprint-parser-utils.ts");
/* harmony import */ var _node_parser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../node.parser */ "./src/parser/node.parser.ts");




class TimelineNodeParser extends _node_parser__WEBPACK_IMPORTED_MODULE_3__.NodeParser {
    constructor() {
        super({
            "TimelineName": (node, value) => { node.title = _blueprint_parser_utils__WEBPACK_IMPORTED_MODULE_2__.BlueprintParserUtils.parseString(value); },
        });
    }
    parse(data) {
        this.parseProperties(data);
        data.node.backgroundColor = TimelineNodeParser.DEFAULT_BACKGROUND_COLOR;
        return new _controls_nodes_headed_node_control__WEBPACK_IMPORTED_MODULE_0__.HeadedNodeControl(data.node, _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_1__.IconLibrary.TIMER);
    }
}
TimelineNodeParser.DEFAULT_BACKGROUND_COLOR = '138, 108, 19';


/***/ }),

/***/ "./src/parser/node-parsers/tunnel-node.parser.ts":
/*!*******************************************************!*\
  !*** ./src/parser/node-parsers/tunnel-node.parser.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TunnelNodeParser": () => (/* binding */ TunnelNodeParser)
/* harmony export */ });
/* harmony import */ var _controls_nodes_headed_node_control__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../controls/nodes/headed-node-control */ "./src/controls/nodes/headed-node-control.ts");
/* harmony import */ var _node_parser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node.parser */ "./src/parser/node.parser.ts");
/* harmony import */ var _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../controls/utils/icon-library */ "./src/controls/utils/icon-library.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../constants */ "./src/constants.ts");




class TunnelNodeParser extends _node_parser__WEBPACK_IMPORTED_MODULE_1__.NodeParser {
    constructor() {
        super({
            "bCanHaveInputs": (node, value) => { if (value.toLowerCase() === "true") {
                node.title = 'Outputs';
            } },
            "bCanHaveOutputs": (node, value) => { if (value.toLowerCase() === "true") {
                node.title = 'Inputs';
            } },
        });
    }
    parse(data) {
        this.parseProperties(data);
        data.node.backgroundColor = _constants__WEBPACK_IMPORTED_MODULE_3__.Constants.DEFAULT_FUNC_BACKGROUND_COLOR;
        return new _controls_nodes_headed_node_control__WEBPACK_IMPORTED_MODULE_0__.HeadedNodeControl(data.node, _controls_utils_icon_library__WEBPACK_IMPORTED_MODULE_2__.IconLibrary.CONSTRUCT);
    }
}


/***/ }),

/***/ "./src/parser/node-parsers/variable-node.parser.ts":
/*!*********************************************************!*\
  !*** ./src/parser/node-parsers/variable-node.parser.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "VariableNodeParser": () => (/* binding */ VariableNodeParser)
/* harmony export */ });
/* harmony import */ var _controls_nodes_headless_node_control__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../controls/nodes/headless-node-control */ "./src/controls/nodes/headless-node-control.ts");
/* harmony import */ var _data_nodes_variable_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../data/nodes/variable.node */ "./src/data/nodes/variable.node.ts");
/* harmony import */ var _node_data_reference_parser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../node-data-reference.parser */ "./src/parser/node-data-reference.parser.ts");
/* harmony import */ var _node_parser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../node.parser */ "./src/parser/node.parser.ts");
/* harmony import */ var _data_pin_pin_property__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../data/pin/pin-property */ "./src/data/pin/pin-property.ts");
/* harmony import */ var _data_pin_pin_direction__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../data/pin/pin-direction */ "./src/data/pin/pin-direction.ts");
/* harmony import */ var _data_classes_unreal_node_class__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../data/classes/unreal-node-class */ "./src/data/classes/unreal-node-class.ts");
/* harmony import */ var _controls_nodes_setter_node_control__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../controls/nodes/setter-node-control */ "./src/controls/nodes/setter-node-control.ts");








class VariableNodeParser extends _node_parser__WEBPACK_IMPORTED_MODULE_3__.NodeParser {
    constructor() {
        super({
            "VariableReference": (node, value) => {
                const parser = new _node_data_reference_parser__WEBPACK_IMPORTED_MODULE_2__.NodeDataReferenceParser();
                node.variableReference = parser.parse(value);
            },
        });
    }
    parse(data) {
        this.parseProperties(data);
        const variableNode = data.node;
        const isSetter = data.node.class === _data_classes_unreal_node_class__WEBPACK_IMPORTED_MODULE_6__.UnrealNodeClass.VARIABLE_SET;
        variableNode.variableType = _data_nodes_variable_node__WEBPACK_IMPORTED_MODULE_1__.VariableType.Getter;
        if (isSetter) {
            variableNode.variableType = _data_nodes_variable_node__WEBPACK_IMPORTED_MODULE_1__.VariableType.Setter;
            data.node.title = "SET";
            this.hideOutputPinNames(variableNode);
            return new _controls_nodes_setter_node_control__WEBPACK_IMPORTED_MODULE_7__.SetterNodeControl(data.node);
        }
        else {
            data.node.title = undefined;
        }
        return new _controls_nodes_headless_node_control__WEBPACK_IMPORTED_MODULE_0__.HeadlessNodeControl(data.node);
    }
    hideOutputPinNames(node) {
        for (let i = node.customProperties.length - 1; i >= 0; i--) {
            if (node.customProperties[i] instanceof _data_pin_pin_property__WEBPACK_IMPORTED_MODULE_4__.PinProperty === false)
                continue;
            const pinProperty = node.customProperties[i];
            if (pinProperty.direction === _data_pin_pin_direction__WEBPACK_IMPORTED_MODULE_5__.PinDirection.EGPD_Output) {
                pinProperty.hideName = true;
            }
        }
    }
}


/***/ }),

/***/ "./src/parser/node.parser.ts":
/*!***********************************!*\
  !*** ./src/parser/node.parser.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "NodeParser": () => (/* binding */ NodeParser)
/* harmony export */ });
class NodeParser {
    constructor(properties) {
        this._propertyParsers = {};
        this._propertyParsers = properties;
    }
    parse(data) {
        throw new Error("Not implemented! A derived class does not override the 'parse' function of the abstract class 'NodeParser'.");
    }
    parseProperties(data) {
        for (let i = data.unparsedLines.length - 1; i >= 0; i--) {
            const line = data.unparsedLines[i];
            if (this.parseProperty(data.node, line)) {
                data.unparsedLines.splice(i, 1);
            }
        }
    }
    parseProperty(node, line) {
        const dataset = line.split('=');
        let key = dataset.shift();
        const value = dataset.join('=');
        // Remove array index suffix of a property like the EnumEntries(0) in K2Node_SwitchEnum
        key = key.replace(/\((.+)\)/g, "");
        const propertyParser = this._propertyParsers[key];
        if (!propertyParser)
            return false;
        propertyParser(node, value);
        return true;
    }
}


/***/ }),

/***/ "./src/parser/parsing-node-data.ts":
/*!*****************************************!*\
  !*** ./src/parser/parsing-node-data.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ParsingNodeData": () => (/* binding */ ParsingNodeData)
/* harmony export */ });
class ParsingNodeData {
    constructor(lines) {
        this._lines = Array.from(lines);
        this._unparsedLines = lines.slice(1, lines.length - 1);
    }
    get node() {
        return this._node;
    }
    set node(value) {
        this._node = value;
    }
    get lines() {
        return this._lines;
    }
    get unparsedLines() {
        return this._unparsedLines;
    }
}


/***/ }),

/***/ "./src/parser/pin-property.parser.ts":
/*!*******************************************!*\
  !*** ./src/parser/pin-property.parser.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PinPropertyParser": () => (/* binding */ PinPropertyParser)
/* harmony export */ });
/* harmony import */ var _controls_utils_color_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../controls/utils/color-utils */ "./src/controls/utils/color-utils.ts");
/* harmony import */ var _controls_utils_color_box_control__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../controls/utils/color-box.control */ "./src/controls/utils/color-box.control.ts");
/* harmony import */ var _data_color__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data/color */ "./src/data/color.ts");
/* harmony import */ var _data_pin_pin_category__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../data/pin/pin-category */ "./src/data/pin/pin-category.ts");
/* harmony import */ var _data_pin_pin_direction__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../data/pin/pin-direction */ "./src/data/pin/pin-direction.ts");
/* harmony import */ var _data_pin_pin_link__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../data/pin/pin-link */ "./src/data/pin/pin-link.ts");
/* harmony import */ var _data_pin_pin_property__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../data/pin/pin-property */ "./src/data/pin/pin-property.ts");
/* harmony import */ var _utils_text_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/text-utils */ "./src/utils/text-utils.ts");
/* harmony import */ var _blueprint_parser_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./blueprint-parser-utils */ "./src/parser/blueprint-parser-utils.ts");
/* harmony import */ var _controls_struct_box_control__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../controls/struct-box.control */ "./src/controls/struct-box.control.ts");
/* harmony import */ var _controls_text_box_control__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../controls/text-box.control */ "./src/controls/text-box.control.ts");
/* harmony import */ var _controls_check_box_control__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../controls/check-box.control */ "./src/controls/check-box.control.ts");
var _a;












class PinPropertyParser {
    parse(propertyData, nodeName) {
        this._property = new _data_pin_pin_property__WEBPACK_IMPORTED_MODULE_6__.PinProperty(nodeName);
        // ([a-zA-Z0-9_.]+)                     Capture key (similar to \w, but also allows dots)
        // \s*=\s*                              Equal sign between optional white spaces
        // (("[^"]*")|(\([^\)]*\))|([^,]*))     Captures a value implemented in one of 4 types
        //      ("[^"]*")                         Type 1: capture quoted values            e.g.: PinName="self"
        //      (\([^\)]*\))                      Type 2: capture values set in brackets   e.g.: LinkedTo=(K2Node_CallFunction_0 6A3D6AD94697B8938F5061A6BA9D5FF2,)
        //      (\w*\(\w*(?:[^\(]*\([^\)]*\))*\)) Type 3: capture multilevel loctext       e.g.: PinFriendlyName=LOCGEN_FORMAT_NAMED(NSLOCTEXT("KismetSchema", "SplitPinFriendlyNameFormat", "{PinDisplayName} {ProtoPinDisplayName}"), "PinDisplayName", NSLOCTEXT("", "E767B2BA4B1D5DFDD5E21E953300AB1E", "Settings"), "ProtoPinDisplayName", NSLOCTEXT("", "182F932842DA4BEA8624D89F6CD70FDA", "Attenuation Settings"))
        //      (\w*\([^\)]*\))                   Type 4: capture method values            e.g.: PinFriendlyName=NSLOCTEXT("K2Node", "Target", "Target")
        //      ([^,]*)                           Type 5: capture pure values              e.g.: PinType.bIsConst=False
        const matches = propertyData.matchAll(/([a-zA-Z0-9_.]+)\s*=\s*(("[^"]*")|(\([^)]*\))|(\w*\(\w*(?:[^(]*\([^)]*(?:"[^"]*")\))*\))|(\w*\([^)]*\([^)]*\)[^)]*\))|(\w*\([^)]*\))|([^,]*))/g);
        for (const [fullMatch, key, value] of matches) {
            if (!fullMatch || !key) {
                console.warn(`Skipped property attribute because invalid key: '${fullMatch}'`);
                continue;
            }
            const parse = PinPropertyParser._ATTRIBUTE_PARSERS[key];
            if (!parse) {
                console.info(`Didn't parse property attribute '${key}'. There isn't a matching parser.`);
                continue;
            }
            parse(this._property, value);
        }
        PinPropertyParser.setDefaultValueIfUndefined(this._property);
        return this._property;
    }
    static parseLinkedTo(value) {
        let links = [];
        value = value.substr(1, value.length - 1);
        let data = value.split(',');
        for (let i = 0; i < data.length; ++i) {
            let dataset = data[i].split(' ');
            if (dataset.length == 2) {
                let link = new _data_pin_pin_link__WEBPACK_IMPORTED_MODULE_5__.PinLink();
                link.nodeName = dataset[0];
                link.pinID = dataset[1];
                links.push(link);
            }
        }
        return links;
    }
    static parseSubCategoryObject(value) {
        let className = value;
        let type = value.substring(0, value.indexOf("'"));
        let matches = value.matchAll(/'"(.*)"'/g);
        if (matches) {
            let match = matches.next();
            if (match && match.value) {
                className = match.value[1];
            }
        }
        return { type: type, class: className };
    }
    static parsePinFriendlyName(value) {
        let name = "";
        if (value.startsWith("NSLOCTEXT")) {
            let prefixLength = 'NSLOCTEXT('.length - 1;
            value = value.substr(prefixLength, value.length - prefixLength - 1);
            let params = value.split(',');
            name = params[params.length - 1].replace(/"/g, '');
            return name;
        }
        if (value.startsWith("LOCGEN_FORMAT_NAMED")) {
            // The following format is displayed all on one line
            //  LOCGEN_FORMAT_NAMED(
            //      NSLOCTEXT(
            //          "KismetSchema",
            //          "SplitPinFriendlyNameFormat",
            //          "{PinDisplayName} {ProtoPinDisplayName}"
            //      ),
            //      "PinDisplayName",
            //      NSLOCTEXT(
            //          "",
            //          "5808C87D488AE450C56BB49263E71071",
            //          "Settings"
            //      ),
            //      "ProtoPinDisplayName",
            //      NSLOCTEXT(
            //          "",
            //          "6FA6CBF1411267BBB10EB39B727DF7C7",
            //          "Component To Attach To"
            //      )
            //  )
            let prefixLength = 'LOCGEN_FORMAT_NAMED('.length;
            value = value.substr(prefixLength, value.length - prefixLength - 1);
            let format = "";
            let args = {};
            let matches = value.matchAll(/(\w*\((?:"[^"]*"[, ]*)+\))|("[^"]*")/g);
            let lastValue = undefined;
            for (const [fullMatch, key, value] of matches) {
                console.log(fullMatch);
                let prop = fullMatch;
                prop = prop.trim();
                if (prop.startsWith("NSLOCTEXT")) {
                    prop = prop.substring("NSLOCTEXT(".length, prop.length - 1);
                    let data = prop.split(',');
                    let key = data[0].trim().replace(/"/g, '');
                    let id = data[1].trim().replace(/"/g, '');
                    ;
                    let value = data[2].trim().replace(/"/g, '');
                    ;
                    if (key === "KismetSchema") {
                        format = value;
                    }
                    if (key === "") {
                        key = lastValue;
                        args[key] = value;
                    }
                }
                let value = prop.replace(/"/g, '');
                lastValue = value;
            }
            let friendlyName = format;
            for (let key in args) {
                let value = args[key];
                friendlyName = friendlyName.replace("{" + key + "}", value);
            }
            return friendlyName;
        }
        name = value.replace(/"/g, '');
        return name;
    }
    static parsePinCategory(value) {
        value = _blueprint_parser_utils__WEBPACK_IMPORTED_MODULE_8__.BlueprintParserUtils.parseString(value);
        return value.toLowerCase();
    }
    static parseDirection(value) {
        value = value.replace(/"/g, '');
        switch (value) {
            case "EGPD_Output": return _data_pin_pin_direction__WEBPACK_IMPORTED_MODULE_4__.PinDirection.EGPD_Output;
            case "EGPD_Input":
            default:
                return _data_pin_pin_direction__WEBPACK_IMPORTED_MODULE_4__.PinDirection.EGPD_Input;
        }
    }
    static parseDefaultValue(p, value) {
        if (!value) {
            return;
        }
        switch (p.category) {
            case _data_pin_pin_category__WEBPACK_IMPORTED_MODULE_3__.PinCategory.float:
                return { control: _controls_text_box_control__WEBPACK_IMPORTED_MODULE_10__.TextBoxControl, data: (0,_utils_text_utils__WEBPACK_IMPORTED_MODULE_7__.removeInsignificantTrailingZeros)(_blueprint_parser_utils__WEBPACK_IMPORTED_MODULE_8__.BlueprintParserUtils.parseString(value)) };
            case _data_pin_pin_category__WEBPACK_IMPORTED_MODULE_3__.PinCategory.bool:
                return { control: _controls_check_box_control__WEBPACK_IMPORTED_MODULE_11__.CheckBoxControl, data: (_blueprint_parser_utils__WEBPACK_IMPORTED_MODULE_8__.BlueprintParserUtils.parseString(value).toLowerCase() === "true") };
            case _data_pin_pin_category__WEBPACK_IMPORTED_MODULE_3__.PinCategory.struct:
                return this.parseDefaultValueStruct(p.subCategoryObject.class, value);
            case _data_pin_pin_category__WEBPACK_IMPORTED_MODULE_3__.PinCategory.byte:
                if (p.subCategoryObject.type === "Enum") {
                    return { control: _controls_text_box_control__WEBPACK_IMPORTED_MODULE_10__.TextBoxControl, data: _blueprint_parser_utils__WEBPACK_IMPORTED_MODULE_8__.BlueprintParserUtils.parseEnumValue(p.subCategoryObject.class, value) };
                }
                else {
                    return { control: _controls_text_box_control__WEBPACK_IMPORTED_MODULE_10__.TextBoxControl, data: _blueprint_parser_utils__WEBPACK_IMPORTED_MODULE_8__.BlueprintParserUtils.parseString(value) };
                }
            default:
                return { control: _controls_text_box_control__WEBPACK_IMPORTED_MODULE_10__.TextBoxControl, data: _blueprint_parser_utils__WEBPACK_IMPORTED_MODULE_8__.BlueprintParserUtils.parseString(value) };
        }
    }
    static parseEnumValue() {
    }
    static parseDefaultValueStruct(subCategoryObject, value) {
        switch (subCategoryObject) {
            case _controls_utils_color_utils__WEBPACK_IMPORTED_MODULE_0__.StructClass.VECTOR:
            case _controls_utils_color_utils__WEBPACK_IMPORTED_MODULE_0__.StructClass.ROTATOR:
                return { control: _controls_struct_box_control__WEBPACK_IMPORTED_MODULE_9__.StructBoxControl, data: this.parseDefaultValueVector(value) };
            case _controls_utils_color_utils__WEBPACK_IMPORTED_MODULE_0__.StructClass.LINEAR_COLOR:
                const cParams = this.parseDefaultValueStructCommon(value).map(p => Number(p.value));
                const color = new _data_color__WEBPACK_IMPORTED_MODULE_2__.Color((cParams[0] || 0) * 255, (cParams[1] || 0) * 255, (cParams[2] || 0) * 255, cParams[3]);
                color.applyGamma();
                return { control: _controls_utils_color_box_control__WEBPACK_IMPORTED_MODULE_1__.ColorBoxControl, data: color };
            default:
                return { control: _controls_struct_box_control__WEBPACK_IMPORTED_MODULE_9__.StructBoxControl, data: this.parseDefaultValueStructCommon(value) };
        }
    }
    static parseDefaultValueVector(value) {
        const LABELS = ['X', 'Y', 'Z'];
        let defaultValues = [];
        value.split(',').forEach(axis => {
            defaultValues.push((0,_utils_text_utils__WEBPACK_IMPORTED_MODULE_7__.removeInsignificantTrailingZeros)(_blueprint_parser_utils__WEBPACK_IMPORTED_MODULE_8__.BlueprintParserUtils.parseString(axis)));
        });
        for (let i = 0; i < defaultValues.length; i++) {
            defaultValues[i] = {
                key: LABELS[i],
                value: defaultValues[i]
            };
        }
        return defaultValues;
    }
    static parseDefaultValueStructCommon(value) {
        let defaultValues = [];
        // Removes quotes
        value = _blueprint_parser_utils__WEBPACK_IMPORTED_MODULE_8__.BlueprintParserUtils.parseString(value);
        // Removes brackets
        value = value.trim().replace(/[()]/g, '');
        value.split(',').forEach(property => {
            const [key, value] = property.split('=');
            defaultValues.push({
                key,
                value: (0,_utils_text_utils__WEBPACK_IMPORTED_MODULE_7__.removeInsignificantTrailingZeros)(value)
            });
        });
        return defaultValues;
    }
    static parseDefaultValueText(value) {
        // This regex returns the content of the last string in quotes
        // INVTEXT("Hello")
        // NSLOCTEXT("[8C2B370E4196E0C88E4D18AC0E3BB4B4]", "08FBE3A046496681A158759F47A09610", "Hello")
        const matches = /(?<=")([^"]+)(?="\))/g.exec(value.trim());
        if (!matches) {
            return value;
        }
        return matches[0];
    }
    static setDefaultValueIfUndefined(p) {
        if (p.defaultValue != undefined) {
            return;
        }
        switch (p.category) {
            case _data_pin_pin_category__WEBPACK_IMPORTED_MODULE_3__.PinCategory.struct:
                switch (p.subCategoryObject.class) {
                    case _controls_utils_color_utils__WEBPACK_IMPORTED_MODULE_0__.StructClass.VECTOR2D:
                        p.defaultValue = [
                            { key: 'X', value: '0.0' },
                            { key: 'Y', value: '0.0' }
                        ];
                        p.defaultValueControlClass = _controls_struct_box_control__WEBPACK_IMPORTED_MODULE_9__.StructBoxControl;
                        break;
                }
                break;
        }
    }
}
_a = PinPropertyParser;
PinPropertyParser._ATTRIBUTE_PARSERS = {
    "PinId": (p, value) => { p.id = value; },
    "PinName": (p, value) => { p.name = (0,_utils_text_utils__WEBPACK_IMPORTED_MODULE_7__.prettifyText)(_blueprint_parser_utils__WEBPACK_IMPORTED_MODULE_8__.BlueprintParserUtils.parseString(value)); },
    "PinFriendlyName": (p, value) => { p.friendlyName = (0,_utils_text_utils__WEBPACK_IMPORTED_MODULE_7__.prettifyText)(PinPropertyParser.parsePinFriendlyName(value)); },
    "PinType.PinCategory": (p, value) => { p.category = PinPropertyParser.parsePinCategory(value); },
    "Direction": (p, value) => { p.direction = PinPropertyParser.parseDirection(value); },
    "PinToolTip": (p, value) => { p.toolTip = _blueprint_parser_utils__WEBPACK_IMPORTED_MODULE_8__.BlueprintParserUtils.parseString(value); },
    "PinType.PinSubCategory": (p, value) => { p.subCategory = _blueprint_parser_utils__WEBPACK_IMPORTED_MODULE_8__.BlueprintParserUtils.parseString(value); },
    "PinType.PinSubCategoryObject": (p, value) => { p.subCategoryObject = PinPropertyParser.parseSubCategoryObject(value); },
    "PinType.bIsReference": (p, value) => { p.isReference = value.toLowerCase() === "true"; },
    "PinType.bIsConst": (p, value) => { p.isConst = value.toLowerCase() === "true"; },
    "PinType.bIsWeakPointer": (p, value) => { p.isWeakPointer = value.toLowerCase() === "true"; },
    "PinType.bIsUObjectWrapper": (p, value) => { p.isUObjectWrapper = value.toLowerCase() === "true"; },
    "DefaultValue": (p, value) => {
        const res = _a.parseDefaultValue(p, value);
        p.defaultValue = res.data;
        p.defaultValueControlClass = res.control;
    },
    "DefaultObject": (p, value) => {
        const defaultObject = _blueprint_parser_utils__WEBPACK_IMPORTED_MODULE_8__.BlueprintParserUtils.parseString(value);
        const className = _blueprint_parser_utils__WEBPACK_IMPORTED_MODULE_8__.BlueprintParserUtils.getClassFriendlyName(defaultObject);
        if (!!className) {
            p.defaultValue = className;
            p.defaultValueControlClass = _controls_text_box_control__WEBPACK_IMPORTED_MODULE_10__.TextBoxControl;
        }
    },
    "DefaultTextValue": (p, value) => {
        p.defaultValue = _a.parseDefaultValueText(value);
        p.defaultValueControlClass = _controls_text_box_control__WEBPACK_IMPORTED_MODULE_10__.TextBoxControl;
    },
    "AutogeneratedDefaultValue": (p, value) => { p.autogeneratedDefaultValue = _blueprint_parser_utils__WEBPACK_IMPORTED_MODULE_8__.BlueprintParserUtils.parseString(value); },
    "LinkedTo": (p, value) => { p.linkedTo = PinPropertyParser.parseLinkedTo(value); },
    "bHidden": (p, value) => { p.hidden = (value.toLowerCase() === "true"); },
    "bDefaultValueIsIgnored": (p, value) => { p.defaultValueIsIgnored = (value.toLowerCase() === "true"); },
    "bDefaultValueIsReadOnly": (p, value) => { p.defaultValueIsReadOnly = (value.toLowerCase() === "true"); },
    "bAdvancedView": (p, value) => { p.advancedView = (value.toLowerCase() === "true"); },
    "bOrphanedPin": (p, value) => { p.orphanedPin = (value.toLowerCase() === "true"); },
    "bNotConnectable": (p, value) => { p.notConnectable = (value.toLowerCase() === "true"); },
    "PersistentGuid": (p, value) => { p.persistentGUID = _blueprint_parser_utils__WEBPACK_IMPORTED_MODULE_8__.BlueprintParserUtils.parseString(value); },
    "PinType.ContainerType": (p, value) => { p.containerType = value; },
    "PinType.PinValueType": (p, value) => {
        value = value.replace(/[\(\)]/g, '');
        value = value.split('=')[1];
        if (value !== undefined) {
            p.valueType = value.replace(/"/g, '');
        }
    },
    "PinType.PinSubCategoryMemberReference": (p, value) => {
        if (value && value != '()') {
            console.log(`Found interesting attribute 'PinType.PinSubCategoryMemberReference' for which a value other than '()' was set. PinType.PinSubCategoryMemberReference='${value}' [pin-name: ${p.name}]`);
        }
    },
};


/***/ }),

/***/ "./src/scene.ts":
/*!**********************!*\
  !*** ./src/scene.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Scene": () => (/* binding */ Scene)
/* harmony export */ });
/* harmony import */ var _camera__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./camera */ "./src/camera.ts");
/* harmony import */ var _controls_background__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./controls/background */ "./src/controls/background.ts");
/* harmony import */ var _controls_interfaces_drawable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./controls/interfaces/drawable */ "./src/controls/interfaces/drawable.ts");
/* harmony import */ var _controls_node_connection_control__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./controls/node-connection.control */ "./src/controls/node-connection.control.ts");
/* harmony import */ var _math_vector2__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./math/vector2 */ "./src/math/vector2.ts");
/* harmony import */ var _data_pin_pin_direction__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./data/pin/pin-direction */ "./src/data/pin/pin-direction.ts");
/* harmony import */ var _controls_partial_node_connection_control__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./controls/partial-node-connection.control */ "./src/controls/partial-node-connection.control.ts");
/* harmony import */ var _controls_pin_control__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./controls/pin.control */ "./src/controls/pin.control.ts");
/* harmony import */ var _controls_user_control__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./controls/user-control */ "./src/controls/user-control.ts");
/* harmony import */ var _controls_container__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./controls/container */ "./src/controls/container.ts");
/* harmony import */ var _controls_interactable_user_control__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./controls/interactable-user-control */ "./src/controls/interactable-user-control.ts");











class Scene {
    constructor(canvas, app) {
        this.app = app;
        this._canvas = canvas;
        this._camera = new _camera__WEBPACK_IMPORTED_MODULE_0__.Camera(this._canvas);
        this._nodes = new Array();
        this._controls = new Array();
        this._pins = new Array();
    }
    // TODO: Move this out
    get camera() {
        return this._camera;
    }
    get canvas() {
        return this._canvas;
    }
    get nodes() {
        return this._nodes || [];
    }
    get interactables() {
        return this._interactables || [];
    }
    collectInteractables() {
        let interactables = [];
        this._controls.forEach((control) => {
            if (control instanceof _controls_interactable_user_control__WEBPACK_IMPORTED_MODULE_10__.InteractableUserControl) {
                interactables.push(control);
            }
            if (control instanceof _controls_container__WEBPACK_IMPORTED_MODULE_9__.Container) {
                this.findInteractablesIn(interactables, control);
            }
        });
        this._interactables = interactables;
    }
    findInteractablesIn(interactables, container) {
        for (let child of container.getChildren()) {
            if (child instanceof _controls_interactable_user_control__WEBPACK_IMPORTED_MODULE_10__.InteractableUserControl) {
                interactables.push(child);
            }
            if (child instanceof _controls_container__WEBPACK_IMPORTED_MODULE_9__.Container) {
                this.findInteractablesIn(interactables, child);
            }
        }
    }
    updateLayout() {
        this._controls.forEach((control) => {
            if (control instanceof _controls_user_control__WEBPACK_IMPORTED_MODULE_8__.UserControl) {
                control.refreshLayout();
            }
        });
    }
    refresh() {
        this._canvas.clear();
        this._controls.sort((a, b) => {
            return a.ZIndex - b.ZIndex;
        });
        this._camera.prepareViewport();
        this._controls.forEach((control) => {
            if ((0,_controls_interfaces_drawable__WEBPACK_IMPORTED_MODULE_2__.isDrawableControl)(control)) {
                control.draw(this._canvas);
            }
        });
    }
    unload() {
        this._pins = new Array();
        this._nodes = new Array();
        this._controls = new Array();
    }
    load(dataNodes) {
        this.createBackground();
        this.createControlNodes(dataNodes);
        // Creates connection lines between pins
        this.createConnectionLines();
        this.initializeControls();
    }
    createBackground() {
        let background = new _controls_background__WEBPACK_IMPORTED_MODULE_1__.Background(this.camera);
        this._controls.push(background);
    }
    createControlNodes(controls) {
        for (const control of controls) {
            this._nodes.push(control);
            this._controls.push(control);
            this.collectPins(control);
        }
    }
    collectPins(control) {
        if (control instanceof _controls_container__WEBPACK_IMPORTED_MODULE_9__.Container) {
            for (let child of control.getChildren()) {
                if (child instanceof _controls_pin_control__WEBPACK_IMPORTED_MODULE_7__.PinControl) {
                    this._pins.push(child);
                }
                if (child instanceof _controls_container__WEBPACK_IMPORTED_MODULE_9__.Container) {
                    this.collectPins(child);
                }
            }
        }
    }
    createConnectionLines() {
        const connectedPins = [];
        const pins = this._pins;
        for (let i = pins.length - 1; i >= 0; --i) {
            let pin = pins[i];
            if (!pin.pinProperty.isLinked) {
                pins.splice(i, 1);
                continue;
            }
            if (pin.pinProperty.direction != _data_pin_pin_direction__WEBPACK_IMPORTED_MODULE_5__.PinDirection.EGPD_Output)
                continue;
            let wasConnected = false;
            for (let n = 0; n < pin.pinProperty.linkedTo.length; ++n) {
                let link = pin.pinProperty.linkedTo[n];
                let otherPin = pins.find(p => p.pinProperty.nodeName === link.nodeName && p.pinProperty.id === link.pinID);
                if (!otherPin)
                    continue;
                this._controls.push(new _controls_node_connection_control__WEBPACK_IMPORTED_MODULE_3__.NodeConnectionControl(pin, otherPin));
                connectedPins.push(pin.pinProperty.getUniqueName());
                connectedPins.push(otherPin.pinProperty.getUniqueName());
                wasConnected = true;
            }
            if (wasConnected)
                pins.splice(i, 1);
        }
        // Go through pins which are connected to a missing node
        for (let i = pins.length - 1; i >= 0; --i) {
            let pin = pins[i];
            if (connectedPins.indexOf(pin.pinProperty.getUniqueName()) >= 0)
                continue;
            if (pin.pinProperty.isLinked) {
                let partialConnection = new _controls_partial_node_connection_control__WEBPACK_IMPORTED_MODULE_6__.NodePartialConnectionControl(pin);
                this._controls.push(partialConnection);
            }
        }
    }
    initializeControls() {
        for (let control of this._controls) {
            this.initializeControl(control);
        }
    }
    initializeControl(control) {
        control.initControl(this.app);
        if (control instanceof _controls_container__WEBPACK_IMPORTED_MODULE_9__.Container) {
            for (let child of control.getChildren()) {
                this.initializeControl(child);
            }
        }
    }
    calculateCentroid() {
        let centroid = new _math_vector2__WEBPACK_IMPORTED_MODULE_4__.Vector2(0, 0);
        if (this.nodes.length == 0)
            return centroid;
        this.nodes.forEach(node => {
            centroid = new _math_vector2__WEBPACK_IMPORTED_MODULE_4__.Vector2(centroid.x - node.position.x - (node.size.x * 0.5), centroid.y - node.position.y - (node.size.y * 0.5));
        });
        return new _math_vector2__WEBPACK_IMPORTED_MODULE_4__.Vector2(centroid.x / this.nodes.length, centroid.y / this.nodes.length);
    }
    calculateCenterPoint() {
        if (this.nodes.length == 0)
            return new _math_vector2__WEBPACK_IMPORTED_MODULE_4__.Vector2(0, 0);
        let xMin = Number.MAX_SAFE_INTEGER;
        let xMax = Number.MIN_SAFE_INTEGER;
        let yMin = Number.MAX_SAFE_INTEGER;
        let yMax = Number.MIN_SAFE_INTEGER;
        this.nodes.forEach(node => {
            xMin = Math.min(node.position.x, xMin);
            yMin = Math.min(node.position.y, yMin);
            xMax = Math.max(node.position.x + node.size.x, xMax);
            yMax = Math.max(node.position.y + node.size.y, yMax);
        });
        let width = xMax - xMin;
        let height = yMax - yMin;
        return new _math_vector2__WEBPACK_IMPORTED_MODULE_4__.Vector2(-width * 0.5 - xMin, -height * 0.5 - yMin);
    }
}


/***/ }),

/***/ "./src/utils/text-utils.ts":
/*!*********************************!*\
  !*** ./src/utils/text-utils.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "insertSpacesBetweenCapitalizedWords": () => (/* binding */ insertSpacesBetweenCapitalizedWords),
/* harmony export */   "removePrefixB": () => (/* binding */ removePrefixB),
/* harmony export */   "capitalizeTerm": () => (/* binding */ capitalizeTerm),
/* harmony export */   "findFriendlyName": () => (/* binding */ findFriendlyName),
/* harmony export */   "prettifyText": () => (/* binding */ prettifyText),
/* harmony export */   "removeInsignificantTrailingZeros": () => (/* binding */ removeInsignificantTrailingZeros)
/* harmony export */ });
/* harmony import */ var _parser_node_friendly_names__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser/node-friendly-names */ "./src/parser/node-friendly-names.ts");

function insertSpacesBetweenCapitalizedWords(str) {
    str = str || '';
    return str.replace(/((?<=[a-z])[A-Z]+)/g, ' $1');
}
function removePrefixB(str) {
    return str.replace(/^b(?=[A-Z])/g, '');
}
function capitalizeTerm(str) {
    str = str.trim();
    return str.charAt(0).toUpperCase() + str.slice(1);
}
function findFriendlyName(str) {
    let firendlyName = _parser_node_friendly_names__WEBPACK_IMPORTED_MODULE_0__.NodeFriendlyNames[str];
    return firendlyName || str;
}
function prettifyText(str) {
    return capitalizeTerm(insertSpacesBetweenCapitalizedWords(removePrefixB(str).replace(/[_]/g, ' ')));
}
function removeInsignificantTrailingZeros(str) {
    let labelAsNumber = Number(str);
    if (isNaN(labelAsNumber)) {
        return str;
    }
    if (Number.isInteger(labelAsNumber)) {
        return labelAsNumber + ".0";
    }
    return labelAsNumber.toString();
}


/***/ }),

/***/ "./src/parser/enum-names.json":
/*!************************************!*\
  !*** ./src/parser/enum-names.json ***!
  \************************************/
/***/ ((module) => {

module.exports = JSON.parse('{"/Script/Engine.ESpawnActorCollisionHandlingMethod":{"Undefined":"Default","AlwaysSpawn":"Always Spawn, Ignore Collisions","AdjustIfPossibleButAlwaysSpawn":"Try to Adjust Location, But Always Spawn","AdjustIfPossibleButDontSpawnIfColliding":"Try to Adjust Location, Don\'t Spawn If Still Colliding","DontSpawnIfColliding":"Do Not Spawn"},"/Script/Engine.ETraceTypeQuery":{"TraceTypeQuery1":"Visibility","TraceTypeQuery2":"Camera"},"/Script/Engine.ECanBeCharacterBase":{"ECB_Yes":"Yes","ECB_No":"No","ECB_Owner":"(Owner)"},"/Script/Engine.ECollisionChannel":{"ECC_WorldStatic":"WorldStatic","ECC_WorldDynamic":"WorldDynamic","ECC_Pawn":"Pawn","ECC_Visibility":"Visibility","ECC_Camera":"Camera","ECC_PhysicsBody":"PhysicsBody","ECC_Vehicle":"Vehicle","ECC_Destructible":"Destructible"},"/Script/UMG.ESlateVisibility":{"Visible":"Visible","Collapsed":"Collapsed","Hidden":"Hidden","HitTestInvisible":"Not Hit-Testable (Self & All Children)","SelfHitTestInvisible":"Not Hit-Testable (Self Only)"}}');

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/create fake namespace object */
/******/ 	(() => {
/******/ 		var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);
/******/ 		var leafPrototypes;
/******/ 		// create a fake namespace object
/******/ 		// mode & 1: value is a module id, require it
/******/ 		// mode & 2: merge all properties of value into the ns
/******/ 		// mode & 4: return value when already ns object
/******/ 		// mode & 16: return value when it's Promise-like
/******/ 		// mode & 8|1: behave like require
/******/ 		__webpack_require__.t = function(value, mode) {
/******/ 			if(mode & 1) value = this(value);
/******/ 			if(mode & 8) return value;
/******/ 			if(typeof value === 'object' && value) {
/******/ 				if((mode & 4) && value.__esModule) return value;
/******/ 				if((mode & 16) && typeof value.then === 'function') return value;
/******/ 			}
/******/ 			var ns = Object.create(null);
/******/ 			__webpack_require__.r(ns);
/******/ 			var def = {};
/******/ 			leafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];
/******/ 			for(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {
/******/ 				Object.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));
/******/ 			}
/******/ 			def['default'] = () => (value);
/******/ 			__webpack_require__.d(ns, def);
/******/ 			return ns;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
(() => {
/*!*********************!*\
  !*** ./src/klee.ts ***!
  \*********************/
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Klee": () => (/* binding */ Klee),
/* harmony export */   "init": () => (/* binding */ init),
/* harmony export */   "get": () => (/* binding */ get)
/* harmony export */ });
/* harmony import */ var _application__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./application */ "./src/application.ts");

class Klee {
    constructor(canvas, app) {
        if (app !== undefined) {
            this.app = app;
        }
        else {
            this.app = _application__WEBPACK_IMPORTED_MODULE_0__.Application.createOrGet(canvas);
        }
    }
    display(blueprintText) {
        this.app.loadBlueprintIntoScene(blueprintText);
    }
    static getInstance(canvas) {
        let app = _application__WEBPACK_IMPORTED_MODULE_0__.Application.getInstance(canvas);
        if (app !== undefined) {
            return new Klee(canvas, app);
        }
        return undefined;
    }
    get value() {
        return this.app.getBlueprint();
    }
}
function init(canvas) {
    return new Klee(canvas);
}
function get(canvas) {
    return Klee.getInstance(canvas);
}
function initialize() {
    document.querySelectorAll('canvas.klee').forEach((canvas) => {
        new Klee(canvas);
    });
}
window.addEventListener("load", initialize);

})();

/******/ 	return __webpack_exports__;
/******/ })()
;
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,